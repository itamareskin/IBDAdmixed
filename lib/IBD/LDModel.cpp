/* Generated by Cython 0.17.4 on Sun Jul 28 22:18:04 2013 */

#define PY_SSIZE_T_CLEAN
#include "Python.h"
#ifndef Py_PYTHON_H
    #error Python headers needed to compile C extensions, please install development version of Python.
#elif PY_VERSION_HEX < 0x02040000
    #error Cython requires Python 2.4+.
#else
#include <stddef.h> /* For offsetof */
#ifndef offsetof
#define offsetof(type, member) ( (size_t) & ((type*)0) -> member )
#endif
#if !defined(WIN32) && !defined(MS_WINDOWS)
  #ifndef __stdcall
    #define __stdcall
  #endif
  #ifndef __cdecl
    #define __cdecl
  #endif
  #ifndef __fastcall
    #define __fastcall
  #endif
#endif
#ifndef DL_IMPORT
  #define DL_IMPORT(t) t
#endif
#ifndef DL_EXPORT
  #define DL_EXPORT(t) t
#endif
#ifndef PY_LONG_LONG
  #define PY_LONG_LONG LONG_LONG
#endif
#ifndef Py_HUGE_VAL
  #define Py_HUGE_VAL HUGE_VAL
#endif
#ifdef PYPY_VERSION
#define CYTHON_COMPILING_IN_PYPY 1
#define CYTHON_COMPILING_IN_CPYTHON 0
#else
#define CYTHON_COMPILING_IN_PYPY 0
#define CYTHON_COMPILING_IN_CPYTHON 1
#endif
#if PY_VERSION_HEX < 0x02050000
  typedef int Py_ssize_t;
  #define PY_SSIZE_T_MAX INT_MAX
  #define PY_SSIZE_T_MIN INT_MIN
  #define PY_FORMAT_SIZE_T ""
  #define CYTHON_FORMAT_SSIZE_T ""
  #define PyInt_FromSsize_t(z) PyInt_FromLong(z)
  #define PyInt_AsSsize_t(o)   __Pyx_PyInt_AsInt(o)
  #define PyNumber_Index(o)    ((PyNumber_Check(o) && !PyFloat_Check(o)) ? PyNumber_Int(o) : \
                                (PyErr_Format(PyExc_TypeError, \
                                              "expected index value, got %.200s", Py_TYPE(o)->tp_name), \
                                 (PyObject*)0))
  #define __Pyx_PyIndex_Check(o) (PyNumber_Check(o) && !PyFloat_Check(o) && \
                                  !PyComplex_Check(o))
  #define PyIndex_Check __Pyx_PyIndex_Check
  #define PyErr_WarnEx(category, message, stacklevel) PyErr_Warn(category, message)
  #define __PYX_BUILD_PY_SSIZE_T "i"
#else
  #define __PYX_BUILD_PY_SSIZE_T "n"
  #define CYTHON_FORMAT_SSIZE_T "z"
  #define __Pyx_PyIndex_Check PyIndex_Check
#endif
#if PY_VERSION_HEX < 0x02060000
  #define Py_REFCNT(ob) (((PyObject*)(ob))->ob_refcnt)
  #define Py_TYPE(ob)   (((PyObject*)(ob))->ob_type)
  #define Py_SIZE(ob)   (((PyVarObject*)(ob))->ob_size)
  #define PyVarObject_HEAD_INIT(type, size) \
          PyObject_HEAD_INIT(type) size,
  #define PyType_Modified(t)
  typedef struct {
     void *buf;
     PyObject *obj;
     Py_ssize_t len;
     Py_ssize_t itemsize;
     int readonly;
     int ndim;
     char *format;
     Py_ssize_t *shape;
     Py_ssize_t *strides;
     Py_ssize_t *suboffsets;
     void *internal;
  } Py_buffer;
  #define PyBUF_SIMPLE 0
  #define PyBUF_WRITABLE 0x0001
  #define PyBUF_FORMAT 0x0004
  #define PyBUF_ND 0x0008
  #define PyBUF_STRIDES (0x0010 | PyBUF_ND)
  #define PyBUF_C_CONTIGUOUS (0x0020 | PyBUF_STRIDES)
  #define PyBUF_F_CONTIGUOUS (0x0040 | PyBUF_STRIDES)
  #define PyBUF_ANY_CONTIGUOUS (0x0080 | PyBUF_STRIDES)
  #define PyBUF_INDIRECT (0x0100 | PyBUF_STRIDES)
  #define PyBUF_RECORDS (PyBUF_STRIDES | PyBUF_FORMAT | PyBUF_WRITABLE)
  #define PyBUF_FULL (PyBUF_INDIRECT | PyBUF_FORMAT | PyBUF_WRITABLE)
  typedef int (*getbufferproc)(PyObject *, Py_buffer *, int);
  typedef void (*releasebufferproc)(PyObject *, Py_buffer *);
#endif
#if PY_MAJOR_VERSION < 3
  #define __Pyx_BUILTIN_MODULE_NAME "__builtin__"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#else
  #define __Pyx_BUILTIN_MODULE_NAME "builtins"
  #define __Pyx_PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos) \
          PyCode_New(a, k, l, s, f, code, c, n, v, fv, cell, fn, name, fline, lnos)
#endif
#if PY_MAJOR_VERSION < 3 && PY_MINOR_VERSION < 6
  #define PyUnicode_FromString(s) PyUnicode_Decode(s, strlen(s), "UTF-8", "strict")
#endif
#if PY_MAJOR_VERSION >= 3
  #define Py_TPFLAGS_CHECKTYPES 0
  #define Py_TPFLAGS_HAVE_INDEX 0
#endif
#if (PY_VERSION_HEX < 0x02060000) || (PY_MAJOR_VERSION >= 3)
  #define Py_TPFLAGS_HAVE_NEWBUFFER 0
#endif
#if PY_VERSION_HEX > 0x03030000 && defined(PyUnicode_KIND)
  #define CYTHON_PEP393_ENABLED 1
  #define __Pyx_PyUnicode_READY(op)       (likely(PyUnicode_IS_READY(op)) ? \
                                              0 : _PyUnicode_Ready((PyObject *)(op)))
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_LENGTH(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) PyUnicode_READ_CHAR(u, i)
  #define __Pyx_PyUnicode_READ(k, d, i)   PyUnicode_READ(k, d, i)
#else
  #define CYTHON_PEP393_ENABLED 0
  #define __Pyx_PyUnicode_READY(op)       (0)
  #define __Pyx_PyUnicode_GET_LENGTH(u)   PyUnicode_GET_SIZE(u)
  #define __Pyx_PyUnicode_READ_CHAR(u, i) ((Py_UCS4)(PyUnicode_AS_UNICODE(u)[i]))
  #define __Pyx_PyUnicode_READ(k, d, i)   ((k=k), (Py_UCS4)(((Py_UNICODE*)d)[i]))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBaseString_Type            PyUnicode_Type
  #define PyStringObject               PyUnicodeObject
  #define PyString_Type                PyUnicode_Type
  #define PyString_Check               PyUnicode_Check
  #define PyString_CheckExact          PyUnicode_CheckExact
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PyBytesObject                PyStringObject
  #define PyBytes_Type                 PyString_Type
  #define PyBytes_Check                PyString_Check
  #define PyBytes_CheckExact           PyString_CheckExact
  #define PyBytes_FromString           PyString_FromString
  #define PyBytes_FromStringAndSize    PyString_FromStringAndSize
  #define PyBytes_FromFormat           PyString_FromFormat
  #define PyBytes_DecodeEscape         PyString_DecodeEscape
  #define PyBytes_AsString             PyString_AsString
  #define PyBytes_AsStringAndSize      PyString_AsStringAndSize
  #define PyBytes_Size                 PyString_Size
  #define PyBytes_AS_STRING            PyString_AS_STRING
  #define PyBytes_GET_SIZE             PyString_GET_SIZE
  #define PyBytes_Repr                 PyString_Repr
  #define PyBytes_Concat               PyString_Concat
  #define PyBytes_ConcatAndDel         PyString_ConcatAndDel
#endif
#if PY_VERSION_HEX < 0x02060000
  #define PySet_Check(obj)             PyObject_TypeCheck(obj, &PySet_Type)
  #define PyFrozenSet_Check(obj)       PyObject_TypeCheck(obj, &PyFrozenSet_Type)
#endif
#ifndef PySet_CheckExact
  #define PySet_CheckExact(obj)        (Py_TYPE(obj) == &PySet_Type)
#endif
#define __Pyx_TypeCheck(obj, type) PyObject_TypeCheck(obj, (PyTypeObject *)type)
#if PY_MAJOR_VERSION >= 3
  #define PyIntObject                  PyLongObject
  #define PyInt_Type                   PyLong_Type
  #define PyInt_Check(op)              PyLong_Check(op)
  #define PyInt_CheckExact(op)         PyLong_CheckExact(op)
  #define PyInt_FromString             PyLong_FromString
  #define PyInt_FromUnicode            PyLong_FromUnicode
  #define PyInt_FromLong               PyLong_FromLong
  #define PyInt_FromSize_t             PyLong_FromSize_t
  #define PyInt_FromSsize_t            PyLong_FromSsize_t
  #define PyInt_AsLong                 PyLong_AsLong
  #define PyInt_AS_LONG                PyLong_AS_LONG
  #define PyInt_AsSsize_t              PyLong_AsSsize_t
  #define PyInt_AsUnsignedLongMask     PyLong_AsUnsignedLongMask
  #define PyInt_AsUnsignedLongLongMask PyLong_AsUnsignedLongLongMask
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyBoolObject                 PyLongObject
#endif
#if PY_VERSION_HEX < 0x03020000
  typedef long Py_hash_t;
  #define __Pyx_PyInt_FromHash_t PyInt_FromLong
  #define __Pyx_PyInt_AsHash_t   PyInt_AsLong
#else
  #define __Pyx_PyInt_FromHash_t PyInt_FromSsize_t
  #define __Pyx_PyInt_AsHash_t   PyInt_AsSsize_t
#endif
#if (PY_MAJOR_VERSION < 3) || (PY_VERSION_HEX >= 0x03010300)
  #define __Pyx_PySequence_GetSlice(obj, a, b) PySequence_GetSlice(obj, a, b)
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) PySequence_SetSlice(obj, a, b, value)
  #define __Pyx_PySequence_DelSlice(obj, a, b) PySequence_DelSlice(obj, a, b)
#else
  #define __Pyx_PySequence_GetSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), (PyObject*)0) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_GetSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object is unsliceable", (obj)->ob_type->tp_name), (PyObject*)0)))
  #define __Pyx_PySequence_SetSlice(obj, a, b, value) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_SetSlice(obj, a, b, value)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice assignment", (obj)->ob_type->tp_name), -1)))
  #define __Pyx_PySequence_DelSlice(obj, a, b) (unlikely(!(obj)) ? \
        (PyErr_SetString(PyExc_SystemError, "null argument to internal routine"), -1) : \
        (likely((obj)->ob_type->tp_as_mapping) ? (PySequence_DelSlice(obj, a, b)) : \
            (PyErr_Format(PyExc_TypeError, "'%.200s' object doesn't support slice deletion", (obj)->ob_type->tp_name), -1)))
#endif
#if PY_MAJOR_VERSION >= 3
  #define PyMethod_New(func, self, klass) ((self) ? PyMethod_New(func, self) : PyInstanceMethod_New(func))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),((char *)(n)))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),((char *)(n)),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),((char *)(n)))
#else
  #define __Pyx_GetAttrString(o,n)   PyObject_GetAttrString((o),(n))
  #define __Pyx_SetAttrString(o,n,a) PyObject_SetAttrString((o),(n),(a))
  #define __Pyx_DelAttrString(o,n)   PyObject_DelAttrString((o),(n))
#endif
#if PY_VERSION_HEX < 0x02050000
  #define __Pyx_NAMESTR(n) ((char *)(n))
  #define __Pyx_DOCSTR(n)  ((char *)(n))
#else
  #define __Pyx_NAMESTR(n) (n)
  #define __Pyx_DOCSTR(n)  (n)
#endif


#if PY_MAJOR_VERSION >= 3
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#else
  #define __Pyx_PyNumber_Divide(x,y)         PyNumber_TrueDivide(x,y)
  #define __Pyx_PyNumber_InPlaceDivide(x,y)  PyNumber_InPlaceTrueDivide(x,y)
#endif

#ifndef __PYX_EXTERN_C
  #ifdef __cplusplus
    #define __PYX_EXTERN_C extern "C"
  #else
    #define __PYX_EXTERN_C extern
  #endif
#endif

#if defined(WIN32) || defined(MS_WINDOWS)
#define _USE_MATH_DEFINES
#endif
#include <math.h>
#define __PYX_HAVE__LDModel
#define __PYX_HAVE_API__LDModel
#include "string.h"
#include "structs.h"
#include "stdio.h"
#include "stdlib.h"
#include "numpy/arrayobject.h"
#include "numpy/ufuncobject.h"
#include "math.h"
#include "float.h"
#ifdef _OPENMP
#include <omp.h>
#endif /* _OPENMP */

#ifdef PYREX_WITHOUT_ASSERTIONS
#define CYTHON_WITHOUT_ASSERTIONS
#endif


/* inline attribute */
#ifndef CYTHON_INLINE
  #if defined(__GNUC__)
    #define CYTHON_INLINE __inline__
  #elif defined(_MSC_VER)
    #define CYTHON_INLINE __inline
  #elif defined (__STDC_VERSION__) && __STDC_VERSION__ >= 199901L
    #define CYTHON_INLINE inline
  #else
    #define CYTHON_INLINE
  #endif
#endif

/* unused attribute */
#ifndef CYTHON_UNUSED
# if defined(__GNUC__)
#   if !(defined(__cplusplus)) || (__GNUC__ > 3 || (__GNUC__ == 3 && __GNUC_MINOR__ >= 4))
#     define CYTHON_UNUSED __attribute__ ((__unused__))
#   else
#     define CYTHON_UNUSED
#   endif
# elif defined(__ICC) || (defined(__INTEL_COMPILER) && !defined(_MSC_VER))
#   define CYTHON_UNUSED __attribute__ ((__unused__))
# else
#   define CYTHON_UNUSED
# endif
#endif

typedef struct {PyObject **p; char *s; const long n; const char* encoding; const char is_unicode; const char is_str; const char intern; } __Pyx_StringTabEntry; /*proto*/


/* Type Conversion Predeclarations */

#define __Pyx_PyBytes_FromUString(s) PyBytes_FromString((char*)s)
#define __Pyx_PyBytes_AsUString(s)   ((unsigned char*) PyBytes_AsString(s))

#define __Pyx_Owned_Py_None(b) (Py_INCREF(Py_None), Py_None)
#define __Pyx_PyBool_FromLong(b) ((b) ? (Py_INCREF(Py_True), Py_True) : (Py_INCREF(Py_False), Py_False))
static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject*);
static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x);

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject*);
static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t);
static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject*);

#if CYTHON_COMPILING_IN_CPYTHON
#define __pyx_PyFloat_AsDouble(x) (PyFloat_CheckExact(x) ? PyFloat_AS_DOUBLE(x) : PyFloat_AsDouble(x))
#else
#define __pyx_PyFloat_AsDouble(x) PyFloat_AsDouble(x)
#endif
#define __pyx_PyFloat_AsFloat(x) ((float) __pyx_PyFloat_AsDouble(x))

#ifdef __GNUC__
  /* Test for GCC > 2.95 */
  #if __GNUC__ > 2 || (__GNUC__ == 2 && (__GNUC_MINOR__ > 95))
    #define likely(x)   __builtin_expect(!!(x), 1)
    #define unlikely(x) __builtin_expect(!!(x), 0)
  #else /* __GNUC__ > 2 ... */
    #define likely(x)   (x)
    #define unlikely(x) (x)
  #endif /* __GNUC__ > 2 ... */
#else /* __GNUC__ */
  #define likely(x)   (x)
  #define unlikely(x) (x)
#endif /* __GNUC__ */
    
static PyObject *__pyx_m;
static PyObject *__pyx_b;
static PyObject *__pyx_empty_tuple;
static PyObject *__pyx_empty_bytes;
static int __pyx_lineno;
static int __pyx_clineno = 0;
static const char * __pyx_cfilenm= __FILE__;
static const char *__pyx_filename;

#if !defined(CYTHON_CCOMPLEX)
  #if defined(__cplusplus)
    #define CYTHON_CCOMPLEX 1
  #elif defined(_Complex_I)
    #define CYTHON_CCOMPLEX 1
  #else
    #define CYTHON_CCOMPLEX 0
  #endif
#endif
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #include <complex>
  #else
    #include <complex.h>
  #endif
#endif
#if CYTHON_CCOMPLEX && !defined(__cplusplus) && defined(__sun__) && defined(__GNUC__)
  #undef _Complex_I
  #define _Complex_I 1.0fj
#endif


static const char *__pyx_f[] = {
  "LDModel.pyx",
  "numpy.pxd",
  "type.pxd",
};

/* "numpy.pxd":723
 * # in Cython to enable them only on the right systems.
 * 
 * ctypedef npy_int8       int8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 */
typedef npy_int8 __pyx_t_5numpy_int8_t;

/* "numpy.pxd":724
 * 
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t
 */
typedef npy_int16 __pyx_t_5numpy_int16_t;

/* "numpy.pxd":725
 * ctypedef npy_int8       int8_t
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_int64      int64_t
 * #ctypedef npy_int96      int96_t
 */
typedef npy_int32 __pyx_t_5numpy_int32_t;

/* "numpy.pxd":726
 * ctypedef npy_int16      int16_t
 * ctypedef npy_int32      int32_t
 * ctypedef npy_int64      int64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_int96      int96_t
 * #ctypedef npy_int128     int128_t
 */
typedef npy_int64 __pyx_t_5numpy_int64_t;

/* "numpy.pxd":730
 * #ctypedef npy_int128     int128_t
 * 
 * ctypedef npy_uint8      uint8_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 */
typedef npy_uint8 __pyx_t_5numpy_uint8_t;

/* "numpy.pxd":731
 * 
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t
 */
typedef npy_uint16 __pyx_t_5numpy_uint16_t;

/* "numpy.pxd":732
 * ctypedef npy_uint8      uint8_t
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uint64     uint64_t
 * #ctypedef npy_uint96     uint96_t
 */
typedef npy_uint32 __pyx_t_5numpy_uint32_t;

/* "numpy.pxd":733
 * ctypedef npy_uint16     uint16_t
 * ctypedef npy_uint32     uint32_t
 * ctypedef npy_uint64     uint64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_uint96     uint96_t
 * #ctypedef npy_uint128    uint128_t
 */
typedef npy_uint64 __pyx_t_5numpy_uint64_t;

/* "numpy.pxd":737
 * #ctypedef npy_uint128    uint128_t
 * 
 * ctypedef npy_float32    float32_t             # <<<<<<<<<<<<<<
 * ctypedef npy_float64    float64_t
 * #ctypedef npy_float80    float80_t
 */
typedef npy_float32 __pyx_t_5numpy_float32_t;

/* "numpy.pxd":738
 * 
 * ctypedef npy_float32    float32_t
 * ctypedef npy_float64    float64_t             # <<<<<<<<<<<<<<
 * #ctypedef npy_float80    float80_t
 * #ctypedef npy_float128   float128_t
 */
typedef npy_float64 __pyx_t_5numpy_float64_t;

/* "numpy.pxd":747
 * # The int types are mapped a bit surprising --
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t
 */
typedef npy_long __pyx_t_5numpy_int_t;

/* "numpy.pxd":748
 * # numpy.int corresponds to 'l' and numpy.long to 'q'
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longlong   longlong_t
 * 
 */
typedef npy_longlong __pyx_t_5numpy_long_t;

/* "numpy.pxd":749
 * ctypedef npy_long       int_t
 * ctypedef npy_longlong   long_t
 * ctypedef npy_longlong   longlong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_ulong      uint_t
 */
typedef npy_longlong __pyx_t_5numpy_longlong_t;

/* "numpy.pxd":751
 * ctypedef npy_longlong   longlong_t
 * 
 * ctypedef npy_ulong      uint_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t
 */
typedef npy_ulong __pyx_t_5numpy_uint_t;

/* "numpy.pxd":752
 * 
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t             # <<<<<<<<<<<<<<
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 */
typedef npy_ulonglong __pyx_t_5numpy_ulong_t;

/* "numpy.pxd":753
 * ctypedef npy_ulong      uint_t
 * ctypedef npy_ulonglong  ulong_t
 * ctypedef npy_ulonglong  ulonglong_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_intp       intp_t
 */
typedef npy_ulonglong __pyx_t_5numpy_ulonglong_t;

/* "numpy.pxd":755
 * ctypedef npy_ulonglong  ulonglong_t
 * 
 * ctypedef npy_intp       intp_t             # <<<<<<<<<<<<<<
 * ctypedef npy_uintp      uintp_t
 * 
 */
typedef npy_intp __pyx_t_5numpy_intp_t;

/* "numpy.pxd":756
 * 
 * ctypedef npy_intp       intp_t
 * ctypedef npy_uintp      uintp_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_double     float_t
 */
typedef npy_uintp __pyx_t_5numpy_uintp_t;

/* "numpy.pxd":758
 * ctypedef npy_uintp      uintp_t
 * 
 * ctypedef npy_double     float_t             # <<<<<<<<<<<<<<
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t
 */
typedef npy_double __pyx_t_5numpy_float_t;

/* "numpy.pxd":759
 * 
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t             # <<<<<<<<<<<<<<
 * ctypedef npy_longdouble longdouble_t
 * 
 */
typedef npy_double __pyx_t_5numpy_double_t;

/* "numpy.pxd":760
 * ctypedef npy_double     float_t
 * ctypedef npy_double     double_t
 * ctypedef npy_longdouble longdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cfloat      cfloat_t
 */
typedef npy_longdouble __pyx_t_5numpy_longdouble_t;
#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< float > __pyx_t_float_complex;
  #else
    typedef float _Complex __pyx_t_float_complex;
  #endif
#else
    typedef struct { float real, imag; } __pyx_t_float_complex;
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    typedef ::std::complex< double > __pyx_t_double_complex;
  #else
    typedef double _Complex __pyx_t_double_complex;
  #endif
#else
    typedef struct { double real, imag; } __pyx_t_double_complex;
#endif


/*--- Type declarations ---*/
struct __pyx_obj_7LDModel_LDModel;

/* "numpy.pxd":762
 * ctypedef npy_longdouble longdouble_t
 * 
 * ctypedef npy_cfloat      cfloat_t             # <<<<<<<<<<<<<<
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t
 */
typedef npy_cfloat __pyx_t_5numpy_cfloat_t;

/* "numpy.pxd":763
 * 
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t             # <<<<<<<<<<<<<<
 * ctypedef npy_clongdouble clongdouble_t
 * 
 */
typedef npy_cdouble __pyx_t_5numpy_cdouble_t;

/* "numpy.pxd":764
 * ctypedef npy_cfloat      cfloat_t
 * ctypedef npy_cdouble     cdouble_t
 * ctypedef npy_clongdouble clongdouble_t             # <<<<<<<<<<<<<<
 * 
 * ctypedef npy_cdouble     complex_t
 */
typedef npy_clongdouble __pyx_t_5numpy_clongdouble_t;

/* "numpy.pxd":766
 * ctypedef npy_clongdouble clongdouble_t
 * 
 * ctypedef npy_cdouble     complex_t             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 */
typedef npy_cdouble __pyx_t_5numpy_complex_t;
struct __pyx_opt_args_7LDModel_read_until_blank_line;

/* "LDModel.pyx":53
 *     bool get_likely_allele(state s)
 * 
 * cdef read_until_blank_line(file_name, first_line = None):             # <<<<<<<<<<<<<<
 *         buffer_size = 100
 *         blank_line = '\n'
 */
struct __pyx_opt_args_7LDModel_read_until_blank_line {
  int __pyx_n;
  PyObject *first_line;
};

/* "LDModel.pxd":37
 *     gen_map_entry create_gen_map_entry(int position, double recomb_rate, double genetic_dist)
 * 
 * cdef class LDModel(object):             # <<<<<<<<<<<<<<
 *     '''
 *     Hidden Markov Model for a single ancestral population
 */
struct __pyx_obj_7LDModel_LDModel {
  PyObject_HEAD
  struct __pyx_vtabstruct_7LDModel_LDModel *__pyx_vtab;
  double *_alphas;
  int g;
  double r;
  int K;
  double *_t_0_1;
  double *_t_1_0;
  int _win_size;
  char **_haplos;
  double **_ibd_prior;
  double ****_s;
  double *********_anc_trans;
  double ***_pi;
  state ***_states;
  double ****_trans;
  int ****_trans_idx;
  double ****_back_trans;
  int ****_back_trans_idx;
  char **_snp_ids;
  int **_layer_state_nums;
  int *_position;
  int _snp_num;
  int _nr_haplos;
  double **********_forward_probs_ibd_admx;
  double **********_backward_probs_ibd_admx;
  double *********_emission_prob_ibd_admx;
  double ******_top_level_ems_prob;
  double ******_top_level_forward_probs;
  double ******_top_level_backward_probs;
  gen_map_entry *_genetic_map;
  char *_log_dir;
  PyObject *_inner_probs_file;
  PyObject *_probs_file;
  PyObject *_trans_file;
  PyObject *_ibs_file;
  char *_prefix_string;
  bool *_ibs;
  bool *_chr1;
  bool *_chr2;
  bool *_chr3;
  bool *_chr4;
  char _allele_0;
  char _allele_1;
  bool _debug;
};



/* "LDModel.pyx":72
 *         return lines
 * 
 * cdef class LDModel(object):             # <<<<<<<<<<<<<<
 *     '''
 *     Hidden Markov Model for a single ancestral population
 */

struct __pyx_vtabstruct_7LDModel_LDModel {
  PyObject *(*set_ibd_trans_rate)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*set_alphas)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*set_chrs)(struct __pyx_obj_7LDModel_LDModel *, char *, char *, char *, char *, int __pyx_skip_dispatch);
  PyObject *(*generate_random_hap)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*calc_ibd_prior)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*calc_anc_trans)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*emission_prob_ibd_admx_mem_alloc)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*emission_prob_ibd_admx_mem_free)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*calc_emission_probs_ibd_admx)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*forward_probs_mem_alloc)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*forward_probs_mem_free)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*forward_probs_init)(struct __pyx_obj_7LDModel_LDModel *, int);
  PyObject *(*calc_forward_probs_ibd_admx)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*backward_probs_mem_alloc)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*backward_probs_init)(struct __pyx_obj_7LDModel_LDModel *, int);
  PyObject *(*calc_backward_probs_ibd_admx)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch);
  PyObject *(*top_level_alloc_mem)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*top_level_init)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*top_level_print)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*calc_top_level_forward_probs)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*calc_top_level_backward_probs)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*print_inner_probs)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, int __pyx_skip_dispatch);
  PyObject *(*calc_top_level_ems_probs_inner)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  PyObject *(*calc_top_level_ems_probs)(struct __pyx_obj_7LDModel_LDModel *, int, int, int, int, int __pyx_skip_dispatch);
  PyObject *(*posterior_top_level_decoding)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
  int (*start_snp)(struct __pyx_obj_7LDModel_LDModel *, int);
  int (*end_snp)(struct __pyx_obj_7LDModel_LDModel *, int);
  int (*get_num_windows)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch);
};
static struct __pyx_vtabstruct_7LDModel_LDModel *__pyx_vtabptr_7LDModel_LDModel;
#ifndef CYTHON_REFNANNY
  #define CYTHON_REFNANNY 0
#endif
#if CYTHON_REFNANNY
  typedef struct {
    void (*INCREF)(void*, PyObject*, int);
    void (*DECREF)(void*, PyObject*, int);
    void (*GOTREF)(void*, PyObject*, int);
    void (*GIVEREF)(void*, PyObject*, int);
    void* (*SetupContext)(const char*, int, const char*);
    void (*FinishContext)(void**);
  } __Pyx_RefNannyAPIStruct;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNanny = NULL;
  static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname); /*proto*/
  #define __Pyx_RefNannyDeclarations void *__pyx_refnanny = NULL;
#ifdef WITH_THREAD
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          if (acquire_gil) { \
              PyGILState_STATE __pyx_gilstate_save = PyGILState_Ensure(); \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
              PyGILState_Release(__pyx_gilstate_save); \
          } else { \
              __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__); \
          }
#else
  #define __Pyx_RefNannySetupContext(name, acquire_gil) \
          __pyx_refnanny = __Pyx_RefNanny->SetupContext((name), __LINE__, __FILE__)
#endif
  #define __Pyx_RefNannyFinishContext() \
          __Pyx_RefNanny->FinishContext(&__pyx_refnanny)
  #define __Pyx_INCREF(r)  __Pyx_RefNanny->INCREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_DECREF(r)  __Pyx_RefNanny->DECREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GOTREF(r)  __Pyx_RefNanny->GOTREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_GIVEREF(r) __Pyx_RefNanny->GIVEREF(__pyx_refnanny, (PyObject *)(r), __LINE__)
  #define __Pyx_XINCREF(r)  do { if((r) != NULL) {__Pyx_INCREF(r); }} while(0)
  #define __Pyx_XDECREF(r)  do { if((r) != NULL) {__Pyx_DECREF(r); }} while(0)
  #define __Pyx_XGOTREF(r)  do { if((r) != NULL) {__Pyx_GOTREF(r); }} while(0)
  #define __Pyx_XGIVEREF(r) do { if((r) != NULL) {__Pyx_GIVEREF(r);}} while(0)
#else
  #define __Pyx_RefNannyDeclarations
  #define __Pyx_RefNannySetupContext(name, acquire_gil)
  #define __Pyx_RefNannyFinishContext()
  #define __Pyx_INCREF(r) Py_INCREF(r)
  #define __Pyx_DECREF(r) Py_DECREF(r)
  #define __Pyx_GOTREF(r)
  #define __Pyx_GIVEREF(r)
  #define __Pyx_XINCREF(r) Py_XINCREF(r)
  #define __Pyx_XDECREF(r) Py_XDECREF(r)
  #define __Pyx_XGOTREF(r)
  #define __Pyx_XGIVEREF(r)
#endif /* CYTHON_REFNANNY */
#define __Pyx_CLEAR(r)    do { PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);} while(0)
#define __Pyx_XCLEAR(r)   do { if((r) != NULL) {PyObject* tmp = ((PyObject*)(r)); r = NULL; __Pyx_DECREF(tmp);}} while(0)

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name); /*proto*/

#ifndef CYTHON_PROFILE
  #define CYTHON_PROFILE 1
#endif
#ifndef CYTHON_PROFILE_REUSE_FRAME
  #define CYTHON_PROFILE_REUSE_FRAME 0
#endif
#if CYTHON_PROFILE
  #include "compile.h"
  #include "frameobject.h"
  #include "traceback.h"
  #if CYTHON_PROFILE_REUSE_FRAME
    #define CYTHON_FRAME_MODIFIER static
    #define CYTHON_FRAME_DEL
  #else
    #define CYTHON_FRAME_MODIFIER
    #define CYTHON_FRAME_DEL Py_DECREF(__pyx_frame)
  #endif
  #define __Pyx_TraceDeclarations                                  \
  static PyCodeObject *__pyx_frame_code = NULL;                      \
  CYTHON_FRAME_MODIFIER PyFrameObject *__pyx_frame = NULL;           \
  int __Pyx_use_tracing = 0;
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno)                            \
  if (unlikely(PyThreadState_GET()->use_tracing && PyThreadState_GET()->c_profilefunc)) {      \
      __Pyx_use_tracing = __Pyx_TraceSetupAndCall(&__pyx_frame_code, &__pyx_frame, funcname, srcfile, firstlineno);  \
  }
  #define __Pyx_TraceException()                                                           \
  if (unlikely(__Pyx_use_tracing( && PyThreadState_GET()->use_tracing && PyThreadState_GET()->c_profilefunc) {  \
      PyObject *exc_info = __Pyx_GetExceptionTuple();                                      \
      if (exc_info) {                                                                      \
          PyThreadState_GET()->c_profilefunc(                                              \
              PyThreadState_GET()->c_profileobj, __pyx_frame, PyTrace_EXCEPTION, exc_info);  \
          Py_DECREF(exc_info);                                                             \
      }                                                                                    \
  }
  #define __Pyx_TraceReturn(result)                                                  \
  if (unlikely(__Pyx_use_tracing) && PyThreadState_GET()->use_tracing && PyThreadState_GET()->c_profilefunc) {  \
      PyThreadState_GET()->c_profilefunc(                                            \
          PyThreadState_GET()->c_profileobj, __pyx_frame, PyTrace_RETURN, (PyObject*)result);     \
      CYTHON_FRAME_DEL;                                                               \
  }
  static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno); /*proto*/
  static int __Pyx_TraceSetupAndCall(PyCodeObject** code, PyFrameObject** frame, const char *funcname, const char *srcfile, int firstlineno); /*proto*/
#else
  #define __Pyx_TraceDeclarations
  #define __Pyx_TraceCall(funcname, srcfile, firstlineno)
  #define __Pyx_TraceException()
  #define __Pyx_TraceReturn(result)
#endif /* CYTHON_PROFILE */

static void __Pyx_RaiseArgtupleInvalid(const char* func_name, int exact,
    Py_ssize_t num_min, Py_ssize_t num_max, Py_ssize_t num_found); /*proto*/

static void __Pyx_RaiseDoubleKeywordsError(const char* func_name, PyObject* kw_name); /*proto*/

static int __Pyx_ParseOptionalKeywords(PyObject *kwds, PyObject **argnames[], \
    PyObject *kwds2, PyObject *values[], Py_ssize_t num_pos_args, \
    const char* function_name); /*proto*/

static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Generic(PyObject *o, PyObject* j) {
    PyObject *r;
    if (!j) return NULL;
    r = PyObject_GetItem(o, j);
    Py_DECREF(j);
    return r;
}
#define __Pyx_GetItemInt_List(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_List_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_List_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely((0 <= i) & (i < PyList_GET_SIZE(o)))) {
        PyObject *r = PyList_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    else if ((-PyList_GET_SIZE(o) <= i) & (i < 0)) {
        PyObject *r = PyList_GET_ITEM(o, PyList_GET_SIZE(o) + i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
#define __Pyx_GetItemInt_Tuple(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Tuple_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Tuple_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (likely((0 <= i) & (i < PyTuple_GET_SIZE(o)))) {
        PyObject *r = PyTuple_GET_ITEM(o, i);
        Py_INCREF(r);
        return r;
    }
    else if ((-PyTuple_GET_SIZE(o) <= i) & (i < 0)) {
        PyObject *r = PyTuple_GET_ITEM(o, PyTuple_GET_SIZE(o) + i);
        Py_INCREF(r);
        return r;
    }
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
#else
    return PySequence_GetItem(o, i);
#endif
}
#define __Pyx_GetItemInt(o, i, size, to_py_func) (((size) <= sizeof(Py_ssize_t)) ? \
                                                    __Pyx_GetItemInt_Fast(o, i) : \
                                                    __Pyx_GetItemInt_Generic(o, to_py_func(i)))
static CYTHON_INLINE PyObject *__Pyx_GetItemInt_Fast(PyObject *o, Py_ssize_t i) {
#if CYTHON_COMPILING_IN_CPYTHON
    if (PyList_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyList_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyList_GET_SIZE(o)))) {
            PyObject *r = PyList_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    }
    else if (PyTuple_CheckExact(o)) {
        Py_ssize_t n = (likely(i >= 0)) ? i : i + PyTuple_GET_SIZE(o);
        if (likely((n >= 0) & (n < PyTuple_GET_SIZE(o)))) {
            PyObject *r = PyTuple_GET_ITEM(o, n);
            Py_INCREF(r);
            return r;
        }
    } else {  /* inlined PySequence_GetItem() */
        PySequenceMethods *m = Py_TYPE(o)->tp_as_sequence;
        if (likely(m && m->sq_item)) {
            if (unlikely(i < 0) && likely(m->sq_length)) {
                Py_ssize_t l = m->sq_length(o);
                if (unlikely(l < 0)) return NULL;
                i += l;
            }
            return m->sq_item(o, i);
        }
    }
#else
    if (PySequence_Check(o)) {
        return PySequence_GetItem(o, i);
    }
#endif
    return __Pyx_GetItemInt_Generic(o, PyInt_FromSsize_t(i));
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb); /*proto*/
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb); /*proto*/

static double __Pyx__PyObject_AsDouble(PyObject* obj); /* proto */
#if CYTHON_COMPILING_IN_PYPY
#define __Pyx_PyObject_AsDouble(obj) \
(likely(PyFloat_CheckExact(obj)) ? PyFloat_AS_DOUBLE(obj) : \
 likely(PyInt_CheckExact(obj)) ? \
 PyFloat_AsDouble(obj) : __Pyx__PyObject_AsDouble(obj))
#else
#define __Pyx_PyObject_AsDouble(obj) \
((likely(PyFloat_CheckExact(obj))) ? \
 PyFloat_AS_DOUBLE(obj) : __Pyx__PyObject_AsDouble(obj))
#endif

#if CYTHON_COMPILING_IN_CPYTHON
static CYTHON_INLINE int __Pyx_PyList_Append(PyObject* list, PyObject* x) {
    PyListObject* L = (PyListObject*) list;
    Py_ssize_t len = Py_SIZE(list);
    if (likely(L->allocated > len)) {
        Py_INCREF(x);
        PyList_SET_ITEM(list, len, x);
        Py_SIZE(list) = len+1;
        return 0;
    }
    return PyList_Append(list, x);
}
#else
#define __Pyx_PyList_Append(L,x) PyList_Append(L,x)
#endif

static CYTHON_INLINE int __Pyx_mod_int(int, int); /* proto */

static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected);

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index);

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void);

static CYTHON_INLINE int __Pyx_IterFinish(void); /*proto*/

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected); /*proto*/

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type); /*proto*/

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb); /*proto*/
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb); /*proto*/

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level); /*proto*/

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name);

static int __Pyx_Print(PyObject*, PyObject *, int); /*proto*/
#if CYTHON_COMPILING_IN_PYPY || PY_MAJOR_VERSION >= 3
static PyObject* __pyx_print = 0;
static PyObject* __pyx_print_kwargs = 0;
#endif

static int __Pyx_PrintOne(PyObject* stream, PyObject *o); /*proto*/

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    #define __Pyx_CREAL(z) ((z).real())
    #define __Pyx_CIMAG(z) ((z).imag())
  #else
    #define __Pyx_CREAL(z) (__real__(z))
    #define __Pyx_CIMAG(z) (__imag__(z))
  #endif
#else
    #define __Pyx_CREAL(z) ((z).real)
    #define __Pyx_CIMAG(z) ((z).imag)
#endif
#if defined(_WIN32) && defined(__cplusplus) && CYTHON_CCOMPLEX
    #define __Pyx_SET_CREAL(z,x) ((z).real(x))
    #define __Pyx_SET_CIMAG(z,y) ((z).imag(y))
#else
    #define __Pyx_SET_CREAL(z,x) __Pyx_CREAL(z) = (x)
    #define __Pyx_SET_CIMAG(z,y) __Pyx_CIMAG(z) = (y)
#endif

static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float, float);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eqf(a, b)   ((a)==(b))
    #define __Pyx_c_sumf(a, b)  ((a)+(b))
    #define __Pyx_c_difff(a, b) ((a)-(b))
    #define __Pyx_c_prodf(a, b) ((a)*(b))
    #define __Pyx_c_quotf(a, b) ((a)/(b))
    #define __Pyx_c_negf(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zerof(z) ((z)==(float)0)
    #define __Pyx_c_conjf(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_absf(z)     (::std::abs(z))
        #define __Pyx_c_powf(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zerof(z) ((z)==0)
    #define __Pyx_c_conjf(z)    (conjf(z))
    #if 1
        #define __Pyx_c_absf(z)     (cabsf(z))
        #define __Pyx_c_powf(a, b)  (cpowf(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex, __pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex);
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex);
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex);
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex);
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex, __pyx_t_float_complex);
    #endif
#endif

static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double, double);

#if CYTHON_CCOMPLEX
    #define __Pyx_c_eq(a, b)   ((a)==(b))
    #define __Pyx_c_sum(a, b)  ((a)+(b))
    #define __Pyx_c_diff(a, b) ((a)-(b))
    #define __Pyx_c_prod(a, b) ((a)*(b))
    #define __Pyx_c_quot(a, b) ((a)/(b))
    #define __Pyx_c_neg(a)     (-(a))
  #ifdef __cplusplus
    #define __Pyx_c_is_zero(z) ((z)==(double)0)
    #define __Pyx_c_conj(z)    (::std::conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (::std::abs(z))
        #define __Pyx_c_pow(a, b)  (::std::pow(a, b))
    #endif
  #else
    #define __Pyx_c_is_zero(z) ((z)==0)
    #define __Pyx_c_conj(z)    (conj(z))
    #if 1
        #define __Pyx_c_abs(z)     (cabs(z))
        #define __Pyx_c_pow(a, b)  (cpow(a, b))
    #endif
 #endif
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex, __pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex);
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex);
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex);
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex);
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex, __pyx_t_double_complex);
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject *);

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject *);

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject *);

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject *);

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject *);

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject *);

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject *);

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject *);

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject *);

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject *);

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject *);

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject *);

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject *);

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject *);

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject *);

static void __Pyx_WriteUnraisable(const char *name, int clineno,
                                  int lineno, const char *filename); /*proto*/

static int __Pyx_check_binary_version(void);

static int __Pyx_SetVtable(PyObject *dict, void *vtable); /*proto*/

#if !defined(__Pyx_PyIdentifier_FromString)
#if PY_MAJOR_VERSION < 3
  #define __Pyx_PyIdentifier_FromString(s) PyString_FromString(s)
#else
  #define __Pyx_PyIdentifier_FromString(s) PyUnicode_FromString(s)
#endif
#endif

static PyObject *__Pyx_ImportModule(const char *name); /*proto*/

static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name, size_t size, int strict);  /*proto*/

typedef struct {
    int code_line;
    PyCodeObject* code_object;
} __Pyx_CodeObjectCacheEntry;
struct __Pyx_CodeObjectCache {
    int count;
    int max_count;
    __Pyx_CodeObjectCacheEntry* entries;
};
static struct __Pyx_CodeObjectCache __pyx_code_cache = {0,0,NULL};
static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line);
static PyCodeObject *__pyx_find_code_object(int code_line);
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object);

static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename); /*proto*/

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t); /*proto*/


/* Module declarations from 'libcpp' */

/* Module declarations from 'cpython.buffer' */

/* Module declarations from 'cpython.ref' */

/* Module declarations from 'libc.stdio' */

/* Module declarations from 'cpython.object' */

/* Module declarations from '__builtin__' */

/* Module declarations from 'cpython.type' */
static PyTypeObject *__pyx_ptype_7cpython_4type_type = 0;

/* Module declarations from 'libc.stdlib' */

/* Module declarations from 'numpy' */

/* Module declarations from 'numpy' */
static PyTypeObject *__pyx_ptype_5numpy_dtype = 0;
static PyTypeObject *__pyx_ptype_5numpy_flatiter = 0;
static PyTypeObject *__pyx_ptype_5numpy_broadcast = 0;
static PyTypeObject *__pyx_ptype_5numpy_ndarray = 0;
static PyTypeObject *__pyx_ptype_5numpy_ufunc = 0;
static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *, char *, char *, int *); /*proto*/

/* Module declarations from 'libc.math' */

/* Module declarations from 'libc.float' */

/* Module declarations from 'LDModel' */
static PyTypeObject *__pyx_ptype_7LDModel_LDModel = 0;
static double __pyx_v_7LDModel_eps;
static PyObject *__pyx_f_7LDModel_read_until_blank_line(PyObject *, struct __pyx_opt_args_7LDModel_read_until_blank_line *__pyx_optional_args); /*proto*/
#define __Pyx_MODULE_NAME "LDModel"
int __pyx_module_is_main_LDModel = 0;

/* Implementation of 'LDModel' */
static PyObject *__pyx_builtin_range;
static PyObject *__pyx_builtin_open;
static PyObject *__pyx_builtin_chr;
static PyObject *__pyx_builtin_exit;
static PyObject *__pyx_builtin_sum;
static PyObject *__pyx_builtin_xrange;
static PyObject *__pyx_builtin_reversed;
static PyObject *__pyx_builtin_ValueError;
static PyObject *__pyx_builtin_RuntimeError;
static int __pyx_pf_7LDModel_7LDModel___cinit__(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_snp_num, int __pyx_v_k, int __pyx_v_g, int __pyx_v_win_size, char *__pyx_v_log_dir, bool __pyx_v_debug); /* proto */
static void __pyx_pf_7LDModel_7LDModel_2__dealloc__(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_4set_ibd_trans_rate(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc, PyObject *__pyx_v_t_0_1, PyObject *__pyx_v_t_1_0); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_6set_alphas(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_alphas); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_8set_chrs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, char *__pyx_v_chr1, char *__pyx_v_chr2, char *__pyx_v_chr3, char *__pyx_v_chr4); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_10set_prefix_string(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, char *__pyx_v_new_prefix_string); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_12read_map(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_map_file_name); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_14read_genetic_map(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_genetic_map_file_name); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_16read_haplos(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_file_name); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_18read_from_bgl_file(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_file_name, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_20set_ibs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_ibs_dic); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_22get_haplo_num(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_24get_snp_num(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_26get_haplo(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_hap_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_28get_layer_node_nums(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_30get_node_edges(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_32get_node_edges_back(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_34get_node_ems_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_36get_trans_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_38get_forward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_40print_transitions(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_42generate_random_hap(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_anc); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_44calc_ibd_prior(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_46calc_anc_trans(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_48emission_prob_ibd_admx_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_50emission_prob_ibd_admx_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_52calc_emission_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_54forward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_56forward_probs_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_58calc_forward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_60backward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_62calc_backward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_64top_level_alloc_mem(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_66top_level_init(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_68top_level_print(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_70print_inner_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_win_idx); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_72calc_top_level_ems_probs_inner(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_74calc_top_level_ems_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_hap_idx1, int __pyx_v_hap_idx2, int __pyx_v_hap_idx3, int __pyx_v_hap_idx4); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_76calc_top_level_forward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_78calc_top_level_backward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_80posterior_top_level_decoding(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static PyObject *__pyx_pf_7LDModel_7LDModel_82get_num_windows(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self); /* proto */
static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /* proto */
static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info); /* proto */
static char __pyx_k_1[] = "\n";
static char __pyx_k_2[] = "allocated mem";
static char __pyx_k_3[] = "DEBUG!";
static char __pyx_k_4[] = "/inner.probs.txt";
static char __pyx_k_5[] = "/probs.txt";
static char __pyx_k_6[] = "/trans.txt";
static char __pyx_k_7[] = "/ibs.txt";
static char __pyx_k_8[] = "wrong number of alphas";
static char __pyx_k_9[] = "unidentified allele: ";
static char __pyx_k_14[] = "the file: ";
static char __pyx_k_15[] = " does not exist!";
static char __pyx_k_17[] = "reading from map file: ";
static char __pyx_k_18[] = " ";
static char __pyx_k_22[] = "reading from genetic map file: ";
static char __pyx_k_27[] = "bad number of haplotypes. quitting...";
static char __pyx_k_29[] = "reading from haplos file: ";
static char __pyx_k_31[] = "reading from bgl model file: ";
static char __pyx_k_32[] = "\t";
static char __pyx_k_38[] = "Finished reading beagle file.";
static char __pyx_k_40[] = "layer: ";
static char __pyx_k_41[] = "node: ";
static char __pyx_k_42[] = "snp ancestry node next_node transition\n";
static char __pyx_k_44[] = "";
static char __pyx_k_46[] = "generating haplotype for layer: ";
static char __pyx_k_48[] = "emission_prob_ibd_admx_mem_alloc";
static char __pyx_k_49[] = "emission_prob_ibd_admx_mem_free";
static char __pyx_k_50[] = "calc_emission_probs_ibd_admx";
static char __pyx_k_51[] = "forward_probs_mem_alloc";
static char __pyx_k_52[] = "forward_probs_mem_free";
static char __pyx_k_53[] = "calc_forward_probs_ibd_admx";
static char __pyx_k_54[] = "backward_probs_mem_alloc";
static char __pyx_k_55[] = "calc_backward_probs_ibd_admx";
static char __pyx_k_56[] = "ind1 ind2 win admx1 admx2 admx3 admx4 ibd forward backward gamma emission alpha1 alpha2 alpha3 alpha4 s1 s2 s3 s4\n";
static char __pyx_k_58[] = "calc_top_level_ems_probs_inner";
static char __pyx_k_59[] = "ind1 ind2 snp admx1 admx2 admx3 admx4 node1 node2 node3 node4 ibd forward emission\n";
static char __pyx_k_61[] = "calc_top_level_ems_probs";
static char __pyx_k_62[] = "calc_top_level_forward_probs";
static char __pyx_k_63[] = "calc_top_level_backward_probs";
static char __pyx_k_64[] = "posterior_top_level_decoding";
static char __pyx_k_65[] = "ndarray is not C contiguous";
static char __pyx_k_67[] = "ndarray is not Fortran contiguous";
static char __pyx_k_69[] = "Non-native byte order not supported";
static char __pyx_k_71[] = "unknown dtype code in numpy.pxd (%d)";
static char __pyx_k_72[] = "Format string allocated too short, see comment in numpy.pxd";
static char __pyx_k_75[] = "Format string allocated too short.";
static char __pyx_k_77[] = "IBD.cIBD";
static char __pyx_k_78[] = "bx.intervals";
static char __pyx_k__0[] = "0";
static char __pyx_k__1[] = "1";
static char __pyx_k__B[] = "B";
static char __pyx_k__H[] = "H";
static char __pyx_k__I[] = "I";
static char __pyx_k__L[] = "L";
static char __pyx_k__O[] = "O";
static char __pyx_k__Q[] = "Q";
static char __pyx_k__b[] = "b";
static char __pyx_k__d[] = "d";
static char __pyx_k__f[] = "f";
static char __pyx_k__g[] = "g";
static char __pyx_k__h[] = "h";
static char __pyx_k__i[] = "i";
static char __pyx_k__k[] = "k";
static char __pyx_k__l[] = "l";
static char __pyx_k__q[] = "q";
static char __pyx_k__w[] = "w";
static char __pyx_k__Zd[] = "Zd";
static char __pyx_k__Zf[] = "Zf";
static char __pyx_k__Zg[] = "Zg";
static char __pyx_k__np[] = "np";
static char __pyx_k__os[] = "os";
static char __pyx_k__anc[] = "anc";
static char __pyx_k__chr[] = "chr";
static char __pyx_k__sum[] = "sum";
static char __pyx_k__chr1[] = "chr1";
static char __pyx_k__chr2[] = "chr2";
static char __pyx_k__chr3[] = "chr3";
static char __pyx_k__chr4[] = "chr4";
static char __pyx_k__exit[] = "exit";
static char __pyx_k__find[] = "find";
static char __pyx_k__math[] = "math";
static char __pyx_k__open[] = "open";
static char __pyx_k__path[] = "path";
static char __pyx_k__array[] = "array";
static char __pyx_k__close[] = "close";
static char __pyx_k__debug[] = "debug";
static char __pyx_k__numpy[] = "numpy";
static char __pyx_k__range[] = "range";
static char __pyx_k__split[] = "split";
static char __pyx_k__t_0_1[] = "t_0_1";
static char __pyx_k__t_1_0[] = "t_1_0";
static char __pyx_k__write[] = "write";
static char __pyx_k__cumsum[] = "cumsum";
static char __pyx_k__exists[] = "exists";
static char __pyx_k__islice[] = "islice";
static char __pyx_k__median[] = "median";
static char __pyx_k__random[] = "random";
static char __pyx_k__sample[] = "sample";
static char __pyx_k__xrange[] = "xrange";
static char __pyx_k__log_dir[] = "log_dir";
static char __pyx_k__snp_num[] = "snp_num";
static char __pyx_k__Interval[] = "Interval";
static char __pyx_k____exit__[] = "__exit__";
static char __pyx_k____main__[] = "__main__";
static char __pyx_k____test__[] = "__test__";
static char __pyx_k__cPairIBD[] = "cPairIBD";
static char __pyx_k__hap_idx1[] = "hap_idx1";
static char __pyx_k__hap_idx2[] = "hap_idx2";
static char __pyx_k__hap_idx3[] = "hap_idx3";
static char __pyx_k__hap_idx4[] = "hap_idx4";
static char __pyx_k__readline[] = "readline";
static char __pyx_k__reversed[] = "reversed";
static char __pyx_k__set_chrs[] = "set_chrs";
static char __pyx_k__win_size[] = "win_size";
static char __pyx_k____enter__[] = "__enter__";
static char __pyx_k__file_name[] = "file_name";
static char __pyx_k__itertools[] = "itertools";
static char __pyx_k__ValueError[] = "ValueError";
static char __pyx_k__set_alphas[] = "set_alphas";
static char __pyx_k__xreadlines[] = "xreadlines";
static char __pyx_k__IntervalTree[] = "IntervalTree";
static char __pyx_k__RuntimeError[] = "RuntimeError";
static char __pyx_k__add_interval[] = "add_interval";
static char __pyx_k__searchsorted[] = "searchsorted";
static char __pyx_k___forward_probs[] = "_forward_probs";
static char __pyx_k__calc_anc_trans[] = "calc_anc_trans";
static char __pyx_k__calc_ibd_prior[] = "calc_ibd_prior";
static char __pyx_k__top_level_init[] = "top_level_init";
static char __pyx_k__get_num_windows[] = "get_num_windows";
static char __pyx_k__merge_intervals[] = "merge_intervals";
static char __pyx_k__top_level_print[] = "top_level_print";
static char __pyx_k__print_inner_probs[] = "print_inner_probs";
static char __pyx_k__set_ibd_trans_rate[] = "set_ibd_trans_rate";
static char __pyx_k__generate_random_hap[] = "generate_random_hap";
static char __pyx_k__top_level_alloc_mem[] = "top_level_alloc_mem";
static PyObject *__pyx_kp_s_1;
static PyObject *__pyx_kp_s_14;
static PyObject *__pyx_kp_s_15;
static PyObject *__pyx_kp_s_17;
static PyObject *__pyx_kp_s_18;
static PyObject *__pyx_kp_s_2;
static PyObject *__pyx_kp_s_22;
static PyObject *__pyx_kp_s_27;
static PyObject *__pyx_kp_s_29;
static PyObject *__pyx_kp_s_3;
static PyObject *__pyx_kp_s_31;
static PyObject *__pyx_kp_s_32;
static PyObject *__pyx_kp_s_38;
static PyObject *__pyx_kp_s_4;
static PyObject *__pyx_kp_s_40;
static PyObject *__pyx_kp_s_41;
static PyObject *__pyx_kp_s_42;
static PyObject *__pyx_kp_s_44;
static PyObject *__pyx_kp_s_46;
static PyObject *__pyx_n_s_48;
static PyObject *__pyx_n_s_49;
static PyObject *__pyx_kp_s_5;
static PyObject *__pyx_n_s_50;
static PyObject *__pyx_n_s_51;
static PyObject *__pyx_n_s_52;
static PyObject *__pyx_n_s_53;
static PyObject *__pyx_n_s_54;
static PyObject *__pyx_n_s_55;
static PyObject *__pyx_kp_s_56;
static PyObject *__pyx_n_s_58;
static PyObject *__pyx_kp_s_59;
static PyObject *__pyx_kp_s_6;
static PyObject *__pyx_n_s_61;
static PyObject *__pyx_n_s_62;
static PyObject *__pyx_n_s_63;
static PyObject *__pyx_n_s_64;
static PyObject *__pyx_kp_u_65;
static PyObject *__pyx_kp_u_67;
static PyObject *__pyx_kp_u_69;
static PyObject *__pyx_kp_s_7;
static PyObject *__pyx_kp_u_71;
static PyObject *__pyx_kp_u_72;
static PyObject *__pyx_kp_u_75;
static PyObject *__pyx_n_s_77;
static PyObject *__pyx_n_s_78;
static PyObject *__pyx_kp_s_8;
static PyObject *__pyx_kp_s_9;
static PyObject *__pyx_kp_s__0;
static PyObject *__pyx_kp_s__1;
static PyObject *__pyx_n_s__Interval;
static PyObject *__pyx_n_s__IntervalTree;
static PyObject *__pyx_n_s__RuntimeError;
static PyObject *__pyx_n_s__ValueError;
static PyObject *__pyx_n_s____enter__;
static PyObject *__pyx_n_s____exit__;
static PyObject *__pyx_n_s____main__;
static PyObject *__pyx_n_s____test__;
static PyObject *__pyx_n_s___forward_probs;
static PyObject *__pyx_n_s__add_interval;
static PyObject *__pyx_n_s__anc;
static PyObject *__pyx_n_s__array;
static PyObject *__pyx_n_s__cPairIBD;
static PyObject *__pyx_n_s__calc_anc_trans;
static PyObject *__pyx_n_s__calc_ibd_prior;
static PyObject *__pyx_n_s__chr;
static PyObject *__pyx_n_s__chr1;
static PyObject *__pyx_n_s__chr2;
static PyObject *__pyx_n_s__chr3;
static PyObject *__pyx_n_s__chr4;
static PyObject *__pyx_n_s__close;
static PyObject *__pyx_n_s__cumsum;
static PyObject *__pyx_n_s__debug;
static PyObject *__pyx_n_s__exists;
static PyObject *__pyx_n_s__exit;
static PyObject *__pyx_n_s__file_name;
static PyObject *__pyx_n_s__find;
static PyObject *__pyx_n_s__g;
static PyObject *__pyx_n_s__generate_random_hap;
static PyObject *__pyx_n_s__get_num_windows;
static PyObject *__pyx_n_s__hap_idx1;
static PyObject *__pyx_n_s__hap_idx2;
static PyObject *__pyx_n_s__hap_idx3;
static PyObject *__pyx_n_s__hap_idx4;
static PyObject *__pyx_n_s__islice;
static PyObject *__pyx_n_s__itertools;
static PyObject *__pyx_n_s__k;
static PyObject *__pyx_n_s__log_dir;
static PyObject *__pyx_n_s__math;
static PyObject *__pyx_n_s__median;
static PyObject *__pyx_n_s__merge_intervals;
static PyObject *__pyx_n_s__np;
static PyObject *__pyx_n_s__numpy;
static PyObject *__pyx_n_s__open;
static PyObject *__pyx_n_s__os;
static PyObject *__pyx_n_s__path;
static PyObject *__pyx_n_s__print_inner_probs;
static PyObject *__pyx_n_s__random;
static PyObject *__pyx_n_s__range;
static PyObject *__pyx_n_s__readline;
static PyObject *__pyx_n_s__reversed;
static PyObject *__pyx_n_s__sample;
static PyObject *__pyx_n_s__searchsorted;
static PyObject *__pyx_n_s__set_alphas;
static PyObject *__pyx_n_s__set_chrs;
static PyObject *__pyx_n_s__set_ibd_trans_rate;
static PyObject *__pyx_n_s__snp_num;
static PyObject *__pyx_n_s__split;
static PyObject *__pyx_n_s__sum;
static PyObject *__pyx_n_s__t_0_1;
static PyObject *__pyx_n_s__t_1_0;
static PyObject *__pyx_n_s__top_level_alloc_mem;
static PyObject *__pyx_n_s__top_level_init;
static PyObject *__pyx_n_s__top_level_print;
static PyObject *__pyx_n_s__w;
static PyObject *__pyx_n_s__win_size;
static PyObject *__pyx_n_s__write;
static PyObject *__pyx_n_s__xrange;
static PyObject *__pyx_n_s__xreadlines;
static PyObject *__pyx_int_0;
static PyObject *__pyx_int_1;
static PyObject *__pyx_int_2;
static PyObject *__pyx_int_3;
static PyObject *__pyx_int_4;
static PyObject *__pyx_int_neg_1;
static PyObject *__pyx_int_15;
static PyObject *__pyx_k_tuple_10;
static PyObject *__pyx_k_tuple_11;
static PyObject *__pyx_k_tuple_12;
static PyObject *__pyx_k_tuple_13;
static PyObject *__pyx_k_tuple_16;
static PyObject *__pyx_k_tuple_19;
static PyObject *__pyx_k_tuple_20;
static PyObject *__pyx_k_tuple_21;
static PyObject *__pyx_k_tuple_23;
static PyObject *__pyx_k_tuple_24;
static PyObject *__pyx_k_tuple_25;
static PyObject *__pyx_k_tuple_26;
static PyObject *__pyx_k_tuple_28;
static PyObject *__pyx_k_tuple_30;
static PyObject *__pyx_k_tuple_33;
static PyObject *__pyx_k_tuple_34;
static PyObject *__pyx_k_tuple_35;
static PyObject *__pyx_k_tuple_36;
static PyObject *__pyx_k_tuple_37;
static PyObject *__pyx_k_tuple_39;
static PyObject *__pyx_k_tuple_43;
static PyObject *__pyx_k_tuple_45;
static PyObject *__pyx_k_tuple_47;
static PyObject *__pyx_k_tuple_57;
static PyObject *__pyx_k_tuple_60;
static PyObject *__pyx_k_tuple_66;
static PyObject *__pyx_k_tuple_68;
static PyObject *__pyx_k_tuple_70;
static PyObject *__pyx_k_tuple_73;
static PyObject *__pyx_k_tuple_74;
static PyObject *__pyx_k_tuple_76;

/* "LDModel.pyx":53
 *     bool get_likely_allele(state s)
 * 
 * cdef read_until_blank_line(file_name, first_line = None):             # <<<<<<<<<<<<<<
 *         buffer_size = 100
 *         blank_line = '\n'
 */

static PyObject *__pyx_f_7LDModel_read_until_blank_line(PyObject *__pyx_v_file_name, struct __pyx_opt_args_7LDModel_read_until_blank_line *__pyx_optional_args) {
  PyObject *__pyx_v_first_line = ((PyObject *)Py_None);
  long __pyx_v_buffer_size;
  PyObject *__pyx_v_blank_line = NULL;
  PyObject *__pyx_v_lines = NULL;
  PyObject *__pyx_v_line = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("read_until_blank_line", 0);
  __Pyx_TraceCall("read_until_blank_line", __pyx_f[0], 53);
  if (__pyx_optional_args) {
    if (__pyx_optional_args->__pyx_n > 0) {
      __pyx_v_first_line = __pyx_optional_args->first_line;
    }
  }

  /* "LDModel.pyx":54
 * 
 * cdef read_until_blank_line(file_name, first_line = None):
 *         buffer_size = 100             # <<<<<<<<<<<<<<
 *         blank_line = '\n'
 *         # read a buffer_size of lines from the file
 */
  __pyx_v_buffer_size = 100;

  /* "LDModel.pyx":55
 * cdef read_until_blank_line(file_name, first_line = None):
 *         buffer_size = 100
 *         blank_line = '\n'             # <<<<<<<<<<<<<<
 *         # read a buffer_size of lines from the file
 *         if first_line == None:
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_1));
  __pyx_v_blank_line = ((PyObject *)__pyx_kp_s_1);

  /* "LDModel.pyx":57
 *         blank_line = '\n'
 *         # read a buffer_size of lines from the file
 *         if first_line == None:             # <<<<<<<<<<<<<<
 *             lines = list(islice(file_name, buffer_size))
 *         else:
 */
  __pyx_t_1 = PyObject_RichCompare(__pyx_v_first_line, Py_None, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_2 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 57; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  if (__pyx_t_2) {

    /* "LDModel.pyx":58
 *         # read a buffer_size of lines from the file
 *         if first_line == None:
 *             lines = list(islice(file_name, buffer_size))             # <<<<<<<<<<<<<<
 *         else:
 *             lines = list(islice(file_name, first_line, buffer_size))
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_3 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_4, 1, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 58; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_v_lines = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "LDModel.pyx":60
 *             lines = list(islice(file_name, buffer_size))
 *         else:
 *             lines = list(islice(file_name, first_line, buffer_size))             # <<<<<<<<<<<<<<
 *         # read some more lines until a blank line is reached
 *         while True:
 */
    __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_4 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __Pyx_INCREF(__pyx_v_first_line);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_v_first_line);
    __Pyx_GIVEREF(__pyx_v_first_line);
    PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 60; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_v_lines = ((PyObject*)__pyx_t_4);
    __pyx_t_4 = 0;
  }
  __pyx_L3:;

  /* "LDModel.pyx":62
 *             lines = list(islice(file_name, first_line, buffer_size))
 *         # read some more lines until a blank line is reached
 *         while True:             # <<<<<<<<<<<<<<
 *             line = list(islice(file_name, 1))
 *             if not line:
 */
  while (1) {
    if (!1) break;

    /* "LDModel.pyx":63
 *         # read some more lines until a blank line is reached
 *         while True:
 *             line = list(islice(file_name, 1))             # <<<<<<<<<<<<<<
 *             if not line:
 *                 lines += [blank_line]
 */
    __pyx_t_4 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __Pyx_INCREF(__pyx_int_1);
    PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_1);
    __Pyx_GIVEREF(__pyx_int_1);
    __pyx_t_3 = PyObject_Call(__pyx_t_4, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 63; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __Pyx_XDECREF(((PyObject *)__pyx_v_line));
    __pyx_v_line = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "LDModel.pyx":64
 *         while True:
 *             line = list(islice(file_name, 1))
 *             if not line:             # <<<<<<<<<<<<<<
 *                 lines += [blank_line]
 *                 break
 */
    __pyx_t_2 = (((PyObject *)__pyx_v_line) != Py_None) && (PyList_GET_SIZE(((PyObject *)__pyx_v_line)) != 0);
    __pyx_t_5 = (!__pyx_t_2);
    if (__pyx_t_5) {

      /* "LDModel.pyx":65
 *             line = list(islice(file_name, 1))
 *             if not line:
 *                 lines += [blank_line]             # <<<<<<<<<<<<<<
 *                 break
 *             lines += line
 */
      __pyx_t_3 = PyList_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_v_blank_line);
      PyList_SET_ITEM(__pyx_t_3, 0, __pyx_v_blank_line);
      __Pyx_GIVEREF(__pyx_v_blank_line);
      __pyx_t_1 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_lines), ((PyObject *)__pyx_t_3)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 65; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_1));
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_v_lines));
      __pyx_v_lines = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":66
 *             if not line:
 *                 lines += [blank_line]
 *                 break             # <<<<<<<<<<<<<<
 *             lines += line
 *             if line == [blank_line]:
 */
      goto __pyx_L5_break;
      goto __pyx_L6;
    }
    __pyx_L6:;

    /* "LDModel.pyx":67
 *                 lines += [blank_line]
 *                 break
 *             lines += line             # <<<<<<<<<<<<<<
 *             if line == [blank_line]:
 *                 break
 */
    __pyx_t_1 = PyNumber_InPlaceAdd(((PyObject *)__pyx_v_lines), ((PyObject *)__pyx_v_line)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 67; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_v_lines));
    __pyx_v_lines = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":68
 *                 break
 *             lines += line
 *             if line == [blank_line]:             # <<<<<<<<<<<<<<
 *                 break
 *         return lines
 */
    __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(__pyx_v_blank_line);
    PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_blank_line);
    __Pyx_GIVEREF(__pyx_v_blank_line);
    __pyx_t_3 = PyObject_RichCompare(((PyObject *)__pyx_v_line), ((PyObject *)__pyx_t_1), Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 68; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__pyx_t_5) {

      /* "LDModel.pyx":69
 *             lines += line
 *             if line == [blank_line]:
 *                 break             # <<<<<<<<<<<<<<
 *         return lines
 * 
 */
      goto __pyx_L5_break;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }
  __pyx_L5_break:;

  /* "LDModel.pyx":70
 *             if line == [blank_line]:
 *                 break
 *         return lines             # <<<<<<<<<<<<<<
 * 
 * cdef class LDModel(object):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_lines));
  __pyx_r = ((PyObject *)__pyx_v_lines);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_AddTraceback("LDModel.read_until_blank_line", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_blank_line);
  __Pyx_XDECREF(__pyx_v_lines);
  __Pyx_XDECREF(__pyx_v_line);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static int __pyx_pw_7LDModel_7LDModel_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static int __pyx_pw_7LDModel_7LDModel_1__cinit__(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_snp_num;
  int __pyx_v_k;
  int __pyx_v_g;
  int __pyx_v_win_size;
  char *__pyx_v_log_dir;
  bool __pyx_v_debug;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__cinit__ (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__snp_num,&__pyx_n_s__k,&__pyx_n_s__g,&__pyx_n_s__win_size,&__pyx_n_s__log_dir,&__pyx_n_s__debug,0};
    PyObject* values[6] = {0,0,0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__snp_num)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__k)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 6, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__g)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 6, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__win_size)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 6, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  4:
        if (likely((values[4] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__log_dir)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 6, 4); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  5:
        if (kw_args > 0) {
          PyObject* value = PyDict_GetItem(__pyx_kwds, __pyx_n_s__debug);
          if (value) { values[5] = value; kw_args--; }
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "__cinit__") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else {
      switch (PyTuple_GET_SIZE(__pyx_args)) {
        case  6: values[5] = PyTuple_GET_ITEM(__pyx_args, 5);
        case  5: values[4] = PyTuple_GET_ITEM(__pyx_args, 4);
        values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        break;
        default: goto __pyx_L5_argtuple_error;
      }
    }
    __pyx_v_snp_num = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_snp_num == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_k = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_k == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_g = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_g == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_win_size = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_win_size == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_log_dir = PyBytes_AsString(values[4]); if (unlikely((!__pyx_v_log_dir) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    if (values[5]) {
      __pyx_v_debug = __Pyx_PyObject_IsTrue(values[5]); if (unlikely((__pyx_v_debug == (bool)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    } else {

      /* "LDModel.pyx":77
 *     '''
 * 
 *     def __cinit__(self, int snp_num, int k, int g, int win_size, char* log_dir, bool debug=False):             # <<<<<<<<<<<<<<
 * 
 *         # total number of SNPs to be analyzed
 */
      __pyx_v_debug = ((bool)0);
    }
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("__cinit__", 0, 5, 6, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 77; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return -1;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel___cinit__(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), __pyx_v_snp_num, __pyx_v_k, __pyx_v_g, __pyx_v_win_size, __pyx_v_log_dir, __pyx_v_debug);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

static int __pyx_pf_7LDModel_7LDModel___cinit__(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_snp_num, int __pyx_v_k, int __pyx_v_g, int __pyx_v_win_size, char *__pyx_v_log_dir, bool __pyx_v_debug) {
  int __pyx_v_i;
  int __pyx_v_snp_idx;
  int __pyx_v_win_idx;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  double __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("__cinit__", 0);
  __Pyx_TraceCall("__cinit__", __pyx_f[0], 77);

  /* "LDModel.pyx":80
 * 
 *         # total number of SNPs to be analyzed
 *         self._snp_num = snp_num             # <<<<<<<<<<<<<<
 * 
 *         # number of haplotypes to analyze
 */
  __pyx_v_self->_snp_num = __pyx_v_snp_num;

  /* "LDModel.pyx":83
 * 
 *         # number of haplotypes to analyze
 *         self._nr_haplos = 0             # <<<<<<<<<<<<<<
 * 
 *         # number of ancestral populations
 */
  __pyx_v_self->_nr_haplos = 0;

  /* "LDModel.pyx":86
 * 
 *         # number of ancestral populations
 *         self.K = k             # <<<<<<<<<<<<<<
 * 
 *         # number of generations since admixture began
 */
  __pyx_v_self->K = __pyx_v_k;

  /* "LDModel.pyx":89
 * 
 *         # number of generations since admixture began
 *         self.g = g             # <<<<<<<<<<<<<<
 * 
 *         # window size (in number of consecutive SNPs).
 */
  __pyx_v_self->g = __pyx_v_g;

  /* "LDModel.pyx":94
 *         # Inside each window, the ancestral origin of each haplotype is assumed to be unique,
 *         # that is - transitions from one ancestry to the other are only allowd between consecutive windows
 *         self._win_size = win_size             # <<<<<<<<<<<<<<
 * 
 *         self._log_dir = log_dir
 */
  __pyx_v_self->_win_size = __pyx_v_win_size;

  /* "LDModel.pyx":96
 *         self._win_size = win_size
 * 
 *         self._log_dir = log_dir             # <<<<<<<<<<<<<<
 * 
 *         self._debug = debug
 */
  __pyx_v_self->_log_dir = __pyx_v_log_dir;

  /* "LDModel.pyx":98
 *         self._log_dir = log_dir
 * 
 *         self._debug = debug             # <<<<<<<<<<<<<<
 * 
 *         # rate of transition from IBD to No-IBD and vice-versa (notation from the Browning paper)
 */
  __pyx_v_self->_debug = __pyx_v_debug;

  /* "LDModel.pyx":101
 * 
 *         # rate of transition from IBD to No-IBD and vice-versa (notation from the Browning paper)
 *         self._t_0_1 = <double *> malloc(self.K * sizeof(double))             # <<<<<<<<<<<<<<
 *         self._t_1_0 = <double *> malloc(self.K * sizeof(double))
 *         for i in range(self.K):
 */
  __pyx_v_self->_t_0_1 = ((double *)malloc((__pyx_v_self->K * (sizeof(double)))));

  /* "LDModel.pyx":102
 *         # rate of transition from IBD to No-IBD and vice-versa (notation from the Browning paper)
 *         self._t_0_1 = <double *> malloc(self.K * sizeof(double))
 *         self._t_1_0 = <double *> malloc(self.K * sizeof(double))             # <<<<<<<<<<<<<<
 *         for i in range(self.K):
 *             self._t_0_1[i] = 1e-5
 */
  __pyx_v_self->_t_1_0 = ((double *)malloc((__pyx_v_self->K * (sizeof(double)))));

  /* "LDModel.pyx":103
 *         self._t_0_1 = <double *> malloc(self.K * sizeof(double))
 *         self._t_1_0 = <double *> malloc(self.K * sizeof(double))
 *         for i in range(self.K):             # <<<<<<<<<<<<<<
 *             self._t_0_1[i] = 1e-5
 *             self._t_1_0[i] = 1
 */
  __pyx_t_1 = __pyx_v_self->K;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "LDModel.pyx":104
 *         self._t_1_0 = <double *> malloc(self.K * sizeof(double))
 *         for i in range(self.K):
 *             self._t_0_1[i] = 1e-5             # <<<<<<<<<<<<<<
 *             self._t_1_0[i] = 1
 * 
 */
    (__pyx_v_self->_t_0_1[__pyx_v_i]) = 1e-5;

    /* "LDModel.pyx":105
 *         for i in range(self.K):
 *             self._t_0_1[i] = 1e-5
 *             self._t_1_0[i] = 1             # <<<<<<<<<<<<<<
 * 
 *         # prior probability of IBD
 */
    (__pyx_v_self->_t_1_0[__pyx_v_i]) = 1.0;
  }

  /* "LDModel.pyx":108
 * 
 *         # prior probability of IBD
 *         self._ibd_prior = <double **> malloc(self.K * sizeof(double*))             # <<<<<<<<<<<<<<
 *         for i in range(self.K):
 *             self._ibd_prior[i] = <double *> malloc(2 * sizeof(double))
 */
  __pyx_v_self->_ibd_prior = ((double **)malloc((__pyx_v_self->K * (sizeof(double *)))));

  /* "LDModel.pyx":109
 *         # prior probability of IBD
 *         self._ibd_prior = <double **> malloc(self.K * sizeof(double*))
 *         for i in range(self.K):             # <<<<<<<<<<<<<<
 *             self._ibd_prior[i] = <double *> malloc(2 * sizeof(double))
 *             self._ibd_prior[i][1] = self._t_0_1[i] / (self._t_0_1[i] + self._t_1_0[i])
 */
  __pyx_t_1 = __pyx_v_self->K;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "LDModel.pyx":110
 *         self._ibd_prior = <double **> malloc(self.K * sizeof(double*))
 *         for i in range(self.K):
 *             self._ibd_prior[i] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *             self._ibd_prior[i][1] = self._t_0_1[i] / (self._t_0_1[i] + self._t_1_0[i])
 *             self._ibd_prior[i][0] = 1-self._ibd_prior[i][1]
 */
    (__pyx_v_self->_ibd_prior[__pyx_v_i]) = ((double *)malloc((2 * (sizeof(double)))));

    /* "LDModel.pyx":111
 *         for i in range(self.K):
 *             self._ibd_prior[i] = <double *> malloc(2 * sizeof(double))
 *             self._ibd_prior[i][1] = self._t_0_1[i] / (self._t_0_1[i] + self._t_1_0[i])             # <<<<<<<<<<<<<<
 *             self._ibd_prior[i][0] = 1-self._ibd_prior[i][1]
 * 
 */
    __pyx_t_3 = ((__pyx_v_self->_t_0_1[__pyx_v_i]) + (__pyx_v_self->_t_1_0[__pyx_v_i]));
    if (unlikely(__pyx_t_3 == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 111; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    ((__pyx_v_self->_ibd_prior[__pyx_v_i])[1]) = ((__pyx_v_self->_t_0_1[__pyx_v_i]) / __pyx_t_3);

    /* "LDModel.pyx":112
 *             self._ibd_prior[i] = <double *> malloc(2 * sizeof(double))
 *             self._ibd_prior[i][1] = self._t_0_1[i] / (self._t_0_1[i] + self._t_1_0[i])
 *             self._ibd_prior[i][0] = 1-self._ibd_prior[i][1]             # <<<<<<<<<<<<<<
 * 
 *         # proportions of ancestry from each ancestral populations
 */
    ((__pyx_v_self->_ibd_prior[__pyx_v_i])[0]) = (1.0 - ((__pyx_v_self->_ibd_prior[__pyx_v_i])[1]));
  }

  /* "LDModel.pyx":115
 * 
 *         # proportions of ancestry from each ancestral populations
 *         self._alphas = <double *> malloc(self.K * sizeof(double))             # <<<<<<<<<<<<<<
 *         for i in range(self.K):
 *             self._alphas[i] = (1.0/self.K)
 */
  __pyx_v_self->_alphas = ((double *)malloc((__pyx_v_self->K * (sizeof(double)))));

  /* "LDModel.pyx":116
 *         # proportions of ancestry from each ancestral populations
 *         self._alphas = <double *> malloc(self.K * sizeof(double))
 *         for i in range(self.K):             # <<<<<<<<<<<<<<
 *             self._alphas[i] = (1.0/self.K)
 * 
 */
  __pyx_t_1 = __pyx_v_self->K;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "LDModel.pyx":117
 *         self._alphas = <double *> malloc(self.K * sizeof(double))
 *         for i in range(self.K):
 *             self._alphas[i] = (1.0/self.K)             # <<<<<<<<<<<<<<
 * 
 *         # allocate memory
 */
    if (unlikely(__pyx_v_self->K == 0)) {
      PyErr_Format(PyExc_ZeroDivisionError, "float division");
      {__pyx_filename = __pyx_f[0]; __pyx_lineno = 117; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    (__pyx_v_self->_alphas[__pyx_v_i]) = (1.0 / ((double)__pyx_v_self->K));
  }

  /* "LDModel.pyx":120
 * 
 *         # allocate memory
 *         self._snp_ids = <char **> malloc(self._snp_num * sizeof(char *))             # <<<<<<<<<<<<<<
 *         self._position = <int *> malloc(self._snp_num * sizeof(int))
 *         self._states = <state ***> malloc(self.K * sizeof(state **))
 */
  __pyx_v_self->_snp_ids = ((char **)malloc((__pyx_v_self->_snp_num * (sizeof(char *)))));

  /* "LDModel.pyx":121
 *         # allocate memory
 *         self._snp_ids = <char **> malloc(self._snp_num * sizeof(char *))
 *         self._position = <int *> malloc(self._snp_num * sizeof(int))             # <<<<<<<<<<<<<<
 *         self._states = <state ***> malloc(self.K * sizeof(state **))
 *         self._pi = <double ***> malloc(self.K * sizeof(double **))
 */
  __pyx_v_self->_position = ((int *)malloc((__pyx_v_self->_snp_num * (sizeof(int)))));

  /* "LDModel.pyx":122
 *         self._snp_ids = <char **> malloc(self._snp_num * sizeof(char *))
 *         self._position = <int *> malloc(self._snp_num * sizeof(int))
 *         self._states = <state ***> malloc(self.K * sizeof(state **))             # <<<<<<<<<<<<<<
 *         self._pi = <double ***> malloc(self.K * sizeof(double **))
 *         self._layer_state_nums = <int **> malloc(self.K * sizeof(int*))
 */
  __pyx_v_self->_states = ((state ***)malloc((__pyx_v_self->K * (sizeof(state **)))));

  /* "LDModel.pyx":123
 *         self._position = <int *> malloc(self._snp_num * sizeof(int))
 *         self._states = <state ***> malloc(self.K * sizeof(state **))
 *         self._pi = <double ***> malloc(self.K * sizeof(double **))             # <<<<<<<<<<<<<<
 *         self._layer_state_nums = <int **> malloc(self.K * sizeof(int*))
 *         self._trans = <double ****> malloc(self.K * sizeof(double ***))
 */
  __pyx_v_self->_pi = ((double ***)malloc((__pyx_v_self->K * (sizeof(double **)))));

  /* "LDModel.pyx":124
 *         self._states = <state ***> malloc(self.K * sizeof(state **))
 *         self._pi = <double ***> malloc(self.K * sizeof(double **))
 *         self._layer_state_nums = <int **> malloc(self.K * sizeof(int*))             # <<<<<<<<<<<<<<
 *         self._trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 */
  __pyx_v_self->_layer_state_nums = ((int **)malloc((__pyx_v_self->K * (sizeof(int *)))));

  /* "LDModel.pyx":125
 *         self._pi = <double ***> malloc(self.K * sizeof(double **))
 *         self._layer_state_nums = <int **> malloc(self.K * sizeof(int*))
 *         self._trans = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *         self._trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         self._back_trans = <double ****> malloc(self.K * sizeof(double ***))
 */
  __pyx_v_self->_trans = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

  /* "LDModel.pyx":126
 *         self._layer_state_nums = <int **> malloc(self.K * sizeof(int*))
 *         self._trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._trans_idx = <int ****> malloc(self.K * sizeof(int ***))             # <<<<<<<<<<<<<<
 *         self._back_trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._back_trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 */
  __pyx_v_self->_trans_idx = ((int ****)malloc((__pyx_v_self->K * (sizeof(int ***)))));

  /* "LDModel.pyx":127
 *         self._trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         self._back_trans = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *         self._back_trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         for i in range(self.K):
 */
  __pyx_v_self->_back_trans = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

  /* "LDModel.pyx":128
 *         self._trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         self._back_trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._back_trans_idx = <int ****> malloc(self.K * sizeof(int ***))             # <<<<<<<<<<<<<<
 *         for i in range(self.K):
 *             self._states[i] = <state **> malloc(self._snp_num * sizeof(state **))
 */
  __pyx_v_self->_back_trans_idx = ((int ****)malloc((__pyx_v_self->K * (sizeof(int ***)))));

  /* "LDModel.pyx":129
 *         self._back_trans = <double ****> malloc(self.K * sizeof(double ***))
 *         self._back_trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         for i in range(self.K):             # <<<<<<<<<<<<<<
 *             self._states[i] = <state **> malloc(self._snp_num * sizeof(state **))
 *             self._layer_state_nums[i] = <int *> malloc(self._snp_num * sizeof(int))
 */
  __pyx_t_1 = __pyx_v_self->K;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_i = __pyx_t_2;

    /* "LDModel.pyx":130
 *         self._back_trans_idx = <int ****> malloc(self.K * sizeof(int ***))
 *         for i in range(self.K):
 *             self._states[i] = <state **> malloc(self._snp_num * sizeof(state **))             # <<<<<<<<<<<<<<
 *             self._layer_state_nums[i] = <int *> malloc(self._snp_num * sizeof(int))
 *             self._trans[i] = <double ***> malloc((self._snp_num-1) * sizeof(double **))
 */
    (__pyx_v_self->_states[__pyx_v_i]) = ((state **)malloc((__pyx_v_self->_snp_num * (sizeof(state **)))));

    /* "LDModel.pyx":131
 *         for i in range(self.K):
 *             self._states[i] = <state **> malloc(self._snp_num * sizeof(state **))
 *             self._layer_state_nums[i] = <int *> malloc(self._snp_num * sizeof(int))             # <<<<<<<<<<<<<<
 *             self._trans[i] = <double ***> malloc((self._snp_num-1) * sizeof(double **))
 *             self._trans_idx[i] = <int ***> malloc((self._snp_num-1) * sizeof(int **))
 */
    (__pyx_v_self->_layer_state_nums[__pyx_v_i]) = ((int *)malloc((__pyx_v_self->_snp_num * (sizeof(int)))));

    /* "LDModel.pyx":132
 *             self._states[i] = <state **> malloc(self._snp_num * sizeof(state **))
 *             self._layer_state_nums[i] = <int *> malloc(self._snp_num * sizeof(int))
 *             self._trans[i] = <double ***> malloc((self._snp_num-1) * sizeof(double **))             # <<<<<<<<<<<<<<
 *             self._trans_idx[i] = <int ***> malloc((self._snp_num-1) * sizeof(int **))
 *             self._back_trans[i] = <double ***> malloc((self._snp_num) * sizeof(double **))
 */
    (__pyx_v_self->_trans[__pyx_v_i]) = ((double ***)malloc(((__pyx_v_self->_snp_num - 1) * (sizeof(double **)))));

    /* "LDModel.pyx":133
 *             self._layer_state_nums[i] = <int *> malloc(self._snp_num * sizeof(int))
 *             self._trans[i] = <double ***> malloc((self._snp_num-1) * sizeof(double **))
 *             self._trans_idx[i] = <int ***> malloc((self._snp_num-1) * sizeof(int **))             # <<<<<<<<<<<<<<
 *             self._back_trans[i] = <double ***> malloc((self._snp_num) * sizeof(double **))
 *             self._back_trans_idx[i] = <int ***> malloc((self._snp_num) * sizeof(int **))
 */
    (__pyx_v_self->_trans_idx[__pyx_v_i]) = ((int ***)malloc(((__pyx_v_self->_snp_num - 1) * (sizeof(int **)))));

    /* "LDModel.pyx":134
 *             self._trans[i] = <double ***> malloc((self._snp_num-1) * sizeof(double **))
 *             self._trans_idx[i] = <int ***> malloc((self._snp_num-1) * sizeof(int **))
 *             self._back_trans[i] = <double ***> malloc((self._snp_num) * sizeof(double **))             # <<<<<<<<<<<<<<
 *             self._back_trans_idx[i] = <int ***> malloc((self._snp_num) * sizeof(int **))
 *             self._pi[i] = <double **> malloc(self.get_num_windows() * sizeof(double *))
 */
    (__pyx_v_self->_back_trans[__pyx_v_i]) = ((double ***)malloc((__pyx_v_self->_snp_num * (sizeof(double **)))));

    /* "LDModel.pyx":135
 *             self._trans_idx[i] = <int ***> malloc((self._snp_num-1) * sizeof(int **))
 *             self._back_trans[i] = <double ***> malloc((self._snp_num) * sizeof(double **))
 *             self._back_trans_idx[i] = <int ***> malloc((self._snp_num) * sizeof(int **))             # <<<<<<<<<<<<<<
 *             self._pi[i] = <double **> malloc(self.get_num_windows() * sizeof(double *))
 * 
 */
    (__pyx_v_self->_back_trans_idx[__pyx_v_i]) = ((int ***)malloc((__pyx_v_self->_snp_num * (sizeof(int **)))));

    /* "LDModel.pyx":136
 *             self._back_trans[i] = <double ***> malloc((self._snp_num) * sizeof(double **))
 *             self._back_trans_idx[i] = <int ***> malloc((self._snp_num) * sizeof(int **))
 *             self._pi[i] = <double **> malloc(self.get_num_windows() * sizeof(double *))             # <<<<<<<<<<<<<<
 * 
 *         self._genetic_map = <gen_map_entry *> malloc(self._snp_num * sizeof(gen_map_entry))
 */
    (__pyx_v_self->_pi[__pyx_v_i]) = ((double **)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double *)))));
  }

  /* "LDModel.pyx":138
 *             self._pi[i] = <double **> malloc(self.get_num_windows() * sizeof(double *))
 * 
 *         self._genetic_map = <gen_map_entry *> malloc(self._snp_num * sizeof(gen_map_entry))             # <<<<<<<<<<<<<<
 *         print "allocated mem"
 *         for snp_idx in range(self._snp_num):
 */
  __pyx_v_self->_genetic_map = ((gen_map_entry *)malloc((__pyx_v_self->_snp_num * (sizeof(gen_map_entry)))));

  /* "LDModel.pyx":139
 * 
 *         self._genetic_map = <gen_map_entry *> malloc(self._snp_num * sizeof(gen_map_entry))
 *         print "allocated mem"             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self._snp_num):
 *             self._genetic_map[snp_idx] = create_gen_map_entry(snp_idx,1.63936,0.0010840)
 */
  if (__Pyx_PrintOne(0, ((PyObject *)__pyx_kp_s_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 139; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  /* "LDModel.pyx":140
 *         self._genetic_map = <gen_map_entry *> malloc(self._snp_num * sizeof(gen_map_entry))
 *         print "allocated mem"
 *         for snp_idx in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             self._genetic_map[snp_idx] = create_gen_map_entry(snp_idx,1.63936,0.0010840)
 * 
 */
  __pyx_t_1 = __pyx_v_self->_snp_num;
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_snp_idx = __pyx_t_2;

    /* "LDModel.pyx":141
 *         print "allocated mem"
 *         for snp_idx in range(self._snp_num):
 *             self._genetic_map[snp_idx] = create_gen_map_entry(snp_idx,1.63936,0.0010840)             # <<<<<<<<<<<<<<
 * 
 *         if self._debug:
 */
    (__pyx_v_self->_genetic_map[__pyx_v_snp_idx]) = create_gen_map_entry(__pyx_v_snp_idx, 1.63936, 0.0010840);
  }

  /* "LDModel.pyx":143
 *             self._genetic_map[snp_idx] = create_gen_map_entry(snp_idx,1.63936,0.0010840)
 * 
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             print "DEBUG!"
 *             self._inner_probs_file = open(self._log_dir+"/inner.probs.txt","w")
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":144
 * 
 *         if self._debug:
 *             print "DEBUG!"             # <<<<<<<<<<<<<<
 *             self._inner_probs_file = open(self._log_dir+"/inner.probs.txt","w")
 *             self._probs_file = open(self._log_dir+"/probs.txt","w")
 */
    if (__Pyx_PrintOne(0, ((PyObject *)__pyx_kp_s_3)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 144; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "LDModel.pyx":145
 *         if self._debug:
 *             print "DEBUG!"
 *             self._inner_probs_file = open(self._log_dir+"/inner.probs.txt","w")             # <<<<<<<<<<<<<<
 *             self._probs_file = open(self._log_dir+"/probs.txt","w")
 *             self._trans_file = open(self._log_dir+"/trans.txt","w")
 */
    __pyx_t_4 = PyBytes_FromString(__pyx_v_self->_log_dir); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_t_4), ((PyObject *)__pyx_kp_s_4)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_n_s__w));
    PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_n_s__w));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__w));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_v_self->_inner_probs_file);
    __Pyx_DECREF(__pyx_v_self->_inner_probs_file);
    __pyx_v_self->_inner_probs_file = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "LDModel.pyx":146
 *             print "DEBUG!"
 *             self._inner_probs_file = open(self._log_dir+"/inner.probs.txt","w")
 *             self._probs_file = open(self._log_dir+"/probs.txt","w")             # <<<<<<<<<<<<<<
 *             self._trans_file = open(self._log_dir+"/trans.txt","w")
 *             self._ibs_file = open(self._log_dir+"/ibs.txt","w")
 */
    __pyx_t_5 = PyBytes_FromString(__pyx_v_self->_log_dir); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_t_5), ((PyObject *)__pyx_kp_s_5)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_n_s__w));
    PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_n_s__w));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__w));
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 146; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->_probs_file);
    __Pyx_DECREF(__pyx_v_self->_probs_file);
    __pyx_v_self->_probs_file = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":147
 *             self._inner_probs_file = open(self._log_dir+"/inner.probs.txt","w")
 *             self._probs_file = open(self._log_dir+"/probs.txt","w")
 *             self._trans_file = open(self._log_dir+"/trans.txt","w")             # <<<<<<<<<<<<<<
 *             self._ibs_file = open(self._log_dir+"/ibs.txt","w")
 * 
 */
    __pyx_t_4 = PyBytes_FromString(__pyx_v_self->_log_dir); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_4));
    __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_t_4), ((PyObject *)__pyx_kp_s_6)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyTuple_New(2); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_INCREF(((PyObject *)__pyx_n_s__w));
    PyTuple_SET_ITEM(__pyx_t_4, 1, ((PyObject *)__pyx_n_s__w));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__w));
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 147; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __Pyx_GIVEREF(__pyx_t_5);
    __Pyx_GOTREF(__pyx_v_self->_trans_file);
    __Pyx_DECREF(__pyx_v_self->_trans_file);
    __pyx_v_self->_trans_file = __pyx_t_5;
    __pyx_t_5 = 0;

    /* "LDModel.pyx":148
 *             self._probs_file = open(self._log_dir+"/probs.txt","w")
 *             self._trans_file = open(self._log_dir+"/trans.txt","w")
 *             self._ibs_file = open(self._log_dir+"/ibs.txt","w")             # <<<<<<<<<<<<<<
 * 
 *         self._ibs = <bool *> malloc(self.get_num_windows() * sizeof(bool))
 */
    __pyx_t_5 = PyBytes_FromString(__pyx_v_self->_log_dir); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_5));
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_t_5), ((PyObject *)__pyx_kp_s_7)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(2); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_INCREF(((PyObject *)__pyx_n_s__w));
    PyTuple_SET_ITEM(__pyx_t_5, 1, ((PyObject *)__pyx_n_s__w));
    __Pyx_GIVEREF(((PyObject *)__pyx_n_s__w));
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 148; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __Pyx_GIVEREF(__pyx_t_4);
    __Pyx_GOTREF(__pyx_v_self->_ibs_file);
    __Pyx_DECREF(__pyx_v_self->_ibs_file);
    __pyx_v_self->_ibs_file = __pyx_t_4;
    __pyx_t_4 = 0;
    goto __pyx_L13;
  }
  __pyx_L13:;

  /* "LDModel.pyx":150
 *             self._ibs_file = open(self._log_dir+"/ibs.txt","w")
 * 
 *         self._ibs = <bool *> malloc(self.get_num_windows() * sizeof(bool))             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             self._ibs[win_idx] = True
 */
  __pyx_v_self->_ibs = ((bool *)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(bool)))));

  /* "LDModel.pyx":151
 * 
 *         self._ibs = <bool *> malloc(self.get_num_windows() * sizeof(bool))
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             self._ibs[win_idx] = True
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_2 = 0; __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_win_idx = __pyx_t_2;

    /* "LDModel.pyx":152
 *         self._ibs = <bool *> malloc(self.get_num_windows() * sizeof(bool))
 *         for win_idx in range(self.get_num_windows()):
 *             self._ibs[win_idx] = True             # <<<<<<<<<<<<<<
 * 
 *         self._chr1 = <bool *> malloc(self._snp_num * sizeof(bool))
 */
    (__pyx_v_self->_ibs[__pyx_v_win_idx]) = 1;
  }

  /* "LDModel.pyx":154
 *             self._ibs[win_idx] = True
 * 
 *         self._chr1 = <bool *> malloc(self._snp_num * sizeof(bool))             # <<<<<<<<<<<<<<
 *         self._chr2 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr3 = <bool *> malloc(self._snp_num * sizeof(bool))
 */
  __pyx_v_self->_chr1 = ((bool *)malloc((__pyx_v_self->_snp_num * (sizeof(bool)))));

  /* "LDModel.pyx":155
 * 
 *         self._chr1 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr2 = <bool *> malloc(self._snp_num * sizeof(bool))             # <<<<<<<<<<<<<<
 *         self._chr3 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr4 = <bool *> malloc(self._snp_num * sizeof(bool))
 */
  __pyx_v_self->_chr2 = ((bool *)malloc((__pyx_v_self->_snp_num * (sizeof(bool)))));

  /* "LDModel.pyx":156
 *         self._chr1 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr2 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr3 = <bool *> malloc(self._snp_num * sizeof(bool))             # <<<<<<<<<<<<<<
 *         self._chr4 = <bool *> malloc(self._snp_num * sizeof(bool))
 * 
 */
  __pyx_v_self->_chr3 = ((bool *)malloc((__pyx_v_self->_snp_num * (sizeof(bool)))));

  /* "LDModel.pyx":157
 *         self._chr2 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr3 = <bool *> malloc(self._snp_num * sizeof(bool))
 *         self._chr4 = <bool *> malloc(self._snp_num * sizeof(bool))             # <<<<<<<<<<<<<<
 * 
 *     def __dealloc__(self):
 */
  __pyx_v_self->_chr4 = ((bool *)malloc((__pyx_v_self->_snp_num * (sizeof(bool)))));

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("LDModel.LDModel.__cinit__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static void __pyx_pw_7LDModel_7LDModel_3__dealloc__(PyObject *__pyx_v_self); /*proto*/
static void __pyx_pw_7LDModel_7LDModel_3__dealloc__(PyObject *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__dealloc__ (wrapper)", 0);
  __pyx_pf_7LDModel_7LDModel_2__dealloc__(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
}

/* "LDModel.pyx":159
 *         self._chr4 = <bool *> malloc(self._snp_num * sizeof(bool))
 * 
 *     def __dealloc__(self):             # <<<<<<<<<<<<<<
 *         if self._debug:
 *             self._inner_probs_file.close()
 */

static void __pyx_pf_7LDModel_7LDModel_2__dealloc__(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("__dealloc__", 0);
  __Pyx_TraceCall("__dealloc__", __pyx_f[0], 159);

  /* "LDModel.pyx":160
 * 
 *     def __dealloc__(self):
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             self._inner_probs_file.close()
 *             self._probs_file.close()
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":161
 *     def __dealloc__(self):
 *         if self._debug:
 *             self._inner_probs_file.close()             # <<<<<<<<<<<<<<
 *             self._probs_file.close()
 *             self._trans_file.close()
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_inner_probs_file, __pyx_n_s__close); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 161; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":162
 *         if self._debug:
 *             self._inner_probs_file.close()
 *             self._probs_file.close()             # <<<<<<<<<<<<<<
 *             self._trans_file.close()
 *             self._ibs_file.close()
 */
    __pyx_t_2 = PyObject_GetAttr(__pyx_v_self->_probs_file, __pyx_n_s__close); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 162; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "LDModel.pyx":163
 *             self._inner_probs_file.close()
 *             self._probs_file.close()
 *             self._trans_file.close()             # <<<<<<<<<<<<<<
 *             self._ibs_file.close()
 * 
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_trans_file, __pyx_n_s__close); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 163; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":164
 *             self._probs_file.close()
 *             self._trans_file.close()
 *             self._ibs_file.close()             # <<<<<<<<<<<<<<
 * 
 *     cpdef set_ibd_trans_rate(self, anc, t_0_1, t_1_0):
 */
    __pyx_t_2 = PyObject_GetAttr(__pyx_v_self->_ibs_file, __pyx_n_s__close); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 164; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.__dealloc__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
}

/* "LDModel.pyx":166
 *             self._ibs_file.close()
 * 
 *     cpdef set_ibd_trans_rate(self, anc, t_0_1, t_1_0):             # <<<<<<<<<<<<<<
 *         self._t_0_1[anc] = t_0_1
 *         self._t_1_0[anc] = t_1_0
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_5set_ibd_trans_rate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_set_ibd_trans_rate(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc, PyObject *__pyx_v_t_0_1, PyObject *__pyx_v_t_1_0, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  double __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  Py_ssize_t __pyx_t_6;
  Py_ssize_t __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_ibd_trans_rate", 0);
  __Pyx_TraceCall("set_ibd_trans_rate", __pyx_f[0], 166);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__set_ibd_trans_rate); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_5set_ibd_trans_rate)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyTuple_New(3); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_anc);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_anc);
      __Pyx_GIVEREF(__pyx_v_anc);
      __Pyx_INCREF(__pyx_v_t_0_1);
      PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_v_t_0_1);
      __Pyx_GIVEREF(__pyx_v_t_0_1);
      __Pyx_INCREF(__pyx_v_t_1_0);
      PyTuple_SET_ITEM(__pyx_t_2, 2, __pyx_v_t_1_0);
      __Pyx_GIVEREF(__pyx_v_t_1_0);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":167
 * 
 *     cpdef set_ibd_trans_rate(self, anc, t_0_1, t_1_0):
 *         self._t_0_1[anc] = t_0_1             # <<<<<<<<<<<<<<
 *         self._t_1_0[anc] = t_1_0
 * 
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_t_0_1); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 167; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (__pyx_v_self->_t_0_1[__pyx_t_5]) = __pyx_t_4;

  /* "LDModel.pyx":168
 *     cpdef set_ibd_trans_rate(self, anc, t_0_1, t_1_0):
 *         self._t_0_1[anc] = t_0_1
 *         self._t_1_0[anc] = t_1_0             # <<<<<<<<<<<<<<
 * 
 *         self._ibd_prior[anc][1] = self._t_0_1[anc] / (self._t_0_1[anc] + self._t_1_0[anc])
 */
  __pyx_t_4 = __pyx_PyFloat_AsDouble(__pyx_v_t_1_0); if (unlikely((__pyx_t_4 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 168; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  (__pyx_v_self->_t_1_0[__pyx_t_5]) = __pyx_t_4;

  /* "LDModel.pyx":170
 *         self._t_1_0[anc] = t_1_0
 * 
 *         self._ibd_prior[anc][1] = self._t_0_1[anc] / (self._t_0_1[anc] + self._t_1_0[anc])             # <<<<<<<<<<<<<<
 *         self._ibd_prior[anc][0] = 1-self._ibd_prior[anc][1]
 * 
 */
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_6 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_6 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = ((__pyx_v_self->_t_0_1[__pyx_t_6]) + (__pyx_v_self->_t_1_0[__pyx_t_7]));
  if (unlikely(__pyx_t_4 == 0)) {
    PyErr_Format(PyExc_ZeroDivisionError, "float division");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((__pyx_v_self->_ibd_prior[__pyx_t_7])[1]) = ((__pyx_v_self->_t_0_1[__pyx_t_5]) / __pyx_t_4);

  /* "LDModel.pyx":171
 * 
 *         self._ibd_prior[anc][1] = self._t_0_1[anc] / (self._t_0_1[anc] + self._t_1_0[anc])
 *         self._ibd_prior[anc][0] = 1-self._ibd_prior[anc][1]             # <<<<<<<<<<<<<<
 * 
 *     cpdef set_alphas(self, alphas):
 */
  __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 171; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  ((__pyx_v_self->_ibd_prior[__pyx_t_7])[0]) = (1.0 - ((__pyx_v_self->_ibd_prior[__pyx_t_5])[1]));

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.set_ibd_trans_rate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_5set_ibd_trans_rate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_5set_ibd_trans_rate(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_anc = 0;
  PyObject *__pyx_v_t_0_1 = 0;
  PyObject *__pyx_v_t_1_0 = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_ibd_trans_rate (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__anc,&__pyx_n_s__t_0_1,&__pyx_n_s__t_1_0,0};
    PyObject* values[3] = {0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__anc)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__t_0_1)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_ibd_trans_rate", 1, 3, 3, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__t_1_0)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_ibd_trans_rate", 1, 3, 3, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_ibd_trans_rate") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 3) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
    }
    __pyx_v_anc = values[0];
    __pyx_v_t_0_1 = values[1];
    __pyx_v_t_1_0 = values[2];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_ibd_trans_rate", 1, 3, 3, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.set_ibd_trans_rate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_4set_ibd_trans_rate(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), __pyx_v_anc, __pyx_v_t_0_1, __pyx_v_t_1_0);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":166
 *             self._ibs_file.close()
 * 
 *     cpdef set_ibd_trans_rate(self, anc, t_0_1, t_1_0):             # <<<<<<<<<<<<<<
 *         self._t_0_1[anc] = t_0_1
 *         self._t_1_0[anc] = t_1_0
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_4set_ibd_trans_rate(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc, PyObject *__pyx_v_t_0_1, PyObject *__pyx_v_t_1_0) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_ibd_trans_rate", 0);
  __Pyx_TraceCall("set_ibd_trans_rate", __pyx_f[0], 166);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->set_ibd_trans_rate(__pyx_v_self, __pyx_v_anc, __pyx_v_t_0_1, __pyx_v_t_1_0, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 166; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.set_ibd_trans_rate", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":173
 *         self._ibd_prior[anc][0] = 1-self._ibd_prior[anc][1]
 * 
 *     cpdef set_alphas(self, alphas):             # <<<<<<<<<<<<<<
 *         if len(alphas) != self.K:
 *             print "wrong number of alphas"
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_7set_alphas(PyObject *__pyx_v_self, PyObject *__pyx_v_alphas); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_set_alphas(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_alphas, int __pyx_skip_dispatch) {
  int __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  double __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_alphas", 0);
  __Pyx_TraceCall("set_alphas", __pyx_f[0], 173);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__set_alphas); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_7set_alphas)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_alphas);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_alphas);
      __Pyx_GIVEREF(__pyx_v_alphas);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":174
 * 
 *     cpdef set_alphas(self, alphas):
 *         if len(alphas) != self.K:             # <<<<<<<<<<<<<<
 *             print "wrong number of alphas"
 *             return
 */
  __pyx_t_4 = PyObject_Length(__pyx_v_alphas); if (unlikely(__pyx_t_4 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 174; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = (__pyx_t_4 != __pyx_v_self->K);
  if (__pyx_t_5) {

    /* "LDModel.pyx":175
 *     cpdef set_alphas(self, alphas):
 *         if len(alphas) != self.K:
 *             print "wrong number of alphas"             # <<<<<<<<<<<<<<
 *             return
 *         for i in range(self.K):
 */
    if (__Pyx_PrintOne(0, ((PyObject *)__pyx_kp_s_8)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 175; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "LDModel.pyx":176
 *         if len(alphas) != self.K:
 *             print "wrong number of alphas"
 *             return             # <<<<<<<<<<<<<<
 *         for i in range(self.K):
 *             self._alphas[i] = alphas[i]
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":177
 *             print "wrong number of alphas"
 *             return
 *         for i in range(self.K):             # <<<<<<<<<<<<<<
 *             self._alphas[i] = alphas[i]
 * 
 */
  __pyx_t_6 = __pyx_v_self->K;
  for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
    __pyx_v_i = __pyx_t_7;

    /* "LDModel.pyx":178
 *             return
 *         for i in range(self.K):
 *             self._alphas[i] = alphas[i]             # <<<<<<<<<<<<<<
 * 
 *     cpdef set_chrs(self, char* chr1, char* chr2, char* chr3, char* chr4):
 */
    __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_alphas, __pyx_v_i, sizeof(int), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_8 = __pyx_PyFloat_AsDouble(__pyx_t_1); if (unlikely((__pyx_t_8 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    (__pyx_v_self->_alphas[__pyx_v_i]) = __pyx_t_8;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.set_alphas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_7set_alphas(PyObject *__pyx_v_self, PyObject *__pyx_v_alphas); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_7set_alphas(PyObject *__pyx_v_self, PyObject *__pyx_v_alphas) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_alphas (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_6set_alphas(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_alphas));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":173
 *         self._ibd_prior[anc][0] = 1-self._ibd_prior[anc][1]
 * 
 *     cpdef set_alphas(self, alphas):             # <<<<<<<<<<<<<<
 *         if len(alphas) != self.K:
 *             print "wrong number of alphas"
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_6set_alphas(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_alphas) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_alphas", 0);
  __Pyx_TraceCall("set_alphas", __pyx_f[0], 173);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->set_alphas(__pyx_v_self, __pyx_v_alphas, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 173; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.set_alphas", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":180
 *             self._alphas[i] = alphas[i]
 * 
 *     cpdef set_chrs(self, char* chr1, char* chr2, char* chr3, char* chr4):             # <<<<<<<<<<<<<<
 * 
 *         for snp_idx in range(self._snp_num):
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_9set_chrs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_set_chrs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, char *__pyx_v_chr1, char *__pyx_v_chr2, char *__pyx_v_chr3, char *__pyx_v_chr4, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_chrs", 0);
  __Pyx_TraceCall("set_chrs", __pyx_f[0], 180);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__set_chrs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_9set_chrs)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyBytes_FromString(__pyx_v_chr1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_2));
      __pyx_t_3 = PyBytes_FromString(__pyx_v_chr2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_3));
      __pyx_t_4 = PyBytes_FromString(__pyx_v_chr3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_4));
      __pyx_t_5 = PyBytes_FromString(__pyx_v_chr4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_5));
      __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, ((PyObject *)__pyx_t_2));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_2));
      PyTuple_SET_ITEM(__pyx_t_6, 1, ((PyObject *)__pyx_t_3));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
      PyTuple_SET_ITEM(__pyx_t_6, 2, ((PyObject *)__pyx_t_4));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_4));
      PyTuple_SET_ITEM(__pyx_t_6, 3, ((PyObject *)__pyx_t_5));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
      __pyx_t_2 = 0;
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":182
 *     cpdef set_chrs(self, char* chr1, char* chr2, char* chr3, char* chr4):
 * 
 *         for snp_idx in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             if int(chr(chr1[snp_idx])) == int(self._allele_0):
 *                 self._chr1[snp_idx] = 0
 */
  __pyx_t_7 = __pyx_v_self->_snp_num;
  for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
    __pyx_v_snp_idx = __pyx_t_8;

    /* "LDModel.pyx":183
 * 
 *         for snp_idx in range(self._snp_num):
 *             if int(chr(chr1[snp_idx])) == int(self._allele_0):             # <<<<<<<<<<<<<<
 *                 self._chr1[snp_idx] = 0
 *             else:
 */
    __pyx_t_1 = PyInt_FromLong((__pyx_v_chr1[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "LDModel.pyx":184
 *         for snp_idx in range(self._snp_num):
 *             if int(chr(chr1[snp_idx])) == int(self._allele_0):
 *                 self._chr1[snp_idx] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if int(chr(chr1[snp_idx])) == int(self._allele_1):
 */
      (__pyx_v_self->_chr1[__pyx_v_snp_idx]) = 0;
      goto __pyx_L5;
    }
    /*else*/ {

      /* "LDModel.pyx":186
 *                 self._chr1[snp_idx] = 0
 *             else:
 *                 if int(chr(chr1[snp_idx])) == int(self._allele_1):             # <<<<<<<<<<<<<<
 *                     self._chr1[snp_idx] = 1
 *                 else:
 */
      __pyx_t_6 = PyInt_FromLong((__pyx_v_chr1[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyInt_FromLong(__pyx_v_self->_allele_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 186; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_9) {

        /* "LDModel.pyx":187
 *             else:
 *                 if int(chr(chr1[snp_idx])) == int(self._allele_1):
 *                     self._chr1[snp_idx] = 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr1[snp_idx])))
 */
        (__pyx_v_self->_chr1[__pyx_v_snp_idx]) = 1;
        goto __pyx_L6;
      }
      /*else*/ {

        /* "LDModel.pyx":189
 *                     self._chr1[snp_idx] = 1
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr1[snp_idx])))             # <<<<<<<<<<<<<<
 *                     exit(-1)
 *             if int(chr(chr2[snp_idx])) == int(self._allele_0):
 */
        __pyx_t_1 = PyInt_FromLong((__pyx_v_chr1[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__Pyx_PrintOne(0, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 189; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "LDModel.pyx":190
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr1[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr2[snp_idx])) == int(self._allele_0):
 *                 self._chr2[snp_idx] = 0
 */
        __pyx_t_5 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_10), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_L6:;
    }
    __pyx_L5:;

    /* "LDModel.pyx":191
 *                     print "unidentified allele: " + str(int(chr(chr1[snp_idx])))
 *                     exit(-1)
 *             if int(chr(chr2[snp_idx])) == int(self._allele_0):             # <<<<<<<<<<<<<<
 *                 self._chr2[snp_idx] = 0
 *             else:
 */
    __pyx_t_5 = PyInt_FromLong((__pyx_v_chr2[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 191; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "LDModel.pyx":192
 *                     exit(-1)
 *             if int(chr(chr2[snp_idx])) == int(self._allele_0):
 *                 self._chr2[snp_idx] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if int(chr(chr2[snp_idx])) == int(self._allele_1):
 */
      (__pyx_v_self->_chr2[__pyx_v_snp_idx]) = 0;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "LDModel.pyx":194
 *                 self._chr2[snp_idx] = 0
 *             else:
 *                 if int(chr(chr2[snp_idx])) == int(self._allele_1):             # <<<<<<<<<<<<<<
 *                     self._chr2[snp_idx] = 1
 *                 else:
 */
      __pyx_t_6 = PyInt_FromLong((__pyx_v_chr2[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_allele_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 194; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_9) {

        /* "LDModel.pyx":195
 *             else:
 *                 if int(chr(chr2[snp_idx])) == int(self._allele_1):
 *                     self._chr2[snp_idx] = 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr2[snp_idx])))
 */
        (__pyx_v_self->_chr2[__pyx_v_snp_idx]) = 1;
        goto __pyx_L8;
      }
      /*else*/ {

        /* "LDModel.pyx":197
 *                     self._chr2[snp_idx] = 1
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr2[snp_idx])))             # <<<<<<<<<<<<<<
 *                     exit(-1)
 *             if int(chr(chr3[snp_idx])) == int(self._allele_0):
 */
        __pyx_t_5 = PyInt_FromLong((__pyx_v_chr2[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PrintOne(0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 197; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "LDModel.pyx":198
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr2[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr3[snp_idx])) == int(self._allele_0):
 *                 self._chr3[snp_idx] = 0
 */
        __pyx_t_1 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_11), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __pyx_L8:;
    }
    __pyx_L7:;

    /* "LDModel.pyx":199
 *                     print "unidentified allele: " + str(int(chr(chr2[snp_idx])))
 *                     exit(-1)
 *             if int(chr(chr3[snp_idx])) == int(self._allele_0):             # <<<<<<<<<<<<<<
 *                 self._chr3[snp_idx] = 0
 *             else:
 */
    __pyx_t_1 = PyInt_FromLong((__pyx_v_chr3[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    __pyx_t_5 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_1, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 199; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "LDModel.pyx":200
 *                     exit(-1)
 *             if int(chr(chr3[snp_idx])) == int(self._allele_0):
 *                 self._chr3[snp_idx] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if int(chr(chr3[snp_idx])) == int(self._allele_1):
 */
      (__pyx_v_self->_chr3[__pyx_v_snp_idx]) = 0;
      goto __pyx_L9;
    }
    /*else*/ {

      /* "LDModel.pyx":202
 *                 self._chr3[snp_idx] = 0
 *             else:
 *                 if int(chr(chr3[snp_idx])) == int(self._allele_1):             # <<<<<<<<<<<<<<
 *                     self._chr3[snp_idx] = 1
 *                 else:
 */
      __pyx_t_6 = PyInt_FromLong((__pyx_v_chr3[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyInt_FromLong(__pyx_v_self->_allele_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_RichCompare(__pyx_t_6, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 202; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_9) {

        /* "LDModel.pyx":203
 *             else:
 *                 if int(chr(chr3[snp_idx])) == int(self._allele_1):
 *                     self._chr3[snp_idx] = 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr3[snp_idx])))
 */
        (__pyx_v_self->_chr3[__pyx_v_snp_idx]) = 1;
        goto __pyx_L10;
      }
      /*else*/ {

        /* "LDModel.pyx":205
 *                     self._chr3[snp_idx] = 1
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr3[snp_idx])))             # <<<<<<<<<<<<<<
 *                     exit(-1)
 *             if int(chr(chr4[snp_idx])) == int(self._allele_0):
 */
        __pyx_t_1 = PyInt_FromLong((__pyx_v_chr3[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
        __Pyx_GIVEREF(__pyx_t_1);
        __pyx_t_1 = 0;
        __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
        __pyx_t_5 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        if (__Pyx_PrintOne(0, __pyx_t_5) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 205; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

        /* "LDModel.pyx":206
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr3[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr4[snp_idx])) == int(self._allele_0):
 *                 self._chr4[snp_idx] = 0
 */
        __pyx_t_5 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_12), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      }
      __pyx_L10:;
    }
    __pyx_L9:;

    /* "LDModel.pyx":207
 *                     print "unidentified allele: " + str(int(chr(chr3[snp_idx])))
 *                     exit(-1)
 *             if int(chr(chr4[snp_idx])) == int(self._allele_0):             # <<<<<<<<<<<<<<
 *                 self._chr4[snp_idx] = 0
 *             else:
 */
    __pyx_t_5 = PyInt_FromLong((__pyx_v_chr4[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
    __Pyx_GIVEREF(__pyx_t_5);
    __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __pyx_t_6 = PyObject_RichCompare(__pyx_t_5, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_6); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_6); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 207; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    if (__pyx_t_9) {

      /* "LDModel.pyx":208
 *                     exit(-1)
 *             if int(chr(chr4[snp_idx])) == int(self._allele_0):
 *                 self._chr4[snp_idx] = 0             # <<<<<<<<<<<<<<
 *             else:
 *                 if int(chr(chr4[snp_idx])) == int(self._allele_1):
 */
      (__pyx_v_self->_chr4[__pyx_v_snp_idx]) = 0;
      goto __pyx_L11;
    }
    /*else*/ {

      /* "LDModel.pyx":210
 *                 self._chr4[snp_idx] = 0
 *             else:
 *                 if int(chr(chr4[snp_idx])) == int(self._allele_1):             # <<<<<<<<<<<<<<
 *                     self._chr4[snp_idx] = 1
 *                 else:
 */
      __pyx_t_6 = PyInt_FromLong((__pyx_v_chr4[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_allele_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_RichCompare(__pyx_t_6, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_9 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_9 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 210; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_9) {

        /* "LDModel.pyx":211
 *             else:
 *                 if int(chr(chr4[snp_idx])) == int(self._allele_1):
 *                     self._chr4[snp_idx] = 1             # <<<<<<<<<<<<<<
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr4[snp_idx])))
 */
        (__pyx_v_self->_chr4[__pyx_v_snp_idx]) = 1;
        goto __pyx_L12;
      }
      /*else*/ {

        /* "LDModel.pyx":213
 *                     self._chr4[snp_idx] = 1
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr4[snp_idx])))             # <<<<<<<<<<<<<<
 *                     exit(-1)
 * 
 */
        __pyx_t_5 = PyInt_FromLong((__pyx_v_chr4[__pyx_v_snp_idx])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(__pyx_builtin_chr, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_5);
        __Pyx_GIVEREF(__pyx_t_5);
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
        __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_9), __pyx_t_5); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        if (__Pyx_PrintOne(0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 213; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "LDModel.pyx":214
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr4[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
        __pyx_t_1 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_13), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      }
      __pyx_L12:;
    }
    __pyx_L11:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("LDModel.LDModel.set_chrs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_9set_chrs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_9set_chrs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  char *__pyx_v_chr1;
  char *__pyx_v_chr2;
  char *__pyx_v_chr3;
  char *__pyx_v_chr4;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_chrs (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__chr1,&__pyx_n_s__chr2,&__pyx_n_s__chr3,&__pyx_n_s__chr4,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chr1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chr2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_chrs", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chr3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_chrs", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__chr4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("set_chrs", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "set_chrs") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_chr1 = PyBytes_AsString(values[0]); if (unlikely((!__pyx_v_chr1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_chr2 = PyBytes_AsString(values[1]); if (unlikely((!__pyx_v_chr2) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_chr3 = PyBytes_AsString(values[2]); if (unlikely((!__pyx_v_chr3) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_chr4 = PyBytes_AsString(values[3]); if (unlikely((!__pyx_v_chr4) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("set_chrs", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.set_chrs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_8set_chrs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), __pyx_v_chr1, __pyx_v_chr2, __pyx_v_chr3, __pyx_v_chr4);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":180
 *             self._alphas[i] = alphas[i]
 * 
 *     cpdef set_chrs(self, char* chr1, char* chr2, char* chr3, char* chr4):             # <<<<<<<<<<<<<<
 * 
 *         for snp_idx in range(self._snp_num):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_8set_chrs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, char *__pyx_v_chr1, char *__pyx_v_chr2, char *__pyx_v_chr3, char *__pyx_v_chr4) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_chrs", 0);
  __Pyx_TraceCall("set_chrs", __pyx_f[0], 180);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->set_chrs(__pyx_v_self, __pyx_v_chr1, __pyx_v_chr2, __pyx_v_chr3, __pyx_v_chr4, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 180; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.set_chrs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_11set_prefix_string(PyObject *__pyx_v_self, PyObject *__pyx_arg_new_prefix_string); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_11set_prefix_string(PyObject *__pyx_v_self, PyObject *__pyx_arg_new_prefix_string) {
  char *__pyx_v_new_prefix_string;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_prefix_string (wrapper)", 0);
  assert(__pyx_arg_new_prefix_string); {
    __pyx_v_new_prefix_string = PyBytes_AsString(__pyx_arg_new_prefix_string); if (unlikely((!__pyx_v_new_prefix_string) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 217; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.set_prefix_string", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_10set_prefix_string(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((char *)__pyx_v_new_prefix_string));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":217
 * 
 * 
 *     def set_prefix_string(self, char* new_prefix_string):             # <<<<<<<<<<<<<<
 *         self._prefix_string = <char *> malloc((strlen(new_prefix_string) + 1) * sizeof(char))
 *         strncpy(self._prefix_string, new_prefix_string, strlen(new_prefix_string))
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_10set_prefix_string(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, char *__pyx_v_new_prefix_string) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_prefix_string", 0);
  __Pyx_TraceCall("set_prefix_string", __pyx_f[0], 217);

  /* "LDModel.pyx":218
 * 
 *     def set_prefix_string(self, char* new_prefix_string):
 *         self._prefix_string = <char *> malloc((strlen(new_prefix_string) + 1) * sizeof(char))             # <<<<<<<<<<<<<<
 *         strncpy(self._prefix_string, new_prefix_string, strlen(new_prefix_string))
 *         self._prefix_string[strlen(new_prefix_string)] = '\0'
 */
  __pyx_v_self->_prefix_string = ((char *)malloc(((strlen(__pyx_v_new_prefix_string) + 1) * (sizeof(char)))));

  /* "LDModel.pyx":219
 *     def set_prefix_string(self, char* new_prefix_string):
 *         self._prefix_string = <char *> malloc((strlen(new_prefix_string) + 1) * sizeof(char))
 *         strncpy(self._prefix_string, new_prefix_string, strlen(new_prefix_string))             # <<<<<<<<<<<<<<
 *         self._prefix_string[strlen(new_prefix_string)] = '\0'
 * 
 */
  strncpy(__pyx_v_self->_prefix_string, __pyx_v_new_prefix_string, strlen(__pyx_v_new_prefix_string));

  /* "LDModel.pyx":220
 *         self._prefix_string = <char *> malloc((strlen(new_prefix_string) + 1) * sizeof(char))
 *         strncpy(self._prefix_string, new_prefix_string, strlen(new_prefix_string))
 *         self._prefix_string[strlen(new_prefix_string)] = '\0'             # <<<<<<<<<<<<<<
 * 
 * 
 */
  (__pyx_v_self->_prefix_string[strlen(__pyx_v_new_prefix_string)]) = '\x00';

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_13read_map(PyObject *__pyx_v_self, PyObject *__pyx_v_map_file_name); /*proto*/
static char __pyx_doc_7LDModel_7LDModel_12read_map[] = "\n        read the (PLINK) map file\n        ";
static PyObject *__pyx_pw_7LDModel_7LDModel_13read_map(PyObject *__pyx_v_self, PyObject *__pyx_v_map_file_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_map (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_12read_map(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_map_file_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":223
 * 
 * 
 *     def read_map(self, map_file_name):             # <<<<<<<<<<<<<<
 *         '''
 *         read the (PLINK) map file
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_12read_map(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_map_file_name) {
  PyObject *__pyx_v_map_file = NULL;
  int __pyx_v_first_read;
  int __pyx_v_done;
  long __pyx_v_buffer_size;
  PyObject *__pyx_v_snp_idx = NULL;
  PyObject *__pyx_v_lines = NULL;
  PyObject *__pyx_v_line = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  Py_ssize_t __pyx_t_12;
  PyObject *__pyx_t_13 = NULL;
  PyObject *__pyx_t_14 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("read_map", 0);
  __Pyx_TraceCall("read_map", __pyx_f[0], 223);

  /* "LDModel.pyx":227
 *         read the (PLINK) map file
 *         '''
 *         if not os.path.exists(map_file_name):             # <<<<<<<<<<<<<<
 *             print "the file: " + map_file_name + " does not exist!"
 *             exit(-1)
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__path); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__exists); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_map_file_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_map_file_name);
  __Pyx_GIVEREF(__pyx_v_map_file_name);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 227; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = (!__pyx_t_4);
  if (__pyx_t_5) {

    /* "LDModel.pyx":228
 *         '''
 *         if not os.path.exists(map_file_name):
 *             print "the file: " + map_file_name + " does not exist!"             # <<<<<<<<<<<<<<
 *             exit(-1)
 * 
 */
    __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_v_map_file_name); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_15)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 228; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":229
 *         if not os.path.exists(map_file_name):
 *             print "the file: " + map_file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         print "reading from map file: " + map_file_name
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_16), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":231
 *             exit(-1)
 * 
 *         print "reading from map file: " + map_file_name             # <<<<<<<<<<<<<<
 * 
 *         with open(map_file_name) as map_file:
 */
  __pyx_t_2 = PyNumber_Add(((PyObject *)__pyx_kp_s_17), __pyx_v_map_file_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 231; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":233
 *         print "reading from map file: " + map_file_name
 * 
 *         with open(map_file_name) as map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  /*with:*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_map_file_name);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_map_file_name);
    __Pyx_GIVEREF(__pyx_v_map_file_name);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____enter__); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __pyx_v_map_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":235
 *         with open(map_file_name) as map_file:
 * 
 *             first_read = True             # <<<<<<<<<<<<<<
 *             done = False
 *             buffer_size = 100
 */
          __pyx_v_first_read = 1;

          /* "LDModel.pyx":236
 * 
 *             first_read = True
 *             done = False             # <<<<<<<<<<<<<<
 *             buffer_size = 100
 *             snp_idx = 0
 */
          __pyx_v_done = 0;

          /* "LDModel.pyx":237
 *             first_read = True
 *             done = False
 *             buffer_size = 100             # <<<<<<<<<<<<<<
 *             snp_idx = 0
 * 
 */
          __pyx_v_buffer_size = 100;

          /* "LDModel.pyx":238
 *             done = False
 *             buffer_size = 100
 *             snp_idx = 0             # <<<<<<<<<<<<<<
 * 
 *             while True:
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_v_snp_idx = __pyx_int_0;

          /* "LDModel.pyx":240
 *             snp_idx = 0
 * 
 *             while True:             # <<<<<<<<<<<<<<
 * 
 *                 if done:
 */
          while (1) {
            if (!1) break;

            /* "LDModel.pyx":242
 *             while True:
 * 
 *                 if done:             # <<<<<<<<<<<<<<
 *                     break
 *                 # read next buffer_size lines from the file
 */
            if (__pyx_v_done) {

              /* "LDModel.pyx":243
 * 
 *                 if done:
 *                     break             # <<<<<<<<<<<<<<
 *                 # read next buffer_size lines from the file
 *                 if not first_read:
 */
              goto __pyx_L18_break;
              goto __pyx_L19;
            }
            __pyx_L19:;

            /* "LDModel.pyx":245
 *                     break
 *                 # read next buffer_size lines from the file
 *                 if not first_read:             # <<<<<<<<<<<<<<
 *                     lines = list(islice(map_file, buffer_size))
 *                 else:
 */
            __pyx_t_5 = (!__pyx_v_first_read);
            if (__pyx_t_5) {

              /* "LDModel.pyx":246
 *                 # read next buffer_size lines from the file
 *                 if not first_read:
 *                     lines = list(islice(map_file, buffer_size))             # <<<<<<<<<<<<<<
 *                 else:
 *                     lines = list(islice(map_file, 1, buffer_size))
 */
              __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_3 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_INCREF(__pyx_v_map_file);
              PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_map_file);
              __Pyx_GIVEREF(__pyx_v_map_file);
              PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
              __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 246; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
              __Pyx_XDECREF(((PyObject *)__pyx_v_lines));
              __pyx_v_lines = ((PyObject*)__pyx_t_3);
              __pyx_t_3 = 0;
              goto __pyx_L20;
            }
            /*else*/ {

              /* "LDModel.pyx":248
 *                     lines = list(islice(map_file, buffer_size))
 *                 else:
 *                     lines = list(islice(map_file, 1, buffer_size))             # <<<<<<<<<<<<<<
 *                     first_read = False
 * 
 */
              __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_INCREF(__pyx_v_map_file);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_map_file);
              __Pyx_GIVEREF(__pyx_v_map_file);
              __Pyx_INCREF(__pyx_int_1);
              PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_1);
              __Pyx_GIVEREF(__pyx_int_1);
              PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_2);
              __Pyx_GIVEREF(__pyx_t_2);
              __pyx_t_2 = 0;
              __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
              __Pyx_GIVEREF(__pyx_t_2);
              __pyx_t_2 = 0;
              __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 248; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __Pyx_XDECREF(((PyObject *)__pyx_v_lines));
              __pyx_v_lines = ((PyObject*)__pyx_t_2);
              __pyx_t_2 = 0;

              /* "LDModel.pyx":249
 *                 else:
 *                     lines = list(islice(map_file, 1, buffer_size))
 *                     first_read = False             # <<<<<<<<<<<<<<
 * 
 *                 if len(lines) == 0:
 */
              __pyx_v_first_read = 0;
            }
            __pyx_L20:;

            /* "LDModel.pyx":251
 *                     first_read = False
 * 
 *                 if len(lines) == 0:             # <<<<<<<<<<<<<<
 *                     done = True
 * 
 */
            __pyx_t_10 = PyList_GET_SIZE(((PyObject *)__pyx_v_lines)); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 251; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __pyx_t_5 = (__pyx_t_10 == 0);
            if (__pyx_t_5) {

              /* "LDModel.pyx":252
 * 
 *                 if len(lines) == 0:
 *                     done = True             # <<<<<<<<<<<<<<
 * 
 *                 for line in lines:
 */
              __pyx_v_done = 1;
              goto __pyx_L21;
            }
            __pyx_L21:;

            /* "LDModel.pyx":254
 *                     done = True
 * 
 *                 for line in lines:             # <<<<<<<<<<<<<<
 *                     #print "line: " + line
 *                     line = line.split(" ")
 */
            __pyx_t_2 = ((PyObject *)__pyx_v_lines); __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
            for (;;) {
              if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #else
              __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 254; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #endif
              __Pyx_XDECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_1;
              __pyx_t_1 = 0;

              /* "LDModel.pyx":256
 *                 for line in lines:
 *                     #print "line: " + line
 *                     line = line.split(" ")             # <<<<<<<<<<<<<<
 *                     #print "pos: " + line[0]
 *                     self._position[snp_idx] = int(line[3])
 */
              __pyx_t_1 = PyObject_GetAttr(__pyx_v_line, __pyx_n_s__split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_19), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_DECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":258
 *                     line = line.split(" ")
 *                     #print "pos: " + line[0]
 *                     self._position[snp_idx] = int(line[3])             # <<<<<<<<<<<<<<
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:
 */
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_line, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __pyx_t_11 = __Pyx_PyInt_AsInt(__pyx_t_3); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_snp_idx); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 258; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              (__pyx_v_self->_position[__pyx_t_12]) = __pyx_t_11;

              /* "LDModel.pyx":259
 *                     #print "pos: " + line[0]
 *                     self._position[snp_idx] = int(line[3])
 *                     snp_idx += 1             # <<<<<<<<<<<<<<
 *                     if snp_idx >= self._snp_num:
 *                         done = True;
 */
              __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_snp_idx, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 259; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_v_snp_idx);
              __pyx_v_snp_idx = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":260
 *                     self._position[snp_idx] = int(line[3])
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:             # <<<<<<<<<<<<<<
 *                         done = True;
 *                         break
 */
              __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_snp_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyObject_RichCompare(__pyx_v_snp_idx, __pyx_t_3, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 260; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              if (__pyx_t_5) {

                /* "LDModel.pyx":261
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:
 *                         done = True;             # <<<<<<<<<<<<<<
 *                         break
 * 
 */
                __pyx_v_done = 1;

                /* "LDModel.pyx":262
 *                     if snp_idx >= self._snp_num:
 *                         done = True;
 *                         break             # <<<<<<<<<<<<<<
 * 
 *     def read_genetic_map(self, genetic_map_file_name):
 */
                goto __pyx_L23_break;
                goto __pyx_L24;
              }
              __pyx_L24:;
            }
            __pyx_L23_break:;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_L18_break:;
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L15_try_end;
        __pyx_L8_error:;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "LDModel.pyx":233
 *         print "reading from map file: " + map_file_name
 * 
 *         with open(map_file_name) as map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_13 = PyTuple_New(3); if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_13, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_13, 1, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_13, 2, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_14 = PyObject_Call(__pyx_t_6, __pyx_t_13, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_14);
          __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_14);
          __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
          if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __pyx_t_4 = (!__pyx_t_5);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_ErrRestore(__pyx_t_2, __pyx_t_1, __pyx_t_3);
            __pyx_t_2 = 0; __pyx_t_1 = 0; __pyx_t_3 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
            goto __pyx_L27;
          }
          __pyx_L27:;
          __Pyx_DECREF(((PyObject *)__pyx_t_13)); __pyx_t_13 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L9_exception_handled;
        }
        __pyx_L10_except_error:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L9_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_9 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_20, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L28;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L28:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_13);
  __Pyx_AddTraceback("LDModel.LDModel.read_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_map_file);
  __Pyx_XDECREF(__pyx_v_snp_idx);
  __Pyx_XDECREF(__pyx_v_lines);
  __Pyx_XDECREF(__pyx_v_line);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_15read_genetic_map(PyObject *__pyx_v_self, PyObject *__pyx_v_genetic_map_file_name); /*proto*/
static char __pyx_doc_7LDModel_7LDModel_14read_genetic_map[] = "\n        read the genetic map from hapmap format file\n        ";
static PyObject *__pyx_pw_7LDModel_7LDModel_15read_genetic_map(PyObject *__pyx_v_self, PyObject *__pyx_v_genetic_map_file_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_genetic_map (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_14read_genetic_map(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_genetic_map_file_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":264
 *                         break
 * 
 *     def read_genetic_map(self, genetic_map_file_name):             # <<<<<<<<<<<<<<
 *         '''
 *         read the genetic map from hapmap format file
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_14read_genetic_map(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_genetic_map_file_name) {
  PyObject *__pyx_v_genetic_map_file = NULL;
  int __pyx_v_first_read;
  int __pyx_v_done;
  long __pyx_v_buffer_size;
  PyObject *__pyx_v_snp_idx = NULL;
  PyObject *__pyx_v_lines = NULL;
  PyObject *__pyx_v_line = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  int __pyx_t_11;
  double __pyx_t_12;
  double __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  PyObject *__pyx_t_15 = NULL;
  PyObject *__pyx_t_16 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("read_genetic_map", 0);
  __Pyx_TraceCall("read_genetic_map", __pyx_f[0], 264);

  /* "LDModel.pyx":268
 *         read the genetic map from hapmap format file
 *         '''
 *         if not os.path.exists(genetic_map_file_name):             # <<<<<<<<<<<<<<
 *             print "the file: " + genetic_map_file_name + " does not exist!"
 *             exit(-1)
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__path); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__exists); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_genetic_map_file_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_genetic_map_file_name);
  __Pyx_GIVEREF(__pyx_v_genetic_map_file_name);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 268; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = (!__pyx_t_4);
  if (__pyx_t_5) {

    /* "LDModel.pyx":269
 *         '''
 *         if not os.path.exists(genetic_map_file_name):
 *             print "the file: " + genetic_map_file_name + " does not exist!"             # <<<<<<<<<<<<<<
 *             exit(-1)
 * 
 */
    __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_v_genetic_map_file_name); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_15)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 269; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":270
 *         if not os.path.exists(genetic_map_file_name):
 *             print "the file: " + genetic_map_file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         print "reading from genetic map file: " + genetic_map_file_name
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_21), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":272
 *             exit(-1)
 * 
 *         print "reading from genetic map file: " + genetic_map_file_name             # <<<<<<<<<<<<<<
 * 
 *         with open(genetic_map_file_name) as genetic_map_file:
 */
  __pyx_t_2 = PyNumber_Add(((PyObject *)__pyx_kp_s_22), __pyx_v_genetic_map_file_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 272; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":274
 *         print "reading from genetic map file: " + genetic_map_file_name
 * 
 *         with open(genetic_map_file_name) as genetic_map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  /*with:*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_genetic_map_file_name);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_genetic_map_file_name);
    __Pyx_GIVEREF(__pyx_v_genetic_map_file_name);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____enter__); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __pyx_v_genetic_map_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":276
 *         with open(genetic_map_file_name) as genetic_map_file:
 * 
 *             first_read = True             # <<<<<<<<<<<<<<
 *             done = False
 *             buffer_size = 100
 */
          __pyx_v_first_read = 1;

          /* "LDModel.pyx":277
 * 
 *             first_read = True
 *             done = False             # <<<<<<<<<<<<<<
 *             buffer_size = 100
 *             snp_idx = 0
 */
          __pyx_v_done = 0;

          /* "LDModel.pyx":278
 *             first_read = True
 *             done = False
 *             buffer_size = 100             # <<<<<<<<<<<<<<
 *             snp_idx = 0
 * 
 */
          __pyx_v_buffer_size = 100;

          /* "LDModel.pyx":279
 *             done = False
 *             buffer_size = 100
 *             snp_idx = 0             # <<<<<<<<<<<<<<
 * 
 *             while True:
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_v_snp_idx = __pyx_int_0;

          /* "LDModel.pyx":281
 *             snp_idx = 0
 * 
 *             while True:             # <<<<<<<<<<<<<<
 * 
 *                 if done:
 */
          while (1) {
            if (!1) break;

            /* "LDModel.pyx":283
 *             while True:
 * 
 *                 if done:             # <<<<<<<<<<<<<<
 *                     break
 *                 # read next buffer_size lines from the file
 */
            if (__pyx_v_done) {

              /* "LDModel.pyx":284
 * 
 *                 if done:
 *                     break             # <<<<<<<<<<<<<<
 *                 # read next buffer_size lines from the file
 *                 if not first_read:
 */
              goto __pyx_L18_break;
              goto __pyx_L19;
            }
            __pyx_L19:;

            /* "LDModel.pyx":286
 *                     break
 *                 # read next buffer_size lines from the file
 *                 if not first_read:             # <<<<<<<<<<<<<<
 *                     lines = list(islice(genetic_map_file, buffer_size))
 *                 else:
 */
            __pyx_t_5 = (!__pyx_v_first_read);
            if (__pyx_t_5) {

              /* "LDModel.pyx":287
 *                 # read next buffer_size lines from the file
 *                 if not first_read:
 *                     lines = list(islice(genetic_map_file, buffer_size))             # <<<<<<<<<<<<<<
 *                 else:
 *                     lines = list(islice(genetic_map_file, 1, buffer_size))
 */
              __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_3 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = PyTuple_New(2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_INCREF(__pyx_v_genetic_map_file);
              PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_genetic_map_file);
              __Pyx_GIVEREF(__pyx_v_genetic_map_file);
              PyTuple_SET_ITEM(__pyx_t_2, 1, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
              __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 287; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
              __Pyx_XDECREF(((PyObject *)__pyx_v_lines));
              __pyx_v_lines = ((PyObject*)__pyx_t_3);
              __pyx_t_3 = 0;
              goto __pyx_L20;
            }
            /*else*/ {

              /* "LDModel.pyx":289
 *                     lines = list(islice(genetic_map_file, buffer_size))
 *                 else:
 *                     lines = list(islice(genetic_map_file, 1, buffer_size))             # <<<<<<<<<<<<<<
 *                     first_read = False
 * 
 */
              __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_2 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_1 = PyTuple_New(3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_INCREF(__pyx_v_genetic_map_file);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_genetic_map_file);
              __Pyx_GIVEREF(__pyx_v_genetic_map_file);
              __Pyx_INCREF(__pyx_int_1);
              PyTuple_SET_ITEM(__pyx_t_1, 1, __pyx_int_1);
              __Pyx_GIVEREF(__pyx_int_1);
              PyTuple_SET_ITEM(__pyx_t_1, 2, __pyx_t_2);
              __Pyx_GIVEREF(__pyx_t_2);
              __pyx_t_2 = 0;
              __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
              __Pyx_GIVEREF(__pyx_t_2);
              __pyx_t_2 = 0;
              __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 289; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __Pyx_XDECREF(((PyObject *)__pyx_v_lines));
              __pyx_v_lines = ((PyObject*)__pyx_t_2);
              __pyx_t_2 = 0;

              /* "LDModel.pyx":290
 *                 else:
 *                     lines = list(islice(genetic_map_file, 1, buffer_size))
 *                     first_read = False             # <<<<<<<<<<<<<<
 * 
 *                 if len(lines) == 0:
 */
              __pyx_v_first_read = 0;
            }
            __pyx_L20:;

            /* "LDModel.pyx":292
 *                     first_read = False
 * 
 *                 if len(lines) == 0:             # <<<<<<<<<<<<<<
 *                     done = True
 * 
 */
            __pyx_t_10 = PyList_GET_SIZE(((PyObject *)__pyx_v_lines)); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 292; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __pyx_t_5 = (__pyx_t_10 == 0);
            if (__pyx_t_5) {

              /* "LDModel.pyx":293
 * 
 *                 if len(lines) == 0:
 *                     done = True             # <<<<<<<<<<<<<<
 * 
 *                 for line in lines:
 */
              __pyx_v_done = 1;
              goto __pyx_L21;
            }
            __pyx_L21:;

            /* "LDModel.pyx":295
 *                     done = True
 * 
 *                 for line in lines:             # <<<<<<<<<<<<<<
 *                     #print "line: " + line
 *                     line = line.split(" ")
 */
            __pyx_t_2 = ((PyObject *)__pyx_v_lines); __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
            for (;;) {
              if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_1); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #else
              __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 295; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #endif
              __Pyx_XDECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_1;
              __pyx_t_1 = 0;

              /* "LDModel.pyx":297
 *                 for line in lines:
 *                     #print "line: " + line
 *                     line = line.split(" ")             # <<<<<<<<<<<<<<
 *                     #print "pos: " + line[0]
 *                     # TODO: this is a bug - need to read only positions that are in _position
 */
              __pyx_t_1 = PyObject_GetAttr(__pyx_v_line, __pyx_n_s__split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_23), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              __Pyx_DECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":300
 *                     #print "pos: " + line[0]
 *                     # TODO: this is a bug - need to read only positions that are in _position
 *                     self._genetic_map[snp_idx] = create_gen_map_entry(int(line[0]),float(line[1]),float(line[2]))             # <<<<<<<<<<<<<<
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:
 */
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_line, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
              __Pyx_GIVEREF(__pyx_t_3);
              __pyx_t_3 = 0;
              __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
              __pyx_t_11 = __Pyx_PyInt_AsInt(__pyx_t_3); if (unlikely((__pyx_t_11 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_line, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_12 = __Pyx_PyObject_AsDouble(__pyx_t_3); if (unlikely(__pyx_t_12 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_3 = __Pyx_GetItemInt(__pyx_v_line, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_13 = __Pyx_PyObject_AsDouble(__pyx_t_3); if (unlikely(__pyx_t_13 == ((double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_v_snp_idx); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 300; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              (__pyx_v_self->_genetic_map[__pyx_t_14]) = create_gen_map_entry(__pyx_t_11, __pyx_t_12, __pyx_t_13);

              /* "LDModel.pyx":301
 *                     # TODO: this is a bug - need to read only positions that are in _position
 *                     self._genetic_map[snp_idx] = create_gen_map_entry(int(line[0]),float(line[1]),float(line[2]))
 *                     snp_idx += 1             # <<<<<<<<<<<<<<
 *                     if snp_idx >= self._snp_num:
 *                         done = True;
 */
              __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_snp_idx, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 301; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_v_snp_idx);
              __pyx_v_snp_idx = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":302
 *                     self._genetic_map[snp_idx] = create_gen_map_entry(int(line[0]),float(line[1]),float(line[2]))
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:             # <<<<<<<<<<<<<<
 *                         done = True;
 *                         break
 */
              __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_snp_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyObject_RichCompare(__pyx_v_snp_idx, __pyx_t_3, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 302; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              if (__pyx_t_5) {

                /* "LDModel.pyx":303
 *                     snp_idx += 1
 *                     if snp_idx >= self._snp_num:
 *                         done = True;             # <<<<<<<<<<<<<<
 *                         break
 * 
 */
                __pyx_v_done = 1;

                /* "LDModel.pyx":304
 *                     if snp_idx >= self._snp_num:
 *                         done = True;
 *                         break             # <<<<<<<<<<<<<<
 * 
 * 
 */
                goto __pyx_L23_break;
                goto __pyx_L24;
              }
              __pyx_L24:;
            }
            __pyx_L23_break:;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_L18_break:;
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L15_try_end;
        __pyx_L8_error:;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "LDModel.pyx":274
 *         print "reading from genetic map file: " + genetic_map_file_name
 * 
 *         with open(genetic_map_file_name) as genetic_map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_genetic_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_15 = PyTuple_New(3); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_15);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_15, 1, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_15, 2, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_16 = PyObject_Call(__pyx_t_6, __pyx_t_15, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_16);
          __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_16);
          __Pyx_DECREF(__pyx_t_16); __pyx_t_16 = 0;
          if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __pyx_t_4 = (!__pyx_t_5);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_ErrRestore(__pyx_t_2, __pyx_t_1, __pyx_t_3);
            __pyx_t_2 = 0; __pyx_t_1 = 0; __pyx_t_3 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
            goto __pyx_L27;
          }
          __pyx_L27:;
          __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L9_exception_handled;
        }
        __pyx_L10_except_error:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L9_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_9 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_24, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L28;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L28:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("LDModel.LDModel.read_genetic_map", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_genetic_map_file);
  __Pyx_XDECREF(__pyx_v_snp_idx);
  __Pyx_XDECREF(__pyx_v_lines);
  __Pyx_XDECREF(__pyx_v_line);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_17read_haplos(PyObject *__pyx_v_self, PyObject *__pyx_v_file_name); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_17read_haplos(PyObject *__pyx_v_self, PyObject *__pyx_v_file_name) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_haplos (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_16read_haplos(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_file_name));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":307
 * 
 * 
 *     def read_haplos(self, file_name):             # <<<<<<<<<<<<<<
 * 
 *         if not os.path.exists(file_name):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_16read_haplos(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_file_name) {
  PyObject *__pyx_v_count = NULL;
  PyObject *__pyx_v_haplos_file = NULL;
  PyObject *__pyx_v_line = NULL;
  CYTHON_UNUSED int __pyx_v_first_read;
  int __pyx_v_done;
  long __pyx_v_buffer_size;
  PyObject *__pyx_v_hap_idx = NULL;
  PyObject *__pyx_v_lines = NULL;
  PyObject *__pyx_v_line_trunc = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  Py_ssize_t __pyx_t_10;
  PyObject *(*__pyx_t_11)(PyObject *);
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  int __pyx_t_14;
  int __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  char *__pyx_t_17;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("read_haplos", 0);
  __Pyx_TraceCall("read_haplos", __pyx_f[0], 307);

  /* "LDModel.pyx":309
 *     def read_haplos(self, file_name):
 * 
 *         if not os.path.exists(file_name):             # <<<<<<<<<<<<<<
 *             print "the file: " + file_name + " does not exist!"
 *             exit(-1)
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__path); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__exists); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_file_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_file_name);
  __Pyx_GIVEREF(__pyx_v_file_name);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 309; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = (!__pyx_t_4);
  if (__pyx_t_5) {

    /* "LDModel.pyx":310
 * 
 *         if not os.path.exists(file_name):
 *             print "the file: " + file_name + " does not exist!"             # <<<<<<<<<<<<<<
 *             exit(-1)
 * 
 */
    __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_v_file_name); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_15)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 310; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":311
 *         if not os.path.exists(file_name):
 *             print "the file: " + file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         count = 0
 */
    __pyx_t_2 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_25), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":313
 *             exit(-1)
 * 
 *         count = 0             # <<<<<<<<<<<<<<
 *         with open(file_name) as haplos_file:
 *             for line in haplos_file.xreadlines(  ):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_count = __pyx_int_0;

  /* "LDModel.pyx":314
 * 
 *         count = 0
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 *             for line in haplos_file.xreadlines(  ):
 *                 count += 1
 */
  /*with:*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____enter__); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __pyx_v_haplos_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":315
 *         count = 0
 *         with open(file_name) as haplos_file:
 *             for line in haplos_file.xreadlines(  ):             # <<<<<<<<<<<<<<
 *                 count += 1
 * 
 */
          __pyx_t_1 = PyObject_GetAttr(__pyx_v_haplos_file, __pyx_n_s__xreadlines); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
            __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_10 = 0;
            __pyx_t_11 = NULL;
          } else {
            __pyx_t_10 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_11 = Py_TYPE(__pyx_t_1)->tp_iternext;
          }
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          for (;;) {
            if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_1)) {
              if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #else
              __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #endif
            } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_1)) {
              if (__pyx_t_10 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #else
              __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              #endif
            } else {
              __pyx_t_3 = __pyx_t_11(__pyx_t_1);
              if (unlikely(!__pyx_t_3)) {
                if (PyErr_Occurred()) {
                  if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                  else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 315; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                }
                break;
              }
              __Pyx_GOTREF(__pyx_t_3);
            }
            __Pyx_XDECREF(__pyx_v_line);
            __pyx_v_line = __pyx_t_3;
            __pyx_t_3 = 0;

            /* "LDModel.pyx":316
 *         with open(file_name) as haplos_file:
 *             for line in haplos_file.xreadlines(  ):
 *                 count += 1             # <<<<<<<<<<<<<<
 * 
 *         if count == 0 or count % 2 == 1:
 */
            __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_count, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 316; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_v_count);
            __pyx_v_count = __pyx_t_3;
            __pyx_t_3 = 0;
          }
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L15_try_end;
        __pyx_L8_error:;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "LDModel.pyx":314
 * 
 *         count = 0
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 *             for line in haplos_file.xreadlines(  ):
 *                 count += 1
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_haplos", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_3, &__pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_2);
          __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __pyx_t_13 = PyObject_Call(__pyx_t_6, __pyx_t_12, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __pyx_t_4 = (!__pyx_t_5);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_ErrRestore(__pyx_t_1, __pyx_t_3, __pyx_t_2);
            __pyx_t_1 = 0; __pyx_t_3 = 0; __pyx_t_2 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
            goto __pyx_L21;
          }
          __pyx_L21:;
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          goto __pyx_L9_exception_handled;
        }
        __pyx_L10_except_error:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L9_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_9 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_26, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L22;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L22:;
  }

  /* "LDModel.pyx":318
 *                 count += 1
 * 
 *         if count == 0 or count % 2 == 1:             # <<<<<<<<<<<<<<
 *             print "bad number of haplotypes. quitting..."
 *             exit(-1)
 */
  __pyx_t_2 = PyObject_RichCompare(__pyx_v_count, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  if (!__pyx_t_4) {
    __pyx_t_2 = PyNumber_Remainder(__pyx_v_count, __pyx_int_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_3 = PyObject_RichCompare(__pyx_t_2, __pyx_int_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_14 = __pyx_t_5;
  } else {
    __pyx_t_14 = __pyx_t_4;
  }
  if (__pyx_t_14) {

    /* "LDModel.pyx":319
 * 
 *         if count == 0 or count % 2 == 1:
 *             print "bad number of haplotypes. quitting..."             # <<<<<<<<<<<<<<
 *             exit(-1)
 * 
 */
    if (__Pyx_PrintOne(0, ((PyObject *)__pyx_kp_s_27)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "LDModel.pyx":320
 *         if count == 0 or count % 2 == 1:
 *             print "bad number of haplotypes. quitting..."
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         self._nr_haplos = count
 */
    __pyx_t_3 = PyObject_Call(__pyx_builtin_exit, ((PyObject *)__pyx_k_tuple_28), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L23;
  }
  __pyx_L23:;

  /* "LDModel.pyx":322
 *             exit(-1)
 * 
 *         self._nr_haplos = count             # <<<<<<<<<<<<<<
 * 
 *         print "reading from haplos file: " + file_name
 */
  __pyx_t_15 = __Pyx_PyInt_AsInt(__pyx_v_count); if (unlikely((__pyx_t_15 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_v_self->_nr_haplos = __pyx_t_15;

  /* "LDModel.pyx":324
 *         self._nr_haplos = count
 * 
 *         print "reading from haplos file: " + file_name             # <<<<<<<<<<<<<<
 *         self._haplos = <char **> malloc(self._nr_haplos * sizeof(char *))
 * 
 */
  __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_s_29), __pyx_v_file_name); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  if (__Pyx_PrintOne(0, __pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

  /* "LDModel.pyx":325
 * 
 *         print "reading from haplos file: " + file_name
 *         self._haplos = <char **> malloc(self._nr_haplos * sizeof(char *))             # <<<<<<<<<<<<<<
 * 
 *         with open(file_name) as haplos_file:
 */
  __pyx_v_self->_haplos = ((char **)malloc((__pyx_v_self->_nr_haplos * (sizeof(char *)))));

  /* "LDModel.pyx":327
 *         self._haplos = <char **> malloc(self._nr_haplos * sizeof(char *))
 * 
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  /*with:*/ {
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s____enter__); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L24_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L24_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_7);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_XDECREF(__pyx_v_haplos_file);
          __pyx_v_haplos_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":329
 *         with open(file_name) as haplos_file:
 * 
 *             first_read = True             # <<<<<<<<<<<<<<
 *             done = False
 *             buffer_size = 100
 */
          __pyx_v_first_read = 1;

          /* "LDModel.pyx":330
 * 
 *             first_read = True
 *             done = False             # <<<<<<<<<<<<<<
 *             buffer_size = 100
 *             hap_idx = 0
 */
          __pyx_v_done = 0;

          /* "LDModel.pyx":331
 *             first_read = True
 *             done = False
 *             buffer_size = 100             # <<<<<<<<<<<<<<
 *             hap_idx = 0
 * 
 */
          __pyx_v_buffer_size = 100;

          /* "LDModel.pyx":332
 *             done = False
 *             buffer_size = 100
 *             hap_idx = 0             # <<<<<<<<<<<<<<
 * 
 *             while True:
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_v_hap_idx = __pyx_int_0;

          /* "LDModel.pyx":334
 *             hap_idx = 0
 * 
 *             while True:             # <<<<<<<<<<<<<<
 * 
 *                 if done:
 */
          while (1) {
            if (!1) break;

            /* "LDModel.pyx":336
 *             while True:
 * 
 *                 if done:             # <<<<<<<<<<<<<<
 *                     break
 *                 # read next buffer_size lines from the file
 */
            if (__pyx_v_done) {

              /* "LDModel.pyx":337
 * 
 *                 if done:
 *                     break             # <<<<<<<<<<<<<<
 *                 # read next buffer_size lines from the file
 *                 lines = list(islice(haplos_file, buffer_size))
 */
              goto __pyx_L38_break;
              goto __pyx_L39;
            }
            __pyx_L39:;

            /* "LDModel.pyx":339
 *                     break
 *                 # read next buffer_size lines from the file
 *                 lines = list(islice(haplos_file, buffer_size))             # <<<<<<<<<<<<<<
 * 
 *                 if len(lines) == 0:
 */
            __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__islice); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_2 = PyInt_FromLong(__pyx_v_buffer_size); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __pyx_t_3 = PyTuple_New(2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_INCREF(__pyx_v_haplos_file);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_haplos_file);
            __Pyx_GIVEREF(__pyx_v_haplos_file);
            PyTuple_SET_ITEM(__pyx_t_3, 1, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
            __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_3);
            PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_2);
            __pyx_t_2 = 0;
            __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyList_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 339; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __Pyx_GOTREF(__pyx_t_2);
            __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
            __Pyx_XDECREF(((PyObject *)__pyx_v_lines));
            __pyx_v_lines = ((PyObject*)__pyx_t_2);
            __pyx_t_2 = 0;

            /* "LDModel.pyx":341
 *                 lines = list(islice(haplos_file, buffer_size))
 * 
 *                 if len(lines) == 0:             # <<<<<<<<<<<<<<
 *                     done = True
 * 
 */
            __pyx_t_10 = PyList_GET_SIZE(((PyObject *)__pyx_v_lines)); if (unlikely(__pyx_t_10 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 341; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
            __pyx_t_14 = (__pyx_t_10 == 0);
            if (__pyx_t_14) {

              /* "LDModel.pyx":342
 * 
 *                 if len(lines) == 0:
 *                     done = True             # <<<<<<<<<<<<<<
 * 
 *                 for line in lines:
 */
              __pyx_v_done = 1;
              goto __pyx_L40;
            }
            __pyx_L40:;

            /* "LDModel.pyx":344
 *                     done = True
 * 
 *                 for line in lines:             # <<<<<<<<<<<<<<
 *                     #print "line: " + line
 *                     #print "pos: " + line[0]
 */
            __pyx_t_2 = ((PyObject *)__pyx_v_lines); __Pyx_INCREF(__pyx_t_2); __pyx_t_10 = 0;
            for (;;) {
              if (__pyx_t_10 >= PyList_GET_SIZE(__pyx_t_2)) break;
              #if CYTHON_COMPILING_IN_CPYTHON
              __pyx_t_3 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_10); __Pyx_INCREF(__pyx_t_3); __pyx_t_10++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              #else
              __pyx_t_3 = PySequence_ITEM(__pyx_t_2, __pyx_t_10); __pyx_t_10++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 344; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              #endif
              __Pyx_XDECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":347
 *                     #print "line: " + line
 *                     #print "pos: " + line[0]
 *                     line_trunc = line[:self._snp_num]             # <<<<<<<<<<<<<<
 *                     self._haplos[hap_idx] = <char *> malloc((self._snp_num) * sizeof(char))
 *                     strncpy(self._haplos[hap_idx], line_trunc,self._snp_num)
 */
              __pyx_t_3 = __Pyx_PySequence_GetSlice(__pyx_v_line, 0, __pyx_v_self->_snp_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 347; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_XDECREF(__pyx_v_line_trunc);
              __pyx_v_line_trunc = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":348
 *                     #print "pos: " + line[0]
 *                     line_trunc = line[:self._snp_num]
 *                     self._haplos[hap_idx] = <char *> malloc((self._snp_num) * sizeof(char))             # <<<<<<<<<<<<<<
 *                     strncpy(self._haplos[hap_idx], line_trunc,self._snp_num)
 *                     #py_bytes = line_trunc.encode('UTF-8')
 */
              __pyx_t_16 = __Pyx_PyIndex_AsSsize_t(__pyx_v_hap_idx); if (unlikely((__pyx_t_16 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 348; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              (__pyx_v_self->_haplos[__pyx_t_16]) = ((char *)malloc((__pyx_v_self->_snp_num * (sizeof(char)))));

              /* "LDModel.pyx":349
 *                     line_trunc = line[:self._snp_num]
 *                     self._haplos[hap_idx] = <char *> malloc((self._snp_num) * sizeof(char))
 *                     strncpy(self._haplos[hap_idx], line_trunc,self._snp_num)             # <<<<<<<<<<<<<<
 *                     #py_bytes = line_trunc.encode('UTF-8')
 *                     #self._haplos[hap_idx] = py_bytes
 */
              __pyx_t_16 = __Pyx_PyIndex_AsSsize_t(__pyx_v_hap_idx); if (unlikely((__pyx_t_16 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __pyx_t_17 = PyBytes_AsString(__pyx_v_line_trunc); if (unlikely((!__pyx_t_17) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 349; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              strncpy((__pyx_v_self->_haplos[__pyx_t_16]), __pyx_t_17, __pyx_v_self->_snp_num);

              /* "LDModel.pyx":353
 *                     #self._haplos[hap_idx] = py_bytes
 *                     #print self._haplos[hap_idx]
 *                     hap_idx += 1             # <<<<<<<<<<<<<<
 *                     if hap_idx >= self._nr_haplos:
 *                         done = True;
 */
              __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_hap_idx, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 353; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __Pyx_DECREF(__pyx_v_hap_idx);
              __pyx_v_hap_idx = __pyx_t_3;
              __pyx_t_3 = 0;

              /* "LDModel.pyx":354
 *                     #print self._haplos[hap_idx]
 *                     hap_idx += 1
 *                     if hap_idx >= self._nr_haplos:             # <<<<<<<<<<<<<<
 *                         done = True;
 *                         break
 */
              __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_nr_haplos); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyObject_RichCompare(__pyx_v_hap_idx, __pyx_t_3, Py_GE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 354; __pyx_clineno = __LINE__; goto __pyx_L28_error;}
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              if (__pyx_t_14) {

                /* "LDModel.pyx":355
 *                     hap_idx += 1
 *                     if hap_idx >= self._nr_haplos:
 *                         done = True;             # <<<<<<<<<<<<<<
 *                         break
 * 
 */
                __pyx_v_done = 1;

                /* "LDModel.pyx":356
 *                     if hap_idx >= self._nr_haplos:
 *                         done = True;
 *                         break             # <<<<<<<<<<<<<<
 * 
 *         return self._nr_haplos
 */
                goto __pyx_L42_break;
                goto __pyx_L43;
              }
              __pyx_L43:;
            }
            __pyx_L42_break:;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_L38_break:;
        }
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L35_try_end;
        __pyx_L28_error:;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "LDModel.pyx":327
 *         self._haplos = <char **> malloc(self._nr_haplos * sizeof(char *))
 * 
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_haplos", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_1, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L30_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L30_except_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_13 = PyObject_Call(__pyx_t_6, __pyx_t_12, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L30_except_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L30_except_error;}
          __pyx_t_4 = (!__pyx_t_14);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_ErrRestore(__pyx_t_2, __pyx_t_1, __pyx_t_3);
            __pyx_t_2 = 0; __pyx_t_1 = 0; __pyx_t_3 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L30_except_error;}
            goto __pyx_L46;
          }
          __pyx_L46:;
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L29_exception_handled;
        }
        __pyx_L30_except_error:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        goto __pyx_L1_error;
        __pyx_L29_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        __pyx_L35_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_7 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_30, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L47;
    __pyx_L24_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L47:;
  }

  /* "LDModel.pyx":358
 *                         break
 * 
 *         return self._nr_haplos             # <<<<<<<<<<<<<<
 * 
 *     def read_from_bgl_file(self, file_name, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_nr_haplos); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 358; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_r = __pyx_t_3;
  __pyx_t_3 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("LDModel.LDModel.read_haplos", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_count);
  __Pyx_XDECREF(__pyx_v_haplos_file);
  __Pyx_XDECREF(__pyx_v_line);
  __Pyx_XDECREF(__pyx_v_hap_idx);
  __Pyx_XDECREF(__pyx_v_lines);
  __Pyx_XDECREF(__pyx_v_line_trunc);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_19read_from_bgl_file(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static char __pyx_doc_7LDModel_7LDModel_18read_from_bgl_file[] = "\n        read the model from a beagle model file (.dag file)\n        ";
static PyObject *__pyx_pw_7LDModel_7LDModel_19read_from_bgl_file(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  PyObject *__pyx_v_file_name = 0;
  PyObject *__pyx_v_anc = 0;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("read_from_bgl_file (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__file_name,&__pyx_n_s__anc,0};
    PyObject* values[2] = {0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__file_name)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__anc)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("read_from_bgl_file", 1, 2, 2, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "read_from_bgl_file") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 2) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
    }
    __pyx_v_file_name = values[0];
    __pyx_v_anc = values[1];
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("read_from_bgl_file", 1, 2, 2, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 360; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.read_from_bgl_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_18read_from_bgl_file(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), __pyx_v_file_name, __pyx_v_anc);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":360
 *         return self._nr_haplos
 * 
 *     def read_from_bgl_file(self, file_name, anc):             # <<<<<<<<<<<<<<
 *         '''
 *         read the model from a beagle model file (.dag file)
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_18read_from_bgl_file(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_file_name, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_model_file = NULL;
  PyObject *__pyx_v_line = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_v_curr_allele = NULL;
  PyObject *__pyx_v_blank_line = NULL;
  PyObject *__pyx_v_layer = NULL;
  PyObject *__pyx_v_nodes = NULL;
  PyObject *__pyx_v_nodes_prev = NULL;
  PyObject *__pyx_v_nodes_curr = NULL;
  int __pyx_v_first_read;
  int __pyx_v_done;
  PyObject *__pyx_v_lines = NULL;
  PyObject *__pyx_v_j = NULL;
  PyObject *__pyx_v_total_parent_count = NULL;
  PyObject *__pyx_v_edges_num = NULL;
  PyObject *__pyx_v_k = NULL;
  double __pyx_v_error_eps;
  PyObject *__pyx_v_edge_idx = NULL;
  PyObject *__pyx_v_sum_back_trans = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  PyObject *__pyx_t_7 = NULL;
  PyObject *__pyx_t_8 = NULL;
  PyObject *__pyx_t_9 = NULL;
  char __pyx_t_10;
  Py_ssize_t __pyx_t_11;
  PyObject *__pyx_t_12 = NULL;
  PyObject *__pyx_t_13 = NULL;
  struct __pyx_opt_args_7LDModel_read_until_blank_line __pyx_t_14;
  PyObject *(*__pyx_t_15)(PyObject *);
  int __pyx_t_16;
  Py_ssize_t __pyx_t_17;
  Py_ssize_t __pyx_t_18;
  Py_ssize_t __pyx_t_19;
  char *__pyx_t_20;
  PyObject *(*__pyx_t_21)(PyObject *);
  PyObject *__pyx_t_22 = NULL;
  PyObject *__pyx_t_23 = NULL;
  double __pyx_t_24;
  PyObject *(*__pyx_t_25)(PyObject *);
  int __pyx_t_26;
  Py_ssize_t __pyx_t_27;
  size_t __pyx_t_28;
  PyObject *__pyx_t_29 = NULL;
  PyObject *__pyx_t_30 = NULL;
  Py_ssize_t __pyx_t_31;
  Py_ssize_t __pyx_t_32;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("read_from_bgl_file", 0);
  __Pyx_TraceCall("read_from_bgl_file", __pyx_f[0], 360);

  /* "LDModel.pyx":365
 *         '''
 * 
 *         if not os.path.exists(file_name):             # <<<<<<<<<<<<<<
 *             print "the file: " + file_name + " does not exist!"
 *             return
 */
  __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__os); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__path); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__exists); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(__pyx_v_file_name);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_file_name);
  __Pyx_GIVEREF(__pyx_v_file_name);
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 365; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_5 = (!__pyx_t_4);
  if (__pyx_t_5) {

    /* "LDModel.pyx":366
 * 
 *         if not os.path.exists(file_name):
 *             print "the file: " + file_name + " does not exist!"             # <<<<<<<<<<<<<<
 *             return
 * 
 */
    __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_kp_s_14), __pyx_v_file_name); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_15)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 366; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

    /* "LDModel.pyx":367
 *         if not os.path.exists(file_name):
 *             print "the file: " + file_name + " does not exist!"
 *             return             # <<<<<<<<<<<<<<
 * 
 *         print "reading from bgl model file: " + file_name
 */
    __Pyx_XDECREF(__pyx_r);
    __pyx_r = Py_None; __Pyx_INCREF(Py_None);
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":369
 *             return
 * 
 *         print "reading from bgl model file: " + file_name             # <<<<<<<<<<<<<<
 * 
 *         # identify allele coding
 */
  __pyx_t_2 = PyNumber_Add(((PyObject *)__pyx_kp_s_31), __pyx_v_file_name); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  if (__Pyx_PrintOne(0, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 369; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":372
 * 
 *         # identify allele coding
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 *             model_file.readline()
 *             model_file.readline()
 */
  /*with:*/ {
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __pyx_t_3 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s____enter__); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L4_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_7, &__pyx_t_8, &__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_9);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __pyx_v_model_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":373
 *         # identify allele coding
 *         with open(file_name) as model_file:
 *             model_file.readline()             # <<<<<<<<<<<<<<
 *             model_file.readline()
 *             line = model_file.readline()
 */
          __pyx_t_1 = PyObject_GetAttr(__pyx_v_model_file, __pyx_n_s__readline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 373; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

          /* "LDModel.pyx":374
 *         with open(file_name) as model_file:
 *             model_file.readline()
 *             model_file.readline()             # <<<<<<<<<<<<<<
 *             line = model_file.readline()
 *             node = line.split("\t")
 */
          __pyx_t_3 = PyObject_GetAttr(__pyx_v_model_file, __pyx_n_s__readline); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 374; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":375
 *             model_file.readline()
 *             model_file.readline()
 *             line = model_file.readline()             # <<<<<<<<<<<<<<
 *             node = line.split("\t")
 *             self._allele_0 = int(node[4])
 */
          __pyx_t_1 = PyObject_GetAttr(__pyx_v_model_file, __pyx_n_s__readline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 375; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_line = __pyx_t_3;
          __pyx_t_3 = 0;

          /* "LDModel.pyx":376
 *             model_file.readline()
 *             line = model_file.readline()
 *             node = line.split("\t")             # <<<<<<<<<<<<<<
 *             self._allele_0 = int(node[4])
 *             while True:
 */
          __pyx_t_3 = PyObject_GetAttr(__pyx_v_line, __pyx_n_s__split); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_33), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __pyx_v_node = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "LDModel.pyx":377
 *             line = model_file.readline()
 *             node = line.split("\t")
 *             self._allele_0 = int(node[4])             # <<<<<<<<<<<<<<
 *             while True:
 *                 line = model_file.readline()
 */
          __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_node, 4, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
          __pyx_t_10 = __Pyx_PyInt_AsChar(__pyx_t_1); if (unlikely((__pyx_t_10 == (char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 377; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_v_self->_allele_0 = __pyx_t_10;

          /* "LDModel.pyx":378
 *             node = line.split("\t")
 *             self._allele_0 = int(node[4])
 *             while True:             # <<<<<<<<<<<<<<
 *                 line = model_file.readline()
 *                 if len(line) > 0:
 */
          while (1) {
            if (!1) break;

            /* "LDModel.pyx":379
 *             self._allele_0 = int(node[4])
 *             while True:
 *                 line = model_file.readline()             # <<<<<<<<<<<<<<
 *                 if len(line) > 0:
 *                     node = line.split("\t")
 */
            __pyx_t_1 = PyObject_GetAttr(__pyx_v_model_file, __pyx_n_s__readline); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 379; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __Pyx_GOTREF(__pyx_t_3);
            __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
            __Pyx_DECREF(__pyx_v_line);
            __pyx_v_line = __pyx_t_3;
            __pyx_t_3 = 0;

            /* "LDModel.pyx":380
 *             while True:
 *                 line = model_file.readline()
 *                 if len(line) > 0:             # <<<<<<<<<<<<<<
 *                     node = line.split("\t")
 *                     if len(node) > 4:
 */
            __pyx_t_11 = PyObject_Length(__pyx_v_line); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 380; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
            __pyx_t_5 = (__pyx_t_11 > 0);
            if (__pyx_t_5) {

              /* "LDModel.pyx":381
 *                 line = model_file.readline()
 *                 if len(line) > 0:
 *                     node = line.split("\t")             # <<<<<<<<<<<<<<
 *                     if len(node) > 4:
 *                         curr_allele = node[4]
 */
              __pyx_t_3 = PyObject_GetAttr(__pyx_v_line, __pyx_n_s__split); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_3);
              __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_34), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
              __Pyx_DECREF(__pyx_v_node);
              __pyx_v_node = __pyx_t_1;
              __pyx_t_1 = 0;

              /* "LDModel.pyx":382
 *                 if len(line) > 0:
 *                     node = line.split("\t")
 *                     if len(node) > 4:             # <<<<<<<<<<<<<<
 *                         curr_allele = node[4]
 *                         if int(curr_allele) != self._allele_0:
 */
              __pyx_t_11 = PyObject_Length(__pyx_v_node); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 382; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
              __pyx_t_5 = (__pyx_t_11 > 4);
              if (__pyx_t_5) {

                /* "LDModel.pyx":383
 *                     node = line.split("\t")
 *                     if len(node) > 4:
 *                         curr_allele = node[4]             # <<<<<<<<<<<<<<
 *                         if int(curr_allele) != self._allele_0:
 *                             self._allele_1 = int(curr_allele)
 */
                __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_node, 4, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 383; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_XDECREF(__pyx_v_curr_allele);
                __pyx_v_curr_allele = __pyx_t_1;
                __pyx_t_1 = 0;

                /* "LDModel.pyx":384
 *                     if len(node) > 4:
 *                         curr_allele = node[4]
 *                         if int(curr_allele) != self._allele_0:             # <<<<<<<<<<<<<<
 *                             self._allele_1 = int(curr_allele)
 *                             break;
 */
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_INCREF(__pyx_v_curr_allele);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_curr_allele);
                __Pyx_GIVEREF(__pyx_v_curr_allele);
                __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyObject_RichCompare(__pyx_t_3, __pyx_t_1, Py_NE); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 384; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                if (__pyx_t_5) {

                  /* "LDModel.pyx":385
 *                         curr_allele = node[4]
 *                         if int(curr_allele) != self._allele_0:
 *                             self._allele_1 = int(curr_allele)             # <<<<<<<<<<<<<<
 *                             break;
 * 
 */
                  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  __Pyx_INCREF(__pyx_v_curr_allele);
                  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_curr_allele);
                  __Pyx_GIVEREF(__pyx_v_curr_allele);
                  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
                  __pyx_t_10 = __Pyx_PyInt_AsChar(__pyx_t_1); if (unlikely((__pyx_t_10 == (char)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 385; __pyx_clineno = __LINE__; goto __pyx_L8_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __pyx_v_self->_allele_1 = __pyx_t_10;

                  /* "LDModel.pyx":386
 *                         if int(curr_allele) != self._allele_0:
 *                             self._allele_1 = int(curr_allele)
 *                             break;             # <<<<<<<<<<<<<<
 * 
 *         #print "allele_0: " + str(self._allele_0) + "\n"
 */
                  goto __pyx_L18_break;
                  goto __pyx_L21;
                }
                __pyx_L21:;
                goto __pyx_L20;
              }
              __pyx_L20:;
              goto __pyx_L19;
            }
            __pyx_L19:;
          }
          __pyx_L18_break:;
        }
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        goto __pyx_L15_try_end;
        __pyx_L8_error:;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;

        /* "LDModel.pyx":372
 * 
 *         # identify allele coding
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 *             model_file.readline()
 *             model_file.readline()
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_from_bgl_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_1, &__pyx_t_2, &__pyx_t_3) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __pyx_t_13 = PyObject_Call(__pyx_t_6, __pyx_t_12, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
          __pyx_t_4 = (!__pyx_t_5);
          if (__pyx_t_4) {
            __Pyx_GIVEREF(__pyx_t_1);
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_ErrRestore(__pyx_t_1, __pyx_t_2, __pyx_t_3);
            __pyx_t_1 = 0; __pyx_t_2 = 0; __pyx_t_3 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L10_except_error;}
            goto __pyx_L24;
          }
          __pyx_L24:;
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          goto __pyx_L9_exception_handled;
        }
        __pyx_L10_except_error:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        goto __pyx_L1_error;
        __pyx_L9_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_ExceptionReset(__pyx_t_7, __pyx_t_8, __pyx_t_9);
        __pyx_L15_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_9 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_35, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_9);
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
        if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L25;
    __pyx_L4_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L25:;
  }

  /* "LDModel.pyx":391
 *         #print "allele_1: " + str(self._allele_1) + "\n"
 * 
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 * 
 *             blank_line = '\n'
 */
  /*with:*/ {
    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_INCREF(__pyx_v_file_name);
    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_v_file_name);
    __Pyx_GIVEREF(__pyx_v_file_name);
    __pyx_t_2 = PyObject_Call(__pyx_builtin_open, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
    __pyx_t_6 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s____exit__); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __pyx_t_3 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s____enter__); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L26_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L26_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    /*try:*/ {
      {
        __Pyx_ExceptionSave(&__pyx_t_9, &__pyx_t_8, &__pyx_t_7);
        __Pyx_XGOTREF(__pyx_t_9);
        __Pyx_XGOTREF(__pyx_t_8);
        __Pyx_XGOTREF(__pyx_t_7);
        /*try:*/ {
          __Pyx_INCREF(__pyx_t_1);
          __Pyx_XDECREF(__pyx_v_model_file);
          __pyx_v_model_file = __pyx_t_1;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":393
 *         with open(file_name) as model_file:
 * 
 *             blank_line = '\n'             # <<<<<<<<<<<<<<
 *             layer = 0
 *             nodes = []
 */
          __Pyx_INCREF(((PyObject *)__pyx_kp_s_1));
          __pyx_v_blank_line = ((PyObject *)__pyx_kp_s_1);

          /* "LDModel.pyx":394
 * 
 *             blank_line = '\n'
 *             layer = 0             # <<<<<<<<<<<<<<
 *             nodes = []
 *             nodes_prev = []
 */
          __Pyx_INCREF(__pyx_int_0);
          __pyx_v_layer = __pyx_int_0;

          /* "LDModel.pyx":395
 *             blank_line = '\n'
 *             layer = 0
 *             nodes = []             # <<<<<<<<<<<<<<
 *             nodes_prev = []
 *             nodes_curr = []
 */
          __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 395; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_v_nodes = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "LDModel.pyx":396
 *             layer = 0
 *             nodes = []
 *             nodes_prev = []             # <<<<<<<<<<<<<<
 *             nodes_curr = []
 *             first_read = True
 */
          __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 396; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_v_nodes_prev = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "LDModel.pyx":397
 *             nodes = []
 *             nodes_prev = []
 *             nodes_curr = []             # <<<<<<<<<<<<<<
 *             first_read = True
 *             done = False
 */
          __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 397; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_v_nodes_curr = __pyx_t_1;
          __pyx_t_1 = 0;

          /* "LDModel.pyx":398
 *             nodes_prev = []
 *             nodes_curr = []
 *             first_read = True             # <<<<<<<<<<<<<<
 *             done = False
 * 
 */
          __pyx_v_first_read = 1;

          /* "LDModel.pyx":399
 *             nodes_curr = []
 *             first_read = True
 *             done = False             # <<<<<<<<<<<<<<
 * 
 *             while True:
 */
          __pyx_v_done = 0;

          /* "LDModel.pyx":401
 *             done = False
 * 
 *             while True:             # <<<<<<<<<<<<<<
 * 
 *                 if done:
 */
          while (1) {
            if (!1) break;

            /* "LDModel.pyx":403
 *             while True:
 * 
 *                 if done:             # <<<<<<<<<<<<<<
 *                     break
 *                 # read next buffer_size lines from the file
 */
            if (__pyx_v_done) {

              /* "LDModel.pyx":404
 * 
 *                 if done:
 *                     break             # <<<<<<<<<<<<<<
 *                 # read next buffer_size lines from the file
 *                 if first_read:
 */
              goto __pyx_L40_break;
              goto __pyx_L41;
            }
            __pyx_L41:;

            /* "LDModel.pyx":406
 *                     break
 *                 # read next buffer_size lines from the file
 *                 if first_read:             # <<<<<<<<<<<<<<
 *                     lines = read_until_blank_line(model_file,2)
 *                     first_read = False
 */
            if (__pyx_v_first_read) {

              /* "LDModel.pyx":407
 *                 # read next buffer_size lines from the file
 *                 if first_read:
 *                     lines = read_until_blank_line(model_file,2)             # <<<<<<<<<<<<<<
 *                     first_read = False
 *                 else:
 */
              __pyx_t_14.__pyx_n = 1;
              __pyx_t_14.first_line = __pyx_int_2;
              __pyx_t_1 = __pyx_f_7LDModel_read_until_blank_line(__pyx_v_model_file, &__pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 407; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_XDECREF(__pyx_v_lines);
              __pyx_v_lines = __pyx_t_1;
              __pyx_t_1 = 0;

              /* "LDModel.pyx":408
 *                 if first_read:
 *                     lines = read_until_blank_line(model_file,2)
 *                     first_read = False             # <<<<<<<<<<<<<<
 *                 else:
 *                     lines = read_until_blank_line(model_file)
 */
              __pyx_v_first_read = 0;
              goto __pyx_L42;
            }
            /*else*/ {

              /* "LDModel.pyx":410
 *                     first_read = False
 *                 else:
 *                     lines = read_until_blank_line(model_file)             # <<<<<<<<<<<<<<
 *                 if lines == [blank_line]:
 *                     break
 */
              __pyx_t_1 = __pyx_f_7LDModel_read_until_blank_line(__pyx_v_model_file, NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 410; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
              __Pyx_GOTREF(__pyx_t_1);
              __Pyx_XDECREF(__pyx_v_lines);
              __pyx_v_lines = __pyx_t_1;
              __pyx_t_1 = 0;
            }
            __pyx_L42:;

            /* "LDModel.pyx":411
 *                 else:
 *                     lines = read_until_blank_line(model_file)
 *                 if lines == [blank_line]:             # <<<<<<<<<<<<<<
 *                     break
 * 
 */
            __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
            __Pyx_GOTREF(__pyx_t_1);
            __Pyx_INCREF(__pyx_v_blank_line);
            PyList_SET_ITEM(__pyx_t_1, 0, __pyx_v_blank_line);
            __Pyx_GIVEREF(__pyx_v_blank_line);
            __pyx_t_2 = PyObject_RichCompare(__pyx_v_lines, ((PyObject *)__pyx_t_1), Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
            __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
            __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 411; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
            if (__pyx_t_4) {

              /* "LDModel.pyx":412
 *                     lines = read_until_blank_line(model_file)
 *                 if lines == [blank_line]:
 *                     break             # <<<<<<<<<<<<<<
 * 
 *                 for line in lines:
 */
              goto __pyx_L40_break;
              goto __pyx_L43;
            }
            __pyx_L43:;

            /* "LDModel.pyx":414
 *                     break
 * 
 *                 for line in lines:             # <<<<<<<<<<<<<<
 *                     if line != blank_line: # split next line
 *                         node = line.split("\t")
 */
            if (PyList_CheckExact(__pyx_v_lines) || PyTuple_CheckExact(__pyx_v_lines)) {
              __pyx_t_2 = __pyx_v_lines; __Pyx_INCREF(__pyx_t_2); __pyx_t_11 = 0;
              __pyx_t_15 = NULL;
            } else {
              __pyx_t_11 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_v_lines); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
              __Pyx_GOTREF(__pyx_t_2);
              __pyx_t_15 = Py_TYPE(__pyx_t_2)->tp_iternext;
            }
            for (;;) {
              if (!__pyx_t_15 && PyList_CheckExact(__pyx_t_2)) {
                if (__pyx_t_11 >= PyList_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_COMPILING_IN_CPYTHON
                __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                #else
                __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                #endif
              } else if (!__pyx_t_15 && PyTuple_CheckExact(__pyx_t_2)) {
                if (__pyx_t_11 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
                #if CYTHON_COMPILING_IN_CPYTHON
                __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_11); __Pyx_INCREF(__pyx_t_1); __pyx_t_11++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                #else
                __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_11); __pyx_t_11++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                #endif
              } else {
                __pyx_t_1 = __pyx_t_15(__pyx_t_2);
                if (unlikely(!__pyx_t_1)) {
                  if (PyErr_Occurred()) {
                    if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                    else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 414; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  }
                  break;
                }
                __Pyx_GOTREF(__pyx_t_1);
              }
              __Pyx_XDECREF(__pyx_v_line);
              __pyx_v_line = __pyx_t_1;
              __pyx_t_1 = 0;

              /* "LDModel.pyx":415
 * 
 *                 for line in lines:
 *                     if line != blank_line: # split next line             # <<<<<<<<<<<<<<
 *                         node = line.split("\t")
 *                         nodes.append(node[:6])
 */
              __pyx_t_1 = PyObject_RichCompare(__pyx_v_line, __pyx_v_blank_line, Py_NE); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
              __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 415; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
              __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
              if (__pyx_t_4) {

                /* "LDModel.pyx":416
 *                 for line in lines:
 *                     if line != blank_line: # split next line
 *                         node = line.split("\t")             # <<<<<<<<<<<<<<
 *                         nodes.append(node[:6])
 *                     else: # an entire level has been read
 */
                __pyx_t_1 = PyObject_GetAttr(__pyx_v_line, __pyx_n_s__split); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_36), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_XDECREF(__pyx_v_node);
                __pyx_v_node = __pyx_t_3;
                __pyx_t_3 = 0;

                /* "LDModel.pyx":417
 *                     if line != blank_line: # split next line
 *                         node = line.split("\t")
 *                         nodes.append(node[:6])             # <<<<<<<<<<<<<<
 *                     else: # an entire level has been read
 *                         nodes_prev = nodes_curr
 */
                __pyx_t_3 = __Pyx_PySequence_GetSlice(__pyx_v_node, 0, 6); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __pyx_t_16 = PyList_Append(__pyx_v_nodes, __pyx_t_3); if (unlikely(__pyx_t_16 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 417; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                goto __pyx_L46;
              }
              /*else*/ {

                /* "LDModel.pyx":419
 *                         nodes.append(node[:6])
 *                     else: # an entire level has been read
 *                         nodes_prev = nodes_curr             # <<<<<<<<<<<<<<
 *                         nodes_curr = nodes
 *                         nodes = []
 */
                __Pyx_INCREF(((PyObject *)__pyx_v_nodes_curr));
                __Pyx_DECREF(((PyObject *)__pyx_v_nodes_prev));
                __pyx_v_nodes_prev = __pyx_v_nodes_curr;

                /* "LDModel.pyx":420
 *                     else: # an entire level has been read
 *                         nodes_prev = nodes_curr
 *                         nodes_curr = nodes             # <<<<<<<<<<<<<<
 *                         nodes = []
 *                         #print "reading layer: " + str(layer) + ", snp id: " + nodes_curr[0][1]
 */
                __Pyx_INCREF(((PyObject *)__pyx_v_nodes));
                __Pyx_DECREF(((PyObject *)__pyx_v_nodes_curr));
                __pyx_v_nodes_curr = __pyx_v_nodes;

                /* "LDModel.pyx":421
 *                         nodes_prev = nodes_curr
 *                         nodes_curr = nodes
 *                         nodes = []             # <<<<<<<<<<<<<<
 *                         #print "reading layer: " + str(layer) + ", snp id: " + nodes_curr[0][1]
 * 
 */
                __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 421; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(((PyObject *)__pyx_v_nodes));
                __pyx_v_nodes = __pyx_t_3;
                __pyx_t_3 = 0;

                /* "LDModel.pyx":425
 * 
 *                         # allocate memory for transition probabilities
 *                         if layer % self._win_size == 0:             # <<<<<<<<<<<<<<
 *                             self._pi[anc][int(layer / self._win_size)] = <double *> malloc(len(nodes_curr) * sizeof(double))
 *                         if layer > 0:
 */
                __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __pyx_t_1 = PyNumber_Remainder(__pyx_v_layer, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                __pyx_t_3 = PyObject_RichCompare(__pyx_t_1, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 425; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                if (__pyx_t_4) {

                  /* "LDModel.pyx":426
 *                         # allocate memory for transition probabilities
 *                         if layer % self._win_size == 0:
 *                             self._pi[anc][int(layer / self._win_size)] = <double *> malloc(len(nodes_curr) * sizeof(double))             # <<<<<<<<<<<<<<
 *                         if layer > 0:
 *                             self._trans[anc][layer-1] = <double **> malloc(len(nodes_prev) * sizeof(double*))
 */
                  __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_3 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_3);
                  __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_v_layer, __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_3);
                  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
                  __Pyx_GIVEREF(__pyx_t_1);
                  __pyx_t_1 = 0;
                  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                  __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 426; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  ((__pyx_v_self->_pi[__pyx_t_18])[__pyx_t_19]) = ((double *)malloc((__pyx_t_17 * (sizeof(double)))));
                  goto __pyx_L47;
                }
                __pyx_L47:;

                /* "LDModel.pyx":427
 *                         if layer % self._win_size == 0:
 *                             self._pi[anc][int(layer / self._win_size)] = <double *> malloc(len(nodes_curr) * sizeof(double))
 *                         if layer > 0:             # <<<<<<<<<<<<<<
 *                             self._trans[anc][layer-1] = <double **> malloc(len(nodes_prev) * sizeof(double*))
 *                             self._trans_idx[anc][layer-1] = <int **> malloc(len(nodes_prev) * sizeof(int*))
 */
                __pyx_t_1 = PyObject_RichCompare(__pyx_v_layer, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 427; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                if (__pyx_t_4) {

                  /* "LDModel.pyx":428
 *                             self._pi[anc][int(layer / self._win_size)] = <double *> malloc(len(nodes_curr) * sizeof(double))
 *                         if layer > 0:
 *                             self._trans[anc][layer-1] = <double **> malloc(len(nodes_prev) * sizeof(double*))             # <<<<<<<<<<<<<<
 *                             self._trans_idx[anc][layer-1] = <int **> malloc(len(nodes_prev) * sizeof(int*))
 *                         self._back_trans[anc][layer] = <double **> malloc(len(nodes_curr) * sizeof(double*))
 */
                  __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_prev)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_1 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 428; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  ((__pyx_v_self->_trans[__pyx_t_19])[__pyx_t_18]) = ((double **)malloc((__pyx_t_17 * (sizeof(double *)))));

                  /* "LDModel.pyx":429
 *                         if layer > 0:
 *                             self._trans[anc][layer-1] = <double **> malloc(len(nodes_prev) * sizeof(double*))
 *                             self._trans_idx[anc][layer-1] = <int **> malloc(len(nodes_prev) * sizeof(int*))             # <<<<<<<<<<<<<<
 *                         self._back_trans[anc][layer] = <double **> malloc(len(nodes_curr) * sizeof(double*))
 *                         self._back_trans_idx[anc][layer] = <int **> malloc(len(nodes_curr) * sizeof(int*))
 */
                  __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_prev)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_1 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 429; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  ((__pyx_v_self->_trans_idx[__pyx_t_18])[__pyx_t_19]) = ((int **)malloc((__pyx_t_17 * (sizeof(int *)))));
                  goto __pyx_L48;
                }
                __pyx_L48:;

                /* "LDModel.pyx":430
 *                             self._trans[anc][layer-1] = <double **> malloc(len(nodes_prev) * sizeof(double*))
 *                             self._trans_idx[anc][layer-1] = <int **> malloc(len(nodes_prev) * sizeof(int*))
 *                         self._back_trans[anc][layer] = <double **> malloc(len(nodes_curr) * sizeof(double*))             # <<<<<<<<<<<<<<
 *                         self._back_trans_idx[anc][layer] = <int **> malloc(len(nodes_curr) * sizeof(int*))
 * 
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 430; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                ((__pyx_v_self->_back_trans[__pyx_t_19])[__pyx_t_18]) = ((double **)malloc((__pyx_t_17 * (sizeof(double *)))));

                /* "LDModel.pyx":431
 *                             self._trans_idx[anc][layer-1] = <int **> malloc(len(nodes_prev) * sizeof(int*))
 *                         self._back_trans[anc][layer] = <double **> malloc(len(nodes_curr) * sizeof(double*))
 *                         self._back_trans_idx[anc][layer] = <int **> malloc(len(nodes_curr) * sizeof(int*))             # <<<<<<<<<<<<<<
 * 
 *                         # set layer state nums and snp ids
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 431; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                ((__pyx_v_self->_back_trans_idx[__pyx_t_18])[__pyx_t_19]) = ((int **)malloc((__pyx_t_17 * (sizeof(int *)))));

                /* "LDModel.pyx":434
 * 
 *                         # set layer state nums and snp ids
 *                         self._layer_state_nums[anc][layer] = len(nodes_curr)             # <<<<<<<<<<<<<<
 *                         self._snp_ids[layer] = nodes_curr[0][1]
 * 
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 434; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                ((__pyx_v_self->_layer_state_nums[__pyx_t_19])[__pyx_t_18]) = __pyx_t_17;

                /* "LDModel.pyx":435
 *                         # set layer state nums and snp ids
 *                         self._layer_state_nums[anc][layer] = len(nodes_curr)
 *                         self._snp_ids[layer] = nodes_curr[0][1]             # <<<<<<<<<<<<<<
 * 
 *                         # allocate memory for the states
 */
                __pyx_t_1 = __Pyx_GetItemInt_List(((PyObject *)__pyx_v_nodes_curr), 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 1, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_20 = PyBytes_AsString(__pyx_t_3); if (unlikely((!__pyx_t_20) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                __pyx_t_17 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_17 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 435; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                (__pyx_v_self->_snp_ids[__pyx_t_17]) = __pyx_t_20;

                /* "LDModel.pyx":438
 * 
 *                         # allocate memory for the states
 *                         self._states[anc][layer] = <state *> malloc(len(nodes_curr) * sizeof(state))             # <<<<<<<<<<<<<<
 * 
 *                         for j in range(len(nodes_curr)):
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 438; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                ((__pyx_v_self->_states[__pyx_t_18])[__pyx_t_19]) = ((state *)malloc((__pyx_t_17 * (sizeof(state)))));

                /* "LDModel.pyx":440
 *                         self._states[anc][layer] = <state *> malloc(len(nodes_curr) * sizeof(state))
 * 
 *                         for j in range(len(nodes_curr)):             # <<<<<<<<<<<<<<
 *                             if layer == 0:
 *                                 total_parent_count = sum([int(x[5]) for x in nodes_curr])
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
                __Pyx_GIVEREF(__pyx_t_3);
                __pyx_t_3 = 0;
                __pyx_t_3 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
                  __pyx_t_1 = __pyx_t_3; __Pyx_INCREF(__pyx_t_1); __pyx_t_17 = 0;
                  __pyx_t_21 = NULL;
                } else {
                  __pyx_t_17 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_21 = Py_TYPE(__pyx_t_1)->tp_iternext;
                }
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                for (;;) {
                  if (!__pyx_t_21 && PyList_CheckExact(__pyx_t_1)) {
                    if (__pyx_t_17 >= PyList_GET_SIZE(__pyx_t_1)) break;
                    #if CYTHON_COMPILING_IN_CPYTHON
                    __pyx_t_3 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_17); __Pyx_INCREF(__pyx_t_3); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #else
                    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #endif
                  } else if (!__pyx_t_21 && PyTuple_CheckExact(__pyx_t_1)) {
                    if (__pyx_t_17 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
                    #if CYTHON_COMPILING_IN_CPYTHON
                    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_17); __Pyx_INCREF(__pyx_t_3); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #else
                    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #endif
                  } else {
                    __pyx_t_3 = __pyx_t_21(__pyx_t_1);
                    if (unlikely(!__pyx_t_3)) {
                      if (PyErr_Occurred()) {
                        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                        else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 440; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      }
                      break;
                    }
                    __Pyx_GOTREF(__pyx_t_3);
                  }
                  __Pyx_XDECREF(__pyx_v_j);
                  __pyx_v_j = __pyx_t_3;
                  __pyx_t_3 = 0;

                  /* "LDModel.pyx":441
 * 
 *                         for j in range(len(nodes_curr)):
 *                             if layer == 0:             # <<<<<<<<<<<<<<
 *                                 total_parent_count = sum([int(x[5]) for x in nodes_curr])
 *                                 self._pi[anc][0][j] = int(nodes_curr[j][5]) / total_parent_count
 */
                  __pyx_t_3 = PyObject_RichCompare(__pyx_v_layer, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 441; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                  if (__pyx_t_4) {

                    /* "LDModel.pyx":442
 *                         for j in range(len(nodes_curr)):
 *                             if layer == 0:
 *                                 total_parent_count = sum([int(x[5]) for x in nodes_curr])             # <<<<<<<<<<<<<<
 *                                 self._pi[anc][0][j] = int(nodes_curr[j][5]) / total_parent_count
 *                                 #print "layer: " + str(layer) + " pi in node " + str(j) + " is: " + str(self._pi[anc][0][j])
 */
                    __pyx_t_3 = PyList_New(0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __pyx_t_12 = ((PyObject *)__pyx_v_nodes_curr); __Pyx_INCREF(__pyx_t_12); __pyx_t_19 = 0;
                    for (;;) {
                      if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_12)) break;
                      #if CYTHON_COMPILING_IN_CPYTHON
                      __pyx_t_22 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_19); __Pyx_INCREF(__pyx_t_22); __pyx_t_19++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #else
                      __pyx_t_22 = PySequence_ITEM(__pyx_t_12, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #endif
                      __Pyx_XDECREF(__pyx_v_x);
                      __pyx_v_x = __pyx_t_22;
                      __pyx_t_22 = 0;
                      __pyx_t_22 = __Pyx_GetItemInt(__pyx_v_x, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_22) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_22);
                      __pyx_t_23 = PyTuple_New(1); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_23);
                      PyTuple_SET_ITEM(__pyx_t_23, 0, __pyx_t_22);
                      __Pyx_GIVEREF(__pyx_t_22);
                      __pyx_t_22 = 0;
                      __pyx_t_22 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_23), NULL); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_22);
                      __Pyx_DECREF(((PyObject *)__pyx_t_23)); __pyx_t_23 = 0;
                      if (unlikely(__Pyx_PyList_Append(__pyx_t_3, (PyObject*)__pyx_t_22))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                    }
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_INCREF(((PyObject *)__pyx_t_3));
                    PyTuple_SET_ITEM(__pyx_t_12, 0, ((PyObject *)__pyx_t_3));
                    __Pyx_GIVEREF(((PyObject *)__pyx_t_3));
                    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                    __pyx_t_3 = PyObject_Call(__pyx_builtin_sum, ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                    __Pyx_XDECREF(__pyx_v_total_parent_count);
                    __pyx_v_total_parent_count = __pyx_t_3;
                    __pyx_t_3 = 0;

                    /* "LDModel.pyx":443
 *                             if layer == 0:
 *                                 total_parent_count = sum([int(x[5]) for x in nodes_curr])
 *                                 self._pi[anc][0][j] = int(nodes_curr[j][5]) / total_parent_count             # <<<<<<<<<<<<<<
 *                                 #print "layer: " + str(layer) + " pi in node " + str(j) + " is: " + str(self._pi[anc][0][j])
 *                                 #if j > 0:
 */
                    __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __pyx_t_12 = __Pyx_GetItemInt(__pyx_t_3, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_12) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_12);
                    __Pyx_GIVEREF(__pyx_t_12);
                    __pyx_t_12 = 0;
                    __pyx_t_12 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                    __pyx_t_3 = __Pyx_PyNumber_Divide(__pyx_t_12, __pyx_v_total_parent_count); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_t_3); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 443; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_pi[__pyx_t_19])[0])[__pyx_t_18]) = __pyx_t_24;
                    goto __pyx_L51;
                  }
                  __pyx_L51:;
                }
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":448
 *                                 #    print "  pi in previous node " + str(j-1) + " is: " + str(self._pi[anc][0][j-1])
 * 
 *                         for j in range(len(nodes_curr)):             # <<<<<<<<<<<<<<
 *                             # find how many edges go into this node from the previous layer
 *                             edges_num = 0
 */
                __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_3);
                PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
                  __pyx_t_3 = __pyx_t_1; __Pyx_INCREF(__pyx_t_3); __pyx_t_17 = 0;
                  __pyx_t_21 = NULL;
                } else {
                  __pyx_t_17 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_3);
                  __pyx_t_21 = Py_TYPE(__pyx_t_3)->tp_iternext;
                }
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                for (;;) {
                  if (!__pyx_t_21 && PyList_CheckExact(__pyx_t_3)) {
                    if (__pyx_t_17 >= PyList_GET_SIZE(__pyx_t_3)) break;
                    #if CYTHON_COMPILING_IN_CPYTHON
                    __pyx_t_1 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_17); __Pyx_INCREF(__pyx_t_1); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #else
                    __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #endif
                  } else if (!__pyx_t_21 && PyTuple_CheckExact(__pyx_t_3)) {
                    if (__pyx_t_17 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                    #if CYTHON_COMPILING_IN_CPYTHON
                    __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_17); __Pyx_INCREF(__pyx_t_1); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #else
                    __pyx_t_1 = PySequence_ITEM(__pyx_t_3, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    #endif
                  } else {
                    __pyx_t_1 = __pyx_t_21(__pyx_t_3);
                    if (unlikely(!__pyx_t_1)) {
                      if (PyErr_Occurred()) {
                        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                        else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 448; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      }
                      break;
                    }
                    __Pyx_GOTREF(__pyx_t_1);
                  }
                  __Pyx_XDECREF(__pyx_v_j);
                  __pyx_v_j = __pyx_t_1;
                  __pyx_t_1 = 0;

                  /* "LDModel.pyx":450
 *                         for j in range(len(nodes_curr)):
 *                             # find how many edges go into this node from the previous layer
 *                             edges_num = 0             # <<<<<<<<<<<<<<
 *                             for k in range(len(nodes_prev)):
 *                                 if nodes_prev[k][3] == nodes_curr[j][2]:
 */
                  __Pyx_INCREF(__pyx_int_0);
                  __Pyx_XDECREF(__pyx_v_edges_num);
                  __pyx_v_edges_num = __pyx_int_0;

                  /* "LDModel.pyx":451
 *                             # find how many edges go into this node from the previous layer
 *                             edges_num = 0
 *                             for k in range(len(nodes_prev)):             # <<<<<<<<<<<<<<
 *                                 if nodes_prev[k][3] == nodes_curr[j][2]:
 *                                     edges_num += 1
 */
                  __pyx_t_18 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_prev)); if (unlikely(__pyx_t_18 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_18); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
                  __Pyx_GIVEREF(__pyx_t_1);
                  __pyx_t_1 = 0;
                  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
                    __pyx_t_12 = __pyx_t_1; __Pyx_INCREF(__pyx_t_12); __pyx_t_18 = 0;
                    __pyx_t_25 = NULL;
                  } else {
                    __pyx_t_18 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_25 = Py_TYPE(__pyx_t_12)->tp_iternext;
                  }
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  for (;;) {
                    if (!__pyx_t_25 && PyList_CheckExact(__pyx_t_12)) {
                      if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_12)) break;
                      #if CYTHON_COMPILING_IN_CPYTHON
                      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_18); __Pyx_INCREF(__pyx_t_1); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #else
                      __pyx_t_1 = PySequence_ITEM(__pyx_t_12, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #endif
                    } else if (!__pyx_t_25 && PyTuple_CheckExact(__pyx_t_12)) {
                      if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
                      #if CYTHON_COMPILING_IN_CPYTHON
                      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_18); __Pyx_INCREF(__pyx_t_1); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #else
                      __pyx_t_1 = PySequence_ITEM(__pyx_t_12, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #endif
                    } else {
                      __pyx_t_1 = __pyx_t_25(__pyx_t_12);
                      if (unlikely(!__pyx_t_1)) {
                        if (PyErr_Occurred()) {
                          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 451; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        }
                        break;
                      }
                      __Pyx_GOTREF(__pyx_t_1);
                    }
                    __Pyx_XDECREF(__pyx_v_k);
                    __pyx_v_k = __pyx_t_1;
                    __pyx_t_1 = 0;

                    /* "LDModel.pyx":452
 *                             edges_num = 0
 *                             for k in range(len(nodes_prev)):
 *                                 if nodes_prev[k][3] == nodes_curr[j][2]:             # <<<<<<<<<<<<<<
 *                                     edges_num += 1
 *                             # create states and set emission probability
 */
                    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_prev), __pyx_v_k); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_1);
                    __pyx_t_22 = __Pyx_GetItemInt(__pyx_t_1, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_22) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_22);
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                    __pyx_t_1 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_1);
                    __pyx_t_23 = __Pyx_GetItemInt(__pyx_t_1, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_23);
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                    __pyx_t_1 = PyObject_RichCompare(__pyx_t_22, __pyx_t_23, Py_EQ); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 452; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                    if (__pyx_t_4) {

                      /* "LDModel.pyx":453
 *                             for k in range(len(nodes_prev)):
 *                                 if nodes_prev[k][3] == nodes_curr[j][2]:
 *                                     edges_num += 1             # <<<<<<<<<<<<<<
 *                             # create states and set emission probability
 *                             error_eps = 1e-5
 */
                      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_edges_num, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 453; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_1);
                      __Pyx_DECREF(__pyx_v_edges_num);
                      __pyx_v_edges_num = __pyx_t_1;
                      __pyx_t_1 = 0;
                      goto __pyx_L58;
                    }
                    __pyx_L58:;
                  }
                  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

                  /* "LDModel.pyx":455
 *                                     edges_num += 1
 *                             # create states and set emission probability
 *                             error_eps = 1e-5             # <<<<<<<<<<<<<<
 *                             if int(nodes_curr[j][4]) == self._allele_0:
 *                                 self._states[anc][layer][j] = create_state(1 - error_eps, error_eps, 0, edges_num)
 */
                  __pyx_v_error_eps = 1e-5;

                  /* "LDModel.pyx":456
 *                             # create states and set emission probability
 *                             error_eps = 1e-5
 *                             if int(nodes_curr[j][4]) == self._allele_0:             # <<<<<<<<<<<<<<
 *                                 self._states[anc][layer][j] = create_state(1 - error_eps, error_eps, 0, edges_num)
 *                                 #self._states[anc][layer][j] = create_state(1, 0, 0, edges_num)
 */
                  __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_12) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_12, 4, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                  __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
                  __Pyx_GIVEREF(__pyx_t_1);
                  __pyx_t_1 = 0;
                  __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                  __pyx_t_12 = PyInt_FromLong(__pyx_v_self->_allele_0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_12);
                  __pyx_t_23 = PyObject_RichCompare(__pyx_t_1, __pyx_t_12, Py_EQ); __Pyx_XGOTREF(__pyx_t_23); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_23); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 456; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                  if (__pyx_t_4) {

                    /* "LDModel.pyx":457
 *                             error_eps = 1e-5
 *                             if int(nodes_curr[j][4]) == self._allele_0:
 *                                 self._states[anc][layer][j] = create_state(1 - error_eps, error_eps, 0, edges_num)             # <<<<<<<<<<<<<<
 *                                 #self._states[anc][layer][j] = create_state(1, 0, 0, edges_num)
 *                             else:
 */
                    __pyx_t_26 = __Pyx_PyInt_AsInt(__pyx_v_edges_num); if (unlikely((__pyx_t_26 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 457; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_states[__pyx_t_18])[__pyx_t_19])[__pyx_t_27]) = create_state((1.0 - __pyx_v_error_eps), __pyx_v_error_eps, 0, __pyx_t_26);
                    goto __pyx_L59;
                  }
                  /*else*/ {

                    /* "LDModel.pyx":460
 *                                 #self._states[anc][layer][j] = create_state(1, 0, 0, edges_num)
 *                             else:
 *                                 self._states[anc][layer][j] = create_state(error_eps, 1 - error_eps, 0, edges_num)             # <<<<<<<<<<<<<<
 *                                 #self._states[anc][layer][j] = create_state(0, 1, 0, edges_num)
 * 
 */
                    __pyx_t_26 = __Pyx_PyInt_AsInt(__pyx_v_edges_num); if (unlikely((__pyx_t_26 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 460; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_states[__pyx_t_27])[__pyx_t_19])[__pyx_t_18]) = create_state(__pyx_v_error_eps, (1.0 - __pyx_v_error_eps), 0, __pyx_t_26);
                  }
                  __pyx_L59:;

                  /* "LDModel.pyx":463
 *                                 #self._states[anc][layer][j] = create_state(0, 1, 0, edges_num)
 * 
 *                             if layer > 0:             # <<<<<<<<<<<<<<
 *                                 # allocate memory for the edges
 *                                 self._back_trans[anc][layer][j] = <double *> malloc(edges_num * sizeof(double))
 */
                  __pyx_t_23 = PyObject_RichCompare(__pyx_v_layer, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_23); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_23); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 463; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                  if (__pyx_t_4) {

                    /* "LDModel.pyx":465
 *                             if layer > 0:
 *                                 # allocate memory for the edges
 *                                 self._back_trans[anc][layer][j] = <double *> malloc(edges_num * sizeof(double))             # <<<<<<<<<<<<<<
 *                                 self._back_trans_idx[anc][layer][j] = <int *> malloc(edges_num * sizeof(int))
 *                                 # set the edges transition probabilities
 */
                    __pyx_t_23 = __Pyx_PyInt_FromSize_t((sizeof(double))); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_23);
                    __pyx_t_12 = PyNumber_Multiply(__pyx_v_edges_num, __pyx_t_23); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                    __pyx_t_28 = __Pyx_PyInt_AsSize_t(__pyx_t_12); if (unlikely((__pyx_t_28 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 465; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_back_trans[__pyx_t_18])[__pyx_t_19])[__pyx_t_27]) = ((double *)malloc(__pyx_t_28));

                    /* "LDModel.pyx":466
 *                                 # allocate memory for the edges
 *                                 self._back_trans[anc][layer][j] = <double *> malloc(edges_num * sizeof(double))
 *                                 self._back_trans_idx[anc][layer][j] = <int *> malloc(edges_num * sizeof(int))             # <<<<<<<<<<<<<<
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0
 */
                    __pyx_t_12 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_23 = PyNumber_Multiply(__pyx_v_edges_num, __pyx_t_12); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_23);
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_28 = __Pyx_PyInt_AsSize_t(__pyx_t_23); if (unlikely((__pyx_t_28 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                    __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 466; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_back_trans_idx[__pyx_t_27])[__pyx_t_19])[__pyx_t_18]) = ((int *)malloc(__pyx_t_28));

                    /* "LDModel.pyx":468
 *                                 self._back_trans_idx[anc][layer][j] = <int *> malloc(edges_num * sizeof(int))
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0             # <<<<<<<<<<<<<<
 *                                 sum_back_trans = 0
 *                                 for k in range(len(nodes_prev)):
 */
                    __Pyx_INCREF(__pyx_int_0);
                    __Pyx_XDECREF(__pyx_v_edge_idx);
                    __pyx_v_edge_idx = __pyx_int_0;

                    /* "LDModel.pyx":469
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0
 *                                 sum_back_trans = 0             # <<<<<<<<<<<<<<
 *                                 for k in range(len(nodes_prev)):
 *                                     if nodes_prev[k][3] == nodes_curr[j][2]:
 */
                    __Pyx_INCREF(__pyx_int_0);
                    __Pyx_XDECREF(__pyx_v_sum_back_trans);
                    __pyx_v_sum_back_trans = __pyx_int_0;

                    /* "LDModel.pyx":470
 *                                 edge_idx = 0
 *                                 sum_back_trans = 0
 *                                 for k in range(len(nodes_prev)):             # <<<<<<<<<<<<<<
 *                                     if nodes_prev[k][3] == nodes_curr[j][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[j][2]])
 */
                    __pyx_t_18 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_prev)); if (unlikely(__pyx_t_18 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_23 = PyInt_FromSsize_t(__pyx_t_18); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_23);
                    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_23);
                    __Pyx_GIVEREF(__pyx_t_23);
                    __pyx_t_23 = 0;
                    __pyx_t_23 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_23);
                    __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                    if (PyList_CheckExact(__pyx_t_23) || PyTuple_CheckExact(__pyx_t_23)) {
                      __pyx_t_12 = __pyx_t_23; __Pyx_INCREF(__pyx_t_12); __pyx_t_18 = 0;
                      __pyx_t_25 = NULL;
                    } else {
                      __pyx_t_18 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_t_23); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      __pyx_t_25 = Py_TYPE(__pyx_t_12)->tp_iternext;
                    }
                    __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                    for (;;) {
                      if (!__pyx_t_25 && PyList_CheckExact(__pyx_t_12)) {
                        if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_12)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_23 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_18); __Pyx_INCREF(__pyx_t_23); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_23 = PySequence_ITEM(__pyx_t_12, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else if (!__pyx_t_25 && PyTuple_CheckExact(__pyx_t_12)) {
                        if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_23 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_18); __Pyx_INCREF(__pyx_t_23); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_23 = PySequence_ITEM(__pyx_t_12, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else {
                        __pyx_t_23 = __pyx_t_25(__pyx_t_12);
                        if (unlikely(!__pyx_t_23)) {
                          if (PyErr_Occurred()) {
                            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 470; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          }
                          break;
                        }
                        __Pyx_GOTREF(__pyx_t_23);
                      }
                      __Pyx_XDECREF(__pyx_v_k);
                      __pyx_v_k = __pyx_t_23;
                      __pyx_t_23 = 0;

                      /* "LDModel.pyx":471
 *                                 sum_back_trans = 0
 *                                 for k in range(len(nodes_prev)):
 *                                     if nodes_prev[k][3] == nodes_curr[j][2]:             # <<<<<<<<<<<<<<
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[j][2]])
 *                                         self._back_trans[anc][layer][j][edge_idx] = int(nodes_curr[j][5]) / total_parent_count
 */
                      __pyx_t_23 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_prev), __pyx_v_k); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_23);
                      __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_23, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_1);
                      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                      __pyx_t_23 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_23);
                      __pyx_t_22 = __Pyx_GetItemInt(__pyx_t_23, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_22) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_22);
                      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                      __pyx_t_23 = PyObject_RichCompare(__pyx_t_1, __pyx_t_22, Py_EQ); __Pyx_XGOTREF(__pyx_t_23); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_23); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 471; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                      if (__pyx_t_4) {

                        /* "LDModel.pyx":472
 *                                 for k in range(len(nodes_prev)):
 *                                     if nodes_prev[k][3] == nodes_curr[j][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[j][2]])             # <<<<<<<<<<<<<<
 *                                         self._back_trans[anc][layer][j][edge_idx] = int(nodes_curr[j][5]) / total_parent_count
 *                                         self._back_trans_idx[anc][layer][j][edge_idx] = k
 */
                        __pyx_t_23 = PyList_New(0); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __pyx_t_22 = ((PyObject *)__pyx_v_nodes_curr); __Pyx_INCREF(__pyx_t_22); __pyx_t_19 = 0;
                        for (;;) {
                          if (__pyx_t_19 >= PyList_GET_SIZE(__pyx_t_22)) break;
                          #if CYTHON_COMPILING_IN_CPYTHON
                          __pyx_t_1 = PyList_GET_ITEM(__pyx_t_22, __pyx_t_19); __Pyx_INCREF(__pyx_t_1); __pyx_t_19++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          #else
                          __pyx_t_1 = PySequence_ITEM(__pyx_t_22, __pyx_t_19); __pyx_t_19++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          #endif
                          __Pyx_XDECREF(__pyx_v_x);
                          __pyx_v_x = __pyx_t_1;
                          __pyx_t_1 = 0;
                          __pyx_t_1 = __Pyx_GetItemInt(__pyx_v_x, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_1);
                          __pyx_t_29 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_29) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_29);
                          __pyx_t_30 = __Pyx_GetItemInt(__pyx_t_29, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_30) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_30);
                          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                          __pyx_t_29 = PyObject_RichCompare(__pyx_t_1, __pyx_t_30, Py_EQ); __Pyx_XGOTREF(__pyx_t_29); if (unlikely(!__pyx_t_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
                          __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_29); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                          if (__pyx_t_4) {
                            __pyx_t_29 = __Pyx_GetItemInt(__pyx_v_x, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_29) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_29);
                            __pyx_t_30 = PyTuple_New(1); if (unlikely(!__pyx_t_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_30);
                            PyTuple_SET_ITEM(__pyx_t_30, 0, __pyx_t_29);
                            __Pyx_GIVEREF(__pyx_t_29);
                            __pyx_t_29 = 0;
                            __pyx_t_29 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_30), NULL); if (unlikely(!__pyx_t_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_29);
                            __Pyx_DECREF(((PyObject *)__pyx_t_30)); __pyx_t_30 = 0;
                            if (unlikely(__Pyx_PyList_Append(__pyx_t_23, (PyObject*)__pyx_t_29))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                            goto __pyx_L66;
                          }
                          __pyx_L66:;
                        }
                        __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                        __pyx_t_22 = PyTuple_New(1); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_22);
                        __Pyx_INCREF(((PyObject *)__pyx_t_23));
                        PyTuple_SET_ITEM(__pyx_t_22, 0, ((PyObject *)__pyx_t_23));
                        __Pyx_GIVEREF(((PyObject *)__pyx_t_23));
                        __Pyx_DECREF(((PyObject *)__pyx_t_23)); __pyx_t_23 = 0;
                        __pyx_t_23 = PyObject_Call(__pyx_builtin_sum, ((PyObject *)__pyx_t_22), NULL); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 472; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __Pyx_DECREF(((PyObject *)__pyx_t_22)); __pyx_t_22 = 0;
                        __Pyx_XDECREF(__pyx_v_total_parent_count);
                        __pyx_v_total_parent_count = __pyx_t_23;
                        __pyx_t_23 = 0;

                        /* "LDModel.pyx":473
 *                                     if nodes_prev[k][3] == nodes_curr[j][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[j][2]])
 *                                         self._back_trans[anc][layer][j][edge_idx] = int(nodes_curr[j][5]) / total_parent_count             # <<<<<<<<<<<<<<
 *                                         self._back_trans_idx[anc][layer][j][edge_idx] = k
 *                                         sum_back_trans += self._back_trans[anc][layer][j][edge_idx]
 */
                        __pyx_t_23 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_j); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __pyx_t_22 = __Pyx_GetItemInt(__pyx_t_23, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_22) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_22);
                        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                        __pyx_t_23 = PyTuple_New(1); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        PyTuple_SET_ITEM(__pyx_t_23, 0, __pyx_t_22);
                        __Pyx_GIVEREF(__pyx_t_22);
                        __pyx_t_22 = 0;
                        __pyx_t_22 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_23), NULL); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_22);
                        __Pyx_DECREF(((PyObject *)__pyx_t_23)); __pyx_t_23 = 0;
                        __pyx_t_23 = __Pyx_PyNumber_Divide(__pyx_t_22, __pyx_v_total_parent_count); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                        __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_t_23); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                        __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_v_edge_idx); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 473; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        ((((__pyx_v_self->_back_trans[__pyx_t_19])[__pyx_t_27])[__pyx_t_31])[__pyx_t_32]) = __pyx_t_24;

                        /* "LDModel.pyx":474
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[j][2]])
 *                                         self._back_trans[anc][layer][j][edge_idx] = int(nodes_curr[j][5]) / total_parent_count
 *                                         self._back_trans_idx[anc][layer][j][edge_idx] = k             # <<<<<<<<<<<<<<
 *                                         sum_back_trans += self._back_trans[anc][layer][j][edge_idx]
 *                                         edge_idx += 1
 */
                        __pyx_t_26 = __Pyx_PyInt_AsInt(__pyx_v_k); if (unlikely((__pyx_t_26 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_edge_idx); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 474; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        ((((__pyx_v_self->_back_trans_idx[__pyx_t_32])[__pyx_t_31])[__pyx_t_27])[__pyx_t_19]) = __pyx_t_26;

                        /* "LDModel.pyx":475
 *                                         self._back_trans[anc][layer][j][edge_idx] = int(nodes_curr[j][5]) / total_parent_count
 *                                         self._back_trans_idx[anc][layer][j][edge_idx] = k
 *                                         sum_back_trans += self._back_trans[anc][layer][j][edge_idx]             # <<<<<<<<<<<<<<
 *                                         edge_idx += 1
 * 
 */
                        __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_layer); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_v_edge_idx); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_23 = PyFloat_FromDouble(((((__pyx_v_self->_back_trans[__pyx_t_19])[__pyx_t_27])[__pyx_t_31])[__pyx_t_32])); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __pyx_t_22 = PyNumber_InPlaceAdd(__pyx_v_sum_back_trans, __pyx_t_23); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 475; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_22);
                        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                        __Pyx_DECREF(__pyx_v_sum_back_trans);
                        __pyx_v_sum_back_trans = __pyx_t_22;
                        __pyx_t_22 = 0;

                        /* "LDModel.pyx":476
 *                                         self._back_trans_idx[anc][layer][j][edge_idx] = k
 *                                         sum_back_trans += self._back_trans[anc][layer][j][edge_idx]
 *                                         edge_idx += 1             # <<<<<<<<<<<<<<
 * 
 *                                 # set initial probabilities for every window
 */
                        __pyx_t_22 = PyNumber_InPlaceAdd(__pyx_v_edge_idx, __pyx_int_1); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 476; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_22);
                        __Pyx_DECREF(__pyx_v_edge_idx);
                        __pyx_v_edge_idx = __pyx_t_22;
                        __pyx_t_22 = 0;
                        goto __pyx_L63;
                      }
                      __pyx_L63:;
                    }
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

                    /* "LDModel.pyx":479
 * 
 *                                 # set initial probabilities for every window
 *                                 if layer % self._win_size == 0:             # <<<<<<<<<<<<<<
 *                                     self._pi[anc][int(layer / self._win_size)][j] = sum_back_trans
 * 
 */
                    __pyx_t_12 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_22 = PyNumber_Remainder(__pyx_v_layer, __pyx_t_12); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_22);
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_12 = PyObject_RichCompare(__pyx_t_22, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_12); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                    __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 479; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    if (__pyx_t_4) {

                      /* "LDModel.pyx":480
 *                                 # set initial probabilities for every window
 *                                 if layer % self._win_size == 0:
 *                                     self._pi[anc][int(layer / self._win_size)][j] = sum_back_trans             # <<<<<<<<<<<<<<
 * 
 *                         if layer > 0:
 */
                      __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_v_sum_back_trans); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __pyx_t_12 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      __pyx_t_22 = __Pyx_PyNumber_Divide(__pyx_v_layer, __pyx_t_12); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_22);
                      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                      __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_22);
                      __Pyx_GIVEREF(__pyx_t_22);
                      __pyx_t_22 = 0;
                      __pyx_t_22 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_22);
                      __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                      __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_t_22); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                      __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 480; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      (((__pyx_v_self->_pi[__pyx_t_18])[__pyx_t_32])[__pyx_t_31]) = __pyx_t_24;
                      goto __pyx_L67;
                    }
                    __pyx_L67:;
                    goto __pyx_L60;
                  }
                  __pyx_L60:;
                }
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

                /* "LDModel.pyx":482
 *                                     self._pi[anc][int(layer / self._win_size)][j] = sum_back_trans
 * 
 *                         if layer > 0:             # <<<<<<<<<<<<<<
 *                             for j in range(len(nodes_prev)):
 *                                 # find how many edges go into this node from the previous layer
 */
                __pyx_t_3 = PyObject_RichCompare(__pyx_v_layer, __pyx_int_0, Py_GT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 482; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                if (__pyx_t_4) {

                  /* "LDModel.pyx":483
 * 
 *                         if layer > 0:
 *                             for j in range(len(nodes_prev)):             # <<<<<<<<<<<<<<
 *                                 # find how many edges go into this node from the previous layer
 *                                 edges_num = 0
 */
                  __pyx_t_17 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_prev)); if (unlikely(__pyx_t_17 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_17); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_3);
                  __pyx_t_22 = PyTuple_New(1); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_22);
                  PyTuple_SET_ITEM(__pyx_t_22, 0, __pyx_t_3);
                  __Pyx_GIVEREF(__pyx_t_3);
                  __pyx_t_3 = 0;
                  __pyx_t_3 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_22), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                  __Pyx_GOTREF(__pyx_t_3);
                  __Pyx_DECREF(((PyObject *)__pyx_t_22)); __pyx_t_22 = 0;
                  if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
                    __pyx_t_22 = __pyx_t_3; __Pyx_INCREF(__pyx_t_22); __pyx_t_17 = 0;
                    __pyx_t_21 = NULL;
                  } else {
                    __pyx_t_17 = -1; __pyx_t_22 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_22);
                    __pyx_t_21 = Py_TYPE(__pyx_t_22)->tp_iternext;
                  }
                  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                  for (;;) {
                    if (!__pyx_t_21 && PyList_CheckExact(__pyx_t_22)) {
                      if (__pyx_t_17 >= PyList_GET_SIZE(__pyx_t_22)) break;
                      #if CYTHON_COMPILING_IN_CPYTHON
                      __pyx_t_3 = PyList_GET_ITEM(__pyx_t_22, __pyx_t_17); __Pyx_INCREF(__pyx_t_3); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #else
                      __pyx_t_3 = PySequence_ITEM(__pyx_t_22, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #endif
                    } else if (!__pyx_t_21 && PyTuple_CheckExact(__pyx_t_22)) {
                      if (__pyx_t_17 >= PyTuple_GET_SIZE(__pyx_t_22)) break;
                      #if CYTHON_COMPILING_IN_CPYTHON
                      __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_22, __pyx_t_17); __Pyx_INCREF(__pyx_t_3); __pyx_t_17++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #else
                      __pyx_t_3 = PySequence_ITEM(__pyx_t_22, __pyx_t_17); __pyx_t_17++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      #endif
                    } else {
                      __pyx_t_3 = __pyx_t_21(__pyx_t_22);
                      if (unlikely(!__pyx_t_3)) {
                        if (PyErr_Occurred()) {
                          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 483; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        }
                        break;
                      }
                      __Pyx_GOTREF(__pyx_t_3);
                    }
                    __Pyx_XDECREF(__pyx_v_j);
                    __pyx_v_j = __pyx_t_3;
                    __pyx_t_3 = 0;

                    /* "LDModel.pyx":485
 *                             for j in range(len(nodes_prev)):
 *                                 # find how many edges go into this node from the previous layer
 *                                 edges_num = 0             # <<<<<<<<<<<<<<
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 */
                    __Pyx_INCREF(__pyx_int_0);
                    __Pyx_XDECREF(__pyx_v_edges_num);
                    __pyx_v_edges_num = __pyx_int_0;

                    /* "LDModel.pyx":486
 *                                 # find how many edges go into this node from the previous layer
 *                                 edges_num = 0
 *                                 for k in range(len(nodes_curr)):             # <<<<<<<<<<<<<<
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 *                                         edges_num += 1
 */
                    __pyx_t_31 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_31 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_3 = PyInt_FromSsize_t(__pyx_t_31); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_3);
                    __Pyx_GIVEREF(__pyx_t_3);
                    __pyx_t_3 = 0;
                    __pyx_t_3 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                    if (PyList_CheckExact(__pyx_t_3) || PyTuple_CheckExact(__pyx_t_3)) {
                      __pyx_t_12 = __pyx_t_3; __Pyx_INCREF(__pyx_t_12); __pyx_t_31 = 0;
                      __pyx_t_25 = NULL;
                    } else {
                      __pyx_t_31 = -1; __pyx_t_12 = PyObject_GetIter(__pyx_t_3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      __pyx_t_25 = Py_TYPE(__pyx_t_12)->tp_iternext;
                    }
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    for (;;) {
                      if (!__pyx_t_25 && PyList_CheckExact(__pyx_t_12)) {
                        if (__pyx_t_31 >= PyList_GET_SIZE(__pyx_t_12)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_3 = PyList_GET_ITEM(__pyx_t_12, __pyx_t_31); __Pyx_INCREF(__pyx_t_3); __pyx_t_31++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_3 = PySequence_ITEM(__pyx_t_12, __pyx_t_31); __pyx_t_31++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else if (!__pyx_t_25 && PyTuple_CheckExact(__pyx_t_12)) {
                        if (__pyx_t_31 >= PyTuple_GET_SIZE(__pyx_t_12)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_12, __pyx_t_31); __Pyx_INCREF(__pyx_t_3); __pyx_t_31++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_3 = PySequence_ITEM(__pyx_t_12, __pyx_t_31); __pyx_t_31++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else {
                        __pyx_t_3 = __pyx_t_25(__pyx_t_12);
                        if (unlikely(!__pyx_t_3)) {
                          if (PyErr_Occurred()) {
                            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 486; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          }
                          break;
                        }
                        __Pyx_GOTREF(__pyx_t_3);
                      }
                      __Pyx_XDECREF(__pyx_v_k);
                      __pyx_v_k = __pyx_t_3;
                      __pyx_t_3 = 0;

                      /* "LDModel.pyx":487
 *                                 edges_num = 0
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:             # <<<<<<<<<<<<<<
 *                                         edges_num += 1
 * 
 */
                      __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_prev), __pyx_v_j); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_23 = __Pyx_GetItemInt(__pyx_t_3, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_23);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_k); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_29 = __Pyx_GetItemInt(__pyx_t_3, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_29) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_29);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_RichCompare(__pyx_t_23, __pyx_t_29, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                      __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 487; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      if (__pyx_t_4) {

                        /* "LDModel.pyx":488
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 *                                         edges_num += 1             # <<<<<<<<<<<<<<
 * 
 *                                 # set states
 */
                        __pyx_t_3 = PyNumber_InPlaceAdd(__pyx_v_edges_num, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 488; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_3);
                        __Pyx_DECREF(__pyx_v_edges_num);
                        __pyx_v_edges_num = __pyx_t_3;
                        __pyx_t_3 = 0;
                        goto __pyx_L73;
                      }
                      __pyx_L73:;
                    }
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

                    /* "LDModel.pyx":491
 * 
 *                                 # set states
 *                                 self._states[anc][layer-1][j].out_trans_num = edges_num             # <<<<<<<<<<<<<<
 *                                 # allocate memory for the edges
 *                                 self._trans[anc][layer-1][j] = <double *> malloc(edges_num * sizeof(double))
 */
                    __pyx_t_26 = __Pyx_PyInt_AsInt(__pyx_v_edges_num); if (unlikely((__pyx_t_26 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_12 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_t_12); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 491; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_states[__pyx_t_31])[__pyx_t_32])[__pyx_t_18]).out_trans_num = __pyx_t_26;

                    /* "LDModel.pyx":493
 *                                 self._states[anc][layer-1][j].out_trans_num = edges_num
 *                                 # allocate memory for the edges
 *                                 self._trans[anc][layer-1][j] = <double *> malloc(edges_num * sizeof(double))             # <<<<<<<<<<<<<<
 *                                 self._trans_idx[anc][layer-1][j] = <int *> malloc(edges_num * sizeof(int))
 *                                 # set the edges transition probabilities
 */
                    __pyx_t_12 = __Pyx_PyInt_FromSize_t((sizeof(double))); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_3 = PyNumber_Multiply(__pyx_v_edges_num, __pyx_t_12); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_28 = __Pyx_PyInt_AsSize_t(__pyx_t_3); if (unlikely((__pyx_t_28 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_3 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_t_3); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 493; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_trans[__pyx_t_18])[__pyx_t_32])[__pyx_t_31]) = ((double *)malloc(__pyx_t_28));

                    /* "LDModel.pyx":494
 *                                 # allocate memory for the edges
 *                                 self._trans[anc][layer-1][j] = <double *> malloc(edges_num * sizeof(double))
 *                                 self._trans_idx[anc][layer-1][j] = <int *> malloc(edges_num * sizeof(int))             # <<<<<<<<<<<<<<
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0
 */
                    __pyx_t_3 = __Pyx_PyInt_FromSize_t((sizeof(int))); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    __pyx_t_12 = PyNumber_Multiply(__pyx_v_edges_num, __pyx_t_3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                    __pyx_t_28 = __Pyx_PyInt_AsSize_t(__pyx_t_12); if (unlikely((__pyx_t_28 == (size_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_12 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_t_12); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    __pyx_t_18 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_18 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 494; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    (((__pyx_v_self->_trans_idx[__pyx_t_31])[__pyx_t_32])[__pyx_t_18]) = ((int *)malloc(__pyx_t_28));

                    /* "LDModel.pyx":496
 *                                 self._trans_idx[anc][layer-1][j] = <int *> malloc(edges_num * sizeof(int))
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0             # <<<<<<<<<<<<<<
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 */
                    __Pyx_INCREF(__pyx_int_0);
                    __Pyx_XDECREF(__pyx_v_edge_idx);
                    __pyx_v_edge_idx = __pyx_int_0;

                    /* "LDModel.pyx":497
 *                                 # set the edges transition probabilities
 *                                 edge_idx = 0
 *                                 for k in range(len(nodes_curr)):             # <<<<<<<<<<<<<<
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[k][2]])
 */
                    __pyx_t_18 = PyList_GET_SIZE(((PyObject *)__pyx_v_nodes_curr)); if (unlikely(__pyx_t_18 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __pyx_t_12 = PyInt_FromSsize_t(__pyx_t_18); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_3);
                    PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_12);
                    __Pyx_GIVEREF(__pyx_t_12);
                    __pyx_t_12 = 0;
                    __pyx_t_12 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                    __Pyx_GOTREF(__pyx_t_12);
                    __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                    if (PyList_CheckExact(__pyx_t_12) || PyTuple_CheckExact(__pyx_t_12)) {
                      __pyx_t_3 = __pyx_t_12; __Pyx_INCREF(__pyx_t_3); __pyx_t_18 = 0;
                      __pyx_t_25 = NULL;
                    } else {
                      __pyx_t_18 = -1; __pyx_t_3 = PyObject_GetIter(__pyx_t_12); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_25 = Py_TYPE(__pyx_t_3)->tp_iternext;
                    }
                    __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                    for (;;) {
                      if (!__pyx_t_25 && PyList_CheckExact(__pyx_t_3)) {
                        if (__pyx_t_18 >= PyList_GET_SIZE(__pyx_t_3)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_12 = PyList_GET_ITEM(__pyx_t_3, __pyx_t_18); __Pyx_INCREF(__pyx_t_12); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_12 = PySequence_ITEM(__pyx_t_3, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else if (!__pyx_t_25 && PyTuple_CheckExact(__pyx_t_3)) {
                        if (__pyx_t_18 >= PyTuple_GET_SIZE(__pyx_t_3)) break;
                        #if CYTHON_COMPILING_IN_CPYTHON
                        __pyx_t_12 = PyTuple_GET_ITEM(__pyx_t_3, __pyx_t_18); __Pyx_INCREF(__pyx_t_12); __pyx_t_18++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #else
                        __pyx_t_12 = PySequence_ITEM(__pyx_t_3, __pyx_t_18); __pyx_t_18++; if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        #endif
                      } else {
                        __pyx_t_12 = __pyx_t_25(__pyx_t_3);
                        if (unlikely(!__pyx_t_12)) {
                          if (PyErr_Occurred()) {
                            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
                            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 497; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          }
                          break;
                        }
                        __Pyx_GOTREF(__pyx_t_12);
                      }
                      __Pyx_XDECREF(__pyx_v_k);
                      __pyx_v_k = __pyx_t_12;
                      __pyx_t_12 = 0;

                      /* "LDModel.pyx":498
 *                                 edge_idx = 0
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:             # <<<<<<<<<<<<<<
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[k][2]])
 *                                         self._trans[anc][layer-1][j][edge_idx] = int(nodes_curr[k][5]) / total_parent_count
 */
                      __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_prev), __pyx_v_j); if (!__pyx_t_12) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      __pyx_t_29 = __Pyx_GetItemInt(__pyx_t_12, 3, sizeof(long), PyInt_FromLong); if (!__pyx_t_29) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_29);
                      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                      __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_k); if (!__pyx_t_12) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_12);
                      __pyx_t_23 = __Pyx_GetItemInt(__pyx_t_12, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_GOTREF(__pyx_t_23);
                      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                      __pyx_t_12 = PyObject_RichCompare(__pyx_t_29, __pyx_t_23, Py_EQ); __Pyx_XGOTREF(__pyx_t_12); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                      __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                      __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_12); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 498; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                      __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                      if (__pyx_t_4) {

                        /* "LDModel.pyx":499
 *                                 for k in range(len(nodes_curr)):
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[k][2]])             # <<<<<<<<<<<<<<
 *                                         self._trans[anc][layer-1][j][edge_idx] = int(nodes_curr[k][5]) / total_parent_count
 *                                         self._trans_idx[anc][layer-1][j][edge_idx] = k
 */
                        __pyx_t_12 = PyList_New(0); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __pyx_t_23 = ((PyObject *)__pyx_v_nodes_curr); __Pyx_INCREF(__pyx_t_23); __pyx_t_32 = 0;
                        for (;;) {
                          if (__pyx_t_32 >= PyList_GET_SIZE(__pyx_t_23)) break;
                          #if CYTHON_COMPILING_IN_CPYTHON
                          __pyx_t_29 = PyList_GET_ITEM(__pyx_t_23, __pyx_t_32); __Pyx_INCREF(__pyx_t_29); __pyx_t_32++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          #else
                          __pyx_t_29 = PySequence_ITEM(__pyx_t_23, __pyx_t_32); __pyx_t_32++; if (unlikely(!__pyx_t_29)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          #endif
                          __Pyx_XDECREF(__pyx_v_x);
                          __pyx_v_x = __pyx_t_29;
                          __pyx_t_29 = 0;
                          __pyx_t_29 = __Pyx_GetItemInt(__pyx_v_x, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_29) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_29);
                          __pyx_t_30 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_k); if (!__pyx_t_30) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_30);
                          __pyx_t_1 = __Pyx_GetItemInt(__pyx_t_30, 2, sizeof(long), PyInt_FromLong); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_GOTREF(__pyx_t_1);
                          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
                          __pyx_t_30 = PyObject_RichCompare(__pyx_t_29, __pyx_t_1, Py_EQ); __Pyx_XGOTREF(__pyx_t_30); if (unlikely(!__pyx_t_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_DECREF(__pyx_t_29); __pyx_t_29 = 0;
                          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                          __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_30); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                          __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
                          if (__pyx_t_4) {
                            __pyx_t_30 = __Pyx_GetItemInt(__pyx_v_x, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_30) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_30);
                            __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_1);
                            PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_30);
                            __Pyx_GIVEREF(__pyx_t_30);
                            __pyx_t_30 = 0;
                            __pyx_t_30 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_GOTREF(__pyx_t_30);
                            __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                            if (unlikely(__Pyx_PyList_Append(__pyx_t_12, (PyObject*)__pyx_t_30))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                            __Pyx_DECREF(__pyx_t_30); __pyx_t_30 = 0;
                            goto __pyx_L79;
                          }
                          __pyx_L79:;
                        }
                        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                        __pyx_t_23 = PyTuple_New(1); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __Pyx_INCREF(((PyObject *)__pyx_t_12));
                        PyTuple_SET_ITEM(__pyx_t_23, 0, ((PyObject *)__pyx_t_12));
                        __Pyx_GIVEREF(((PyObject *)__pyx_t_12));
                        __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                        __pyx_t_12 = PyObject_Call(__pyx_builtin_sum, ((PyObject *)__pyx_t_23), NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 499; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __Pyx_DECREF(((PyObject *)__pyx_t_23)); __pyx_t_23 = 0;
                        __Pyx_XDECREF(__pyx_v_total_parent_count);
                        __pyx_v_total_parent_count = __pyx_t_12;
                        __pyx_t_12 = 0;

                        /* "LDModel.pyx":500
 *                                     if nodes_prev[j][3] == nodes_curr[k][2]:
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[k][2]])
 *                                         self._trans[anc][layer-1][j][edge_idx] = int(nodes_curr[k][5]) / total_parent_count             # <<<<<<<<<<<<<<
 *                                         self._trans_idx[anc][layer-1][j][edge_idx] = k
 *                                         edge_idx += 1
 */
                        __pyx_t_12 = PyObject_GetItem(((PyObject *)__pyx_v_nodes_curr), __pyx_v_k); if (!__pyx_t_12) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __pyx_t_23 = __Pyx_GetItemInt(__pyx_t_12, 5, sizeof(long), PyInt_FromLong); if (!__pyx_t_23) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                        __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_23);
                        __Pyx_GIVEREF(__pyx_t_23);
                        __pyx_t_23 = 0;
                        __pyx_t_23 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_23);
                        __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
                        __pyx_t_12 = __Pyx_PyNumber_Divide(__pyx_t_23, __pyx_v_total_parent_count); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __Pyx_DECREF(__pyx_t_23); __pyx_t_23 = 0;
                        __pyx_t_24 = __pyx_PyFloat_AsDouble(__pyx_t_12); if (unlikely((__pyx_t_24 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                        __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_12 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_t_12); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                        __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_edge_idx); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 500; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        ((((__pyx_v_self->_trans[__pyx_t_32])[__pyx_t_31])[__pyx_t_27])[__pyx_t_19]) = __pyx_t_24;

                        /* "LDModel.pyx":501
 *                                         total_parent_count = sum([int(x[5]) for x in nodes_curr if x[2] == nodes_curr[k][2]])
 *                                         self._trans[anc][layer-1][j][edge_idx] = int(nodes_curr[k][5]) / total_parent_count
 *                                         self._trans_idx[anc][layer-1][j][edge_idx] = k             # <<<<<<<<<<<<<<
 *                                         edge_idx += 1
 * 
 */
                        __pyx_t_26 = __Pyx_PyInt_AsInt(__pyx_v_k); if (unlikely((__pyx_t_26 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_19 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_19 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_12 = PyNumber_Subtract(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __pyx_t_27 = __Pyx_PyIndex_AsSsize_t(__pyx_t_12); if (unlikely((__pyx_t_27 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
                        __pyx_t_31 = __Pyx_PyIndex_AsSsize_t(__pyx_v_j); if (unlikely((__pyx_t_31 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __pyx_t_32 = __Pyx_PyIndex_AsSsize_t(__pyx_v_edge_idx); if (unlikely((__pyx_t_32 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 501; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        ((((__pyx_v_self->_trans_idx[__pyx_t_19])[__pyx_t_27])[__pyx_t_31])[__pyx_t_32]) = __pyx_t_26;

                        /* "LDModel.pyx":502
 *                                         self._trans[anc][layer-1][j][edge_idx] = int(nodes_curr[k][5]) / total_parent_count
 *                                         self._trans_idx[anc][layer-1][j][edge_idx] = k
 *                                         edge_idx += 1             # <<<<<<<<<<<<<<
 * 
 *                         layer += 1
 */
                        __pyx_t_12 = PyNumber_InPlaceAdd(__pyx_v_edge_idx, __pyx_int_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 502; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                        __Pyx_GOTREF(__pyx_t_12);
                        __Pyx_DECREF(__pyx_v_edge_idx);
                        __pyx_v_edge_idx = __pyx_t_12;
                        __pyx_t_12 = 0;
                        goto __pyx_L76;
                      }
                      __pyx_L76:;
                    }
                    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                  }
                  __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                  goto __pyx_L68;
                }
                __pyx_L68:;

                /* "LDModel.pyx":504
 *                                         edge_idx += 1
 * 
 *                         layer += 1             # <<<<<<<<<<<<<<
 *                         if layer >= self._snp_num:
 *                             done = True;
 */
                __pyx_t_22 = PyNumber_InPlaceAdd(__pyx_v_layer, __pyx_int_1); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 504; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_22);
                __Pyx_DECREF(__pyx_v_layer);
                __pyx_v_layer = __pyx_t_22;
                __pyx_t_22 = 0;

                /* "LDModel.pyx":505
 * 
 *                         layer += 1
 *                         if layer >= self._snp_num:             # <<<<<<<<<<<<<<
 *                             done = True;
 *                             break
 */
                __pyx_t_22 = PyInt_FromLong(__pyx_v_self->_snp_num); if (unlikely(!__pyx_t_22)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_GOTREF(__pyx_t_22);
                __pyx_t_3 = PyObject_RichCompare(__pyx_v_layer, __pyx_t_22, Py_GE); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
                __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 505; __pyx_clineno = __LINE__; goto __pyx_L30_error;}
                __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                if (__pyx_t_4) {

                  /* "LDModel.pyx":506
 *                         layer += 1
 *                         if layer >= self._snp_num:
 *                             done = True;             # <<<<<<<<<<<<<<
 *                             break
 *         print "Finished reading beagle file."
 */
                  __pyx_v_done = 1;

                  /* "LDModel.pyx":507
 *                         if layer >= self._snp_num:
 *                             done = True;
 *                             break             # <<<<<<<<<<<<<<
 *         print "Finished reading beagle file."
 *                 #p = [self._pi[anc][i] for i in xrange(self._layer_state_nums[anc][0])]
 */
                  goto __pyx_L45_break;
                  goto __pyx_L80;
                }
                __pyx_L80:;
              }
              __pyx_L46:;
            }
            __pyx_L45_break:;
            __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          }
          __pyx_L40_break:;
        }
        __Pyx_XDECREF(__pyx_t_9); __pyx_t_9 = 0;
        __Pyx_XDECREF(__pyx_t_8); __pyx_t_8 = 0;
        __Pyx_XDECREF(__pyx_t_7); __pyx_t_7 = 0;
        goto __pyx_L37_try_end;
        __pyx_L30_error:;
        __Pyx_XDECREF(__pyx_t_29); __pyx_t_29 = 0;
        __Pyx_XDECREF(__pyx_t_1); __pyx_t_1 = 0;
        __Pyx_XDECREF(__pyx_t_30); __pyx_t_30 = 0;
        __Pyx_XDECREF(__pyx_t_23); __pyx_t_23 = 0;
        __Pyx_XDECREF(__pyx_t_12); __pyx_t_12 = 0;
        __Pyx_XDECREF(__pyx_t_22); __pyx_t_22 = 0;
        __Pyx_XDECREF(__pyx_t_3); __pyx_t_3 = 0;
        __Pyx_XDECREF(__pyx_t_2); __pyx_t_2 = 0;

        /* "LDModel.pyx":391
 *         #print "allele_1: " + str(self._allele_1) + "\n"
 * 
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 * 
 *             blank_line = '\n'
 */
        /*except:*/ {
          __Pyx_AddTraceback("LDModel.LDModel.read_from_bgl_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
          if (__Pyx_GetException(&__pyx_t_2, &__pyx_t_3, &__pyx_t_22) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L32_except_error;}
          __Pyx_GOTREF(__pyx_t_2);
          __Pyx_GOTREF(__pyx_t_3);
          __Pyx_GOTREF(__pyx_t_22);
          __pyx_t_12 = PyTuple_New(3); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L32_except_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_INCREF(__pyx_t_2);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_2);
          __Pyx_GIVEREF(__pyx_t_2);
          __Pyx_INCREF(__pyx_t_3);
          PyTuple_SET_ITEM(__pyx_t_12, 1, __pyx_t_3);
          __Pyx_GIVEREF(__pyx_t_3);
          __Pyx_INCREF(__pyx_t_22);
          PyTuple_SET_ITEM(__pyx_t_12, 2, __pyx_t_22);
          __Pyx_GIVEREF(__pyx_t_22);
          __pyx_t_13 = PyObject_Call(__pyx_t_6, __pyx_t_12, NULL);
          __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
          if (unlikely(!__pyx_t_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L32_except_error;}
          __Pyx_GOTREF(__pyx_t_13);
          __pyx_t_4 = __Pyx_PyObject_IsTrue(__pyx_t_13);
          __Pyx_DECREF(__pyx_t_13); __pyx_t_13 = 0;
          if (unlikely(__pyx_t_4 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L32_except_error;}
          __pyx_t_5 = (!__pyx_t_4);
          if (__pyx_t_5) {
            __Pyx_GIVEREF(__pyx_t_2);
            __Pyx_GIVEREF(__pyx_t_3);
            __Pyx_GIVEREF(__pyx_t_22);
            __Pyx_ErrRestore(__pyx_t_2, __pyx_t_3, __pyx_t_22);
            __pyx_t_2 = 0; __pyx_t_3 = 0; __pyx_t_22 = 0; 
            {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L32_except_error;}
            goto __pyx_L83;
          }
          __pyx_L83:;
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
          __Pyx_DECREF(__pyx_t_22); __pyx_t_22 = 0;
          goto __pyx_L31_exception_handled;
        }
        __pyx_L32_except_error:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        goto __pyx_L1_error;
        __pyx_L31_exception_handled:;
        __Pyx_XGIVEREF(__pyx_t_9);
        __Pyx_XGIVEREF(__pyx_t_8);
        __Pyx_XGIVEREF(__pyx_t_7);
        __Pyx_ExceptionReset(__pyx_t_9, __pyx_t_8, __pyx_t_7);
        __pyx_L37_try_end:;
      }
    }
    /*finally:*/ {
      if (__pyx_t_6) {
        __pyx_t_7 = PyObject_Call(__pyx_t_6, __pyx_k_tuple_37, NULL);
        __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
        if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_5 = __Pyx_PyObject_IsTrue(__pyx_t_7);
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
        if (unlikely(__pyx_t_5 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
    }
    goto __pyx_L84;
    __pyx_L26_error:;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L1_error;
    __pyx_L84:;
  }

  /* "LDModel.pyx":508
 *                             done = True;
 *                             break
 *         print "Finished reading beagle file."             # <<<<<<<<<<<<<<
 *                 #p = [self._pi[anc][i] for i in xrange(self._layer_state_nums[anc][0])]
 *                 #print "pi: " + str(p)
 */
  if (__Pyx_PrintOne(0, ((PyObject *)__pyx_kp_s_38)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 508; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_XDECREF(__pyx_t_22);
  __Pyx_XDECREF(__pyx_t_23);
  __Pyx_XDECREF(__pyx_t_29);
  __Pyx_XDECREF(__pyx_t_30);
  __Pyx_AddTraceback("LDModel.LDModel.read_from_bgl_file", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_model_file);
  __Pyx_XDECREF(__pyx_v_line);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XDECREF(__pyx_v_curr_allele);
  __Pyx_XDECREF(__pyx_v_blank_line);
  __Pyx_XDECREF(__pyx_v_layer);
  __Pyx_XDECREF(__pyx_v_nodes);
  __Pyx_XDECREF(__pyx_v_nodes_prev);
  __Pyx_XDECREF(__pyx_v_nodes_curr);
  __Pyx_XDECREF(__pyx_v_lines);
  __Pyx_XDECREF(__pyx_v_j);
  __Pyx_XDECREF(__pyx_v_total_parent_count);
  __Pyx_XDECREF(__pyx_v_edges_num);
  __Pyx_XDECREF(__pyx_v_k);
  __Pyx_XDECREF(__pyx_v_edge_idx);
  __Pyx_XDECREF(__pyx_v_sum_back_trans);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_21set_ibs(PyObject *__pyx_v_self, PyObject *__pyx_v_ibs_dic); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_21set_ibs(PyObject *__pyx_v_self, PyObject *__pyx_v_ibs_dic) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("set_ibs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_20set_ibs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_ibs_dic));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":512
 *                 #print "pi: " + str(p)
 * 
 *     def set_ibs(self, ibs_dic):             # <<<<<<<<<<<<<<
 *         if self._debug:
 *             self._ibs_file.write(self._prefix_string + " ")
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_20set_ibs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_ibs_dic) {
  int __pyx_v_win_idx;
  PyObject *__pyx_v_inter = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  PyObject *__pyx_t_6 = NULL;
  Py_ssize_t __pyx_t_7;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_ibs", 0);
  __Pyx_TraceCall("set_ibs", __pyx_f[0], 512);

  /* "LDModel.pyx":513
 * 
 *     def set_ibs(self, ibs_dic):
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             self._ibs_file.write(self._prefix_string + " ")
 *         for win_idx in range(self.get_num_windows()):
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":514
 *     def set_ibs(self, ibs_dic):
 *         if self._debug:
 *             self._ibs_file.write(self._prefix_string + " ")             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             inter = ibs_dic.find(self._position[self.start_snp(win_idx)],self._position[self.end_snp(win_idx)])
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_ibs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyBytes_FromString(__pyx_v_self->_prefix_string); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(((PyObject *)__pyx_t_2));
    __pyx_t_3 = PyNumber_Add(((PyObject *)__pyx_t_2), ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 514; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":515
 *         if self._debug:
 *             self._ibs_file.write(self._prefix_string + " ")
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             inter = ibs_dic.find(self._position[self.start_snp(win_idx)],self._position[self.end_snp(win_idx)])
 *             if len(inter) > 0:
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_win_idx = __pyx_t_5;

    /* "LDModel.pyx":516
 *             self._ibs_file.write(self._prefix_string + " ")
 *         for win_idx in range(self.get_num_windows()):
 *             inter = ibs_dic.find(self._position[self.start_snp(win_idx)],self._position[self.end_snp(win_idx)])             # <<<<<<<<<<<<<<
 *             if len(inter) > 0:
 *                 self._ibs[win_idx] = True
 */
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_ibs_dic, __pyx_n_s__find); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_2 = PyInt_FromLong((__pyx_v_self->_position[((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx)])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_1 = PyInt_FromLong((__pyx_v_self->_position[((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx)])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_6 = PyTuple_New(2); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
    __Pyx_GIVEREF(__pyx_t_2);
    PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_2 = 0;
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 516; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
    __Pyx_XDECREF(__pyx_v_inter);
    __pyx_v_inter = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":517
 *         for win_idx in range(self.get_num_windows()):
 *             inter = ibs_dic.find(self._position[self.start_snp(win_idx)],self._position[self.end_snp(win_idx)])
 *             if len(inter) > 0:             # <<<<<<<<<<<<<<
 *                 self._ibs[win_idx] = True
 *             else:
 */
    __pyx_t_7 = PyObject_Length(__pyx_v_inter); if (unlikely(__pyx_t_7 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 517; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_8 = (__pyx_t_7 > 0);
    if (__pyx_t_8) {

      /* "LDModel.pyx":518
 *             inter = ibs_dic.find(self._position[self.start_snp(win_idx)],self._position[self.end_snp(win_idx)])
 *             if len(inter) > 0:
 *                 self._ibs[win_idx] = True             # <<<<<<<<<<<<<<
 *             else:
 *                 self._ibs[win_idx] = False
 */
      (__pyx_v_self->_ibs[__pyx_v_win_idx]) = 1;
      goto __pyx_L6;
    }
    /*else*/ {

      /* "LDModel.pyx":520
 *                 self._ibs[win_idx] = True
 *             else:
 *                 self._ibs[win_idx] = False             # <<<<<<<<<<<<<<
 *             if self._debug:
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")
 */
      (__pyx_v_self->_ibs[__pyx_v_win_idx]) = 0;
    }
    __pyx_L6:;

    /* "LDModel.pyx":521
 *             else:
 *                 self._ibs[win_idx] = False
 *             if self._debug:             # <<<<<<<<<<<<<<
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")
 *         if self._debug:
 */
    if (__pyx_v_self->_debug) {

      /* "LDModel.pyx":522
 *                 self._ibs[win_idx] = False
 *             if self._debug:
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")             # <<<<<<<<<<<<<<
 *         if self._debug:
 *             self._ibs_file.write("\n")
 */
      __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_ibs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = __Pyx_PyBool_FromLong((__pyx_v_self->_ibs[__pyx_v_win_idx])); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_6);
      __Pyx_GIVEREF(__pyx_t_6);
      __pyx_t_6 = 0;
      __pyx_t_6 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_t_3 = PyNumber_Add(__pyx_t_6, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
      __pyx_t_6 = PyTuple_New(1); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 522; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      goto __pyx_L7;
    }
    __pyx_L7:;
  }

  /* "LDModel.pyx":523
 *             if self._debug:
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             self._ibs_file.write("\n")
 * 
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":524
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")
 *         if self._debug:
 *             self._ibs_file.write("\n")             # <<<<<<<<<<<<<<
 * 
 *     def get_haplo_num(self):
 */
    __pyx_t_3 = PyObject_GetAttr(__pyx_v_self->_ibs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_6 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_39), NULL); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_6);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __Pyx_DECREF(__pyx_t_6); __pyx_t_6 = 0;
    goto __pyx_L8;
  }
  __pyx_L8:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("LDModel.LDModel.set_ibs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_inter);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_23get_haplo_num(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_23get_haplo_num(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_haplo_num (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_22get_haplo_num(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":526
 *             self._ibs_file.write("\n")
 * 
 *     def get_haplo_num(self):             # <<<<<<<<<<<<<<
 *         return self._nr_haplos
 * 
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_22get_haplo_num(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_haplo_num", 0);
  __Pyx_TraceCall("get_haplo_num", __pyx_f[0], 526);

  /* "LDModel.pyx":527
 * 
 *     def get_haplo_num(self):
 *         return self._nr_haplos             # <<<<<<<<<<<<<<
 * 
 *     def get_snp_num(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_nr_haplos); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 527; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.get_haplo_num", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_25get_snp_num(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_25get_snp_num(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_snp_num (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_24get_snp_num(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":529
 *         return self._nr_haplos
 * 
 *     def get_snp_num(self):             # <<<<<<<<<<<<<<
 *         return self._snp_num
 * 
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_24get_snp_num(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_snp_num", 0);
  __Pyx_TraceCall("get_snp_num", __pyx_f[0], 529);

  /* "LDModel.pyx":530
 * 
 *     def get_snp_num(self):
 *         return self._snp_num             # <<<<<<<<<<<<<<
 * 
 *     def get_haplo(self,hap_idx):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_snp_num); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 530; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.get_snp_num", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_27get_haplo(PyObject *__pyx_v_self, PyObject *__pyx_v_hap_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_27get_haplo(PyObject *__pyx_v_self, PyObject *__pyx_v_hap_idx) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_haplo (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_26get_haplo(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_hap_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":532
 *         return self._snp_num
 * 
 *     def get_haplo(self,hap_idx):             # <<<<<<<<<<<<<<
 *         #pystring = self._haplos[hap_idx][:self._snp_num].decode('UTF-8')
 *         pystring = self._haplos[hap_idx][:self._snp_num]
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_26get_haplo(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_hap_idx) {
  PyObject *__pyx_v_pystring = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  Py_ssize_t __pyx_t_1;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_haplo", 0);
  __Pyx_TraceCall("get_haplo", __pyx_f[0], 532);

  /* "LDModel.pyx":534
 *     def get_haplo(self,hap_idx):
 *         #pystring = self._haplos[hap_idx][:self._snp_num].decode('UTF-8')
 *         pystring = self._haplos[hap_idx][:self._snp_num]             # <<<<<<<<<<<<<<
 *         return pystring
 * 
 */
  __pyx_t_1 = __Pyx_PyIndex_AsSsize_t(__pyx_v_hap_idx); if (unlikely((__pyx_t_1 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_2 = PyBytes_FromStringAndSize(((const char*)(__pyx_v_self->_haplos[__pyx_t_1])) + 0, __pyx_v_self->_snp_num - 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 534; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  __pyx_v_pystring = ((PyObject *)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "LDModel.pyx":535
 *         #pystring = self._haplos[hap_idx][:self._snp_num].decode('UTF-8')
 *         pystring = self._haplos[hap_idx][:self._snp_num]
 *         return pystring             # <<<<<<<<<<<<<<
 * 
 *     def get_layer_node_nums(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_pystring);
  __pyx_r = __pyx_v_pystring;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.get_haplo", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_pystring);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_29get_layer_node_nums(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_29get_layer_node_nums(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_layer_node_nums (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_28get_layer_node_nums(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":537
 *         return pystring
 * 
 *     def get_layer_node_nums(self, anc):             # <<<<<<<<<<<<<<
 *         node_nums = []
 *         for layer in range(self._snp_num):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_28get_layer_node_nums(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_node_nums = NULL;
  int __pyx_v_layer;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  int __pyx_t_5;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_layer_node_nums", 0);
  __Pyx_TraceCall("get_layer_node_nums", __pyx_f[0], 537);

  /* "LDModel.pyx":538
 * 
 *     def get_layer_node_nums(self, anc):
 *         node_nums = []             # <<<<<<<<<<<<<<
 *         for layer in range(self._snp_num):
 *             node_nums.append(self._layer_state_nums[anc][layer])
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 538; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_node_nums = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":539
 *     def get_layer_node_nums(self, anc):
 *         node_nums = []
 *         for layer in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             node_nums.append(self._layer_state_nums[anc][layer])
 *         return node_nums
 */
  __pyx_t_2 = __pyx_v_self->_snp_num;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":540
 *         node_nums = []
 *         for layer in range(self._snp_num):
 *             node_nums.append(self._layer_state_nums[anc][layer])             # <<<<<<<<<<<<<<
 *         return node_nums
 * 
 */
    __pyx_t_4 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_4 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_4])[__pyx_v_layer])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyList_Append(__pyx_v_node_nums, __pyx_t_1); if (unlikely(__pyx_t_5 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 540; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":541
 *         for layer in range(self._snp_num):
 *             node_nums.append(self._layer_state_nums[anc][layer])
 *         return node_nums             # <<<<<<<<<<<<<<
 * 
 *     def get_node_edges(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_node_nums));
  __pyx_r = ((PyObject *)__pyx_v_node_nums);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.get_layer_node_nums", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_node_nums);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_31get_node_edges(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_31get_node_edges(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_node_edges (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_30get_node_edges(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":543
 *         return node_nums
 * 
 *     def get_node_edges(self, anc):             # <<<<<<<<<<<<<<
 *         edges = []
 *         edge_weights = []
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_30get_node_edges(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_edges = NULL;
  PyObject *__pyx_v_edge_weights = NULL;
  long __pyx_v_layer;
  PyObject *__pyx_v_layer_edges = NULL;
  PyObject *__pyx_v_layer_edge_weights = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_node_edges", 0);
  __Pyx_TraceCall("get_node_edges", __pyx_f[0], 543);

  /* "LDModel.pyx":544
 * 
 *     def get_node_edges(self, anc):
 *         edges = []             # <<<<<<<<<<<<<<
 *         edge_weights = []
 *         for layer in range(self._snp_num-1):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_edges = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":545
 *     def get_node_edges(self, anc):
 *         edges = []
 *         edge_weights = []             # <<<<<<<<<<<<<<
 *         for layer in range(self._snp_num-1):
 *             print "layer: " + str(layer)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_edge_weights = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":546
 *         edges = []
 *         edge_weights = []
 *         for layer in range(self._snp_num-1):             # <<<<<<<<<<<<<<
 *             print "layer: " + str(layer)
 *             layer_edges = []
 */
  __pyx_t_2 = (__pyx_v_self->_snp_num - 1);
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":547
 *         edge_weights = []
 *         for layer in range(self._snp_num-1):
 *             print "layer: " + str(layer)             # <<<<<<<<<<<<<<
 *             layer_edges = []
 *             layer_edge_weights = []
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_layer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_40), __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "LDModel.pyx":548
 *         for layer in range(self._snp_num-1):
 *             print "layer: " + str(layer)
 *             layer_edges = []             # <<<<<<<<<<<<<<
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_edges));
    __pyx_v_layer_edges = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":549
 *             print "layer: " + str(layer)
 *             layer_edges = []
 *             layer_edge_weights = []             # <<<<<<<<<<<<<<
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_edge_weights));
    __pyx_v_layer_edge_weights = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":550
 *             layer_edges = []
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):             # <<<<<<<<<<<<<<
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 */
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_5])[__pyx_v_layer])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    if (PyList_CheckExact(__pyx_t_4) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_1 = __pyx_t_4; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = Py_TYPE(__pyx_t_1)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_4 = __pyx_t_6(__pyx_t_1);
        if (unlikely(!__pyx_t_4)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 550; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF(__pyx_v_node);
      __pyx_v_node = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "LDModel.pyx":551
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)             # <<<<<<<<<<<<<<
 *                 layer_edges.append([self._trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *                 layer_edge_weights.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_node);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_node);
      __Pyx_GIVEREF(__pyx_v_node);
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_41), __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 551; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "LDModel.pyx":552
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])             # <<<<<<<<<<<<<<
 *                 layer_edge_weights.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             edges.append(layer_edges)
 */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_7 = PyInt_FromLong((((__pyx_v_self->_states[__pyx_t_8])[__pyx_v_layer])[__pyx_t_9]).out_trans_num); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_7 = PyObject_Call(__pyx_builtin_xrange, ((PyObject *)__pyx_t_10), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
      if (PyList_CheckExact(__pyx_t_7) || PyTuple_CheckExact(__pyx_t_7)) {
        __pyx_t_10 = __pyx_t_7; __Pyx_INCREF(__pyx_t_10); __pyx_t_9 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_9 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      for (;;) {
        if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_10)) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_10, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_10)) {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_10, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_7 = __pyx_t_11(__pyx_t_10);
          if (unlikely(!__pyx_t_7)) {
            if (PyErr_Occurred()) {
              if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_7);
        }
        __Pyx_XDECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_7;
        __pyx_t_7 = 0;
        __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_7 = PyInt_FromLong(((((__pyx_v_self->_trans_idx[__pyx_t_8])[__pyx_v_layer])[__pyx_t_12])[__pyx_t_13])); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_4, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = ((PyObject *)__pyx_t_4);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_14 = PyList_Append(__pyx_v_layer_edges, __pyx_t_10); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "LDModel.pyx":553
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *                 layer_edge_weights.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])             # <<<<<<<<<<<<<<
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)
 */
      __pyx_t_10 = PyList_New(0); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyInt_FromLong((((__pyx_v_self->_states[__pyx_t_9])[__pyx_v_layer])[__pyx_t_13]).out_trans_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_builtin_xrange, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      if (PyList_CheckExact(__pyx_t_4) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_7 = __pyx_t_4; __Pyx_INCREF(__pyx_t_7); __pyx_t_13 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_11 = Py_TYPE(__pyx_t_7)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_7)) {
          if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_7)) {
          if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_4 = __pyx_t_11(__pyx_t_7);
          if (unlikely(!__pyx_t_4)) {
            if (PyErr_Occurred()) {
              if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_4;
        __pyx_t_4 = 0;
        __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_4 = PyFloat_FromDouble(((((__pyx_v_self->_trans[__pyx_t_9])[__pyx_v_layer])[__pyx_t_12])[__pyx_t_8])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_10, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = ((PyObject *)__pyx_t_10);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
      __pyx_t_14 = PyList_Append(__pyx_v_layer_edge_weights, __pyx_t_7); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 553; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "LDModel.pyx":554
 *                 layer_edges.append([self._trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *                 layer_edge_weights.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             edges.append(layer_edges)             # <<<<<<<<<<<<<<
 *             edge_weights.append(layer_edge_weights)
 *         return (edges, edge_weights)
 */
    __pyx_t_14 = PyList_Append(__pyx_v_edges, ((PyObject *)__pyx_v_layer_edges)); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 554; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "LDModel.pyx":555
 *                 layer_edge_weights.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)             # <<<<<<<<<<<<<<
 *         return (edges, edge_weights)
 * 
 */
    __pyx_t_14 = PyList_Append(__pyx_v_edge_weights, ((PyObject *)__pyx_v_layer_edge_weights)); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 555; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "LDModel.pyx":556
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)
 *         return (edges, edge_weights)             # <<<<<<<<<<<<<<
 * 
 *     def get_node_edges_back(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_edges));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_edges));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_edges));
  __Pyx_INCREF(((PyObject *)__pyx_v_edge_weights));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_edge_weights));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_edge_weights));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("LDModel.LDModel.get_node_edges", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edges);
  __Pyx_XDECREF(__pyx_v_edge_weights);
  __Pyx_XDECREF(__pyx_v_layer_edges);
  __Pyx_XDECREF(__pyx_v_layer_edge_weights);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_33get_node_edges_back(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_33get_node_edges_back(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_node_edges_back (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_32get_node_edges_back(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":558
 *         return (edges, edge_weights)
 * 
 *     def get_node_edges_back(self, anc):             # <<<<<<<<<<<<<<
 *         edges = []
 *         edge_weights = []
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_32get_node_edges_back(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_edges = NULL;
  PyObject *__pyx_v_edge_weights = NULL;
  long __pyx_v_layer;
  PyObject *__pyx_v_layer_edges = NULL;
  PyObject *__pyx_v_layer_edge_weights = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  long __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_node_edges_back", 0);
  __Pyx_TraceCall("get_node_edges_back", __pyx_f[0], 558);

  /* "LDModel.pyx":559
 * 
 *     def get_node_edges_back(self, anc):
 *         edges = []             # <<<<<<<<<<<<<<
 *         edge_weights = []
 *         for layer in range(1,self._snp_num):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 559; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_edges = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":560
 *     def get_node_edges_back(self, anc):
 *         edges = []
 *         edge_weights = []             # <<<<<<<<<<<<<<
 *         for layer in range(1,self._snp_num):
 *             print "layer: " + str(layer)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 560; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_edge_weights = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":561
 *         edges = []
 *         edge_weights = []
 *         for layer in range(1,self._snp_num):             # <<<<<<<<<<<<<<
 *             print "layer: " + str(layer)
 *             layer_edges = []
 */
  __pyx_t_2 = __pyx_v_self->_snp_num;
  for (__pyx_t_3 = 1; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":562
 *         edge_weights = []
 *         for layer in range(1,self._snp_num):
 *             print "layer: " + str(layer)             # <<<<<<<<<<<<<<
 *             layer_edges = []
 *             layer_edge_weights = []
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_layer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_40), __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 562; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "LDModel.pyx":563
 *         for layer in range(1,self._snp_num):
 *             print "layer: " + str(layer)
 *             layer_edges = []             # <<<<<<<<<<<<<<
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 563; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_edges));
    __pyx_v_layer_edges = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":564
 *             print "layer: " + str(layer)
 *             layer_edges = []
 *             layer_edge_weights = []             # <<<<<<<<<<<<<<
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 564; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_edge_weights));
    __pyx_v_layer_edge_weights = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":565
 *             layer_edges = []
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):             # <<<<<<<<<<<<<<
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._back_trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 */
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_5])[__pyx_v_layer])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    if (PyList_CheckExact(__pyx_t_4) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_1 = __pyx_t_4; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = Py_TYPE(__pyx_t_1)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_4 = __pyx_t_6(__pyx_t_1);
        if (unlikely(!__pyx_t_4)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 565; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF(__pyx_v_node);
      __pyx_v_node = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "LDModel.pyx":566
 *             layer_edge_weights = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)             # <<<<<<<<<<<<<<
 *                 layer_edges.append([self._back_trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *                 layer_edge_weights.append([self._back_trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_node);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_node);
      __Pyx_GIVEREF(__pyx_v_node);
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_41), __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 566; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "LDModel.pyx":567
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._back_trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])             # <<<<<<<<<<<<<<
 *                 layer_edge_weights.append([self._back_trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *             edges.append(layer_edges)
 */
      __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_7 = PyInt_FromLong((((__pyx_v_self->_states[__pyx_t_8])[__pyx_v_layer])[__pyx_t_9]).in_trans_num); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_7 = 0;
      __pyx_t_7 = PyObject_Call(__pyx_builtin_xrange, ((PyObject *)__pyx_t_10), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
      if (PyList_CheckExact(__pyx_t_7) || PyTuple_CheckExact(__pyx_t_7)) {
        __pyx_t_10 = __pyx_t_7; __Pyx_INCREF(__pyx_t_10); __pyx_t_9 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_9 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_t_7); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      for (;;) {
        if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_10)) {
          if (__pyx_t_9 >= PyList_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_10, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_10)) {
          if (__pyx_t_9 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_7 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_9); __Pyx_INCREF(__pyx_t_7); __pyx_t_9++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_7 = PySequence_ITEM(__pyx_t_10, __pyx_t_9); __pyx_t_9++; if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_7 = __pyx_t_11(__pyx_t_10);
          if (unlikely(!__pyx_t_7)) {
            if (PyErr_Occurred()) {
              if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_7);
        }
        __Pyx_XDECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_7;
        __pyx_t_7 = 0;
        __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_7 = PyInt_FromLong(((((__pyx_v_self->_back_trans_idx[__pyx_t_8])[__pyx_v_layer])[__pyx_t_12])[__pyx_t_13])); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_4, (PyObject*)__pyx_t_7))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = ((PyObject *)__pyx_t_4);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_14 = PyList_Append(__pyx_v_layer_edges, __pyx_t_10); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 567; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;

      /* "LDModel.pyx":568
 *                 print "node: " + str(node)
 *                 layer_edges.append([self._back_trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *                 layer_edge_weights.append([self._back_trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])             # <<<<<<<<<<<<<<
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)
 */
      __pyx_t_10 = PyList_New(0); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyInt_FromLong((((__pyx_v_self->_states[__pyx_t_9])[__pyx_v_layer])[__pyx_t_13]).in_trans_num); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_7 = PyTuple_New(1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      PyTuple_SET_ITEM(__pyx_t_7, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      __pyx_t_4 = 0;
      __pyx_t_4 = PyObject_Call(__pyx_builtin_xrange, ((PyObject *)__pyx_t_7), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(((PyObject *)__pyx_t_7)); __pyx_t_7 = 0;
      if (PyList_CheckExact(__pyx_t_4) || PyTuple_CheckExact(__pyx_t_4)) {
        __pyx_t_7 = __pyx_t_4; __Pyx_INCREF(__pyx_t_7); __pyx_t_13 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_13 = -1; __pyx_t_7 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_7);
        __pyx_t_11 = Py_TYPE(__pyx_t_7)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      for (;;) {
        if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_7)) {
          if (__pyx_t_13 >= PyList_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyList_GET_ITEM(__pyx_t_7, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_7)) {
          if (__pyx_t_13 >= PyTuple_GET_SIZE(__pyx_t_7)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_7, __pyx_t_13); __Pyx_INCREF(__pyx_t_4); __pyx_t_13++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_4 = PySequence_ITEM(__pyx_t_7, __pyx_t_13); __pyx_t_13++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_4 = __pyx_t_11(__pyx_t_7);
          if (unlikely(!__pyx_t_4)) {
            if (PyErr_Occurred()) {
              if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_4);
        }
        __Pyx_XDECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_4;
        __pyx_t_4 = 0;
        __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_4 = PyFloat_FromDouble(((((__pyx_v_self->_back_trans[__pyx_t_9])[__pyx_v_layer])[__pyx_t_12])[__pyx_t_8])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_4);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_10, (PyObject*)__pyx_t_4))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      }
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_7 = ((PyObject *)__pyx_t_10);
      __Pyx_INCREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
      __pyx_t_14 = PyList_Append(__pyx_v_layer_edge_weights, __pyx_t_7); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 568; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "LDModel.pyx":569
 *                 layer_edges.append([self._back_trans_idx[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *                 layer_edge_weights.append([self._back_trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *             edges.append(layer_edges)             # <<<<<<<<<<<<<<
 *             edge_weights.append(layer_edge_weights)
 *         return (edges, edge_weights)
 */
    __pyx_t_14 = PyList_Append(__pyx_v_edges, ((PyObject *)__pyx_v_layer_edges)); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 569; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

    /* "LDModel.pyx":570
 *                 layer_edge_weights.append([self._back_trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].in_trans_num)])
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)             # <<<<<<<<<<<<<<
 *         return (edges, edge_weights)
 * 
 */
    __pyx_t_14 = PyList_Append(__pyx_v_edge_weights, ((PyObject *)__pyx_v_layer_edge_weights)); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 570; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "LDModel.pyx":571
 *             edges.append(layer_edges)
 *             edge_weights.append(layer_edge_weights)
 *         return (edges, edge_weights)             # <<<<<<<<<<<<<<
 * 
 *     def get_node_ems_probs(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyTuple_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 571; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_v_edges));
  PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_v_edges));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_edges));
  __Pyx_INCREF(((PyObject *)__pyx_v_edge_weights));
  PyTuple_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_v_edge_weights));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_edge_weights));
  __pyx_r = ((PyObject *)__pyx_t_1);
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("LDModel.LDModel.get_node_edges_back", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_edges);
  __Pyx_XDECREF(__pyx_v_edge_weights);
  __Pyx_XDECREF(__pyx_v_layer_edges);
  __Pyx_XDECREF(__pyx_v_layer_edge_weights);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_35get_node_ems_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_35get_node_ems_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_node_ems_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_34get_node_ems_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":573
 *         return (edges, edge_weights)
 * 
 *     def get_node_ems_probs(self, anc):             # <<<<<<<<<<<<<<
 *         ems_probs = []
 *         for layer in range(self._snp_num):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_34get_node_ems_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_ems_probs = NULL;
  int __pyx_v_layer;
  PyObject *__pyx_v_layer_ems_probs = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  PyObject *__pyx_t_10 = NULL;
  int __pyx_t_11;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_node_ems_probs", 0);
  __Pyx_TraceCall("get_node_ems_probs", __pyx_f[0], 573);

  /* "LDModel.pyx":574
 * 
 *     def get_node_ems_probs(self, anc):
 *         ems_probs = []             # <<<<<<<<<<<<<<
 *         for layer in range(self._snp_num):
 *             print "layer: " + str(layer)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 574; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ems_probs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":575
 *     def get_node_ems_probs(self, anc):
 *         ems_probs = []
 *         for layer in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             print "layer: " + str(layer)
 *             layer_ems_probs = []
 */
  __pyx_t_2 = __pyx_v_self->_snp_num;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":576
 *         ems_probs = []
 *         for layer in range(self._snp_num):
 *             print "layer: " + str(layer)             # <<<<<<<<<<<<<<
 *             layer_ems_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_layer); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
    __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_40), __pyx_t_1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 576; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

    /* "LDModel.pyx":577
 *         for layer in range(self._snp_num):
 *             print "layer: " + str(layer)
 *             layer_ems_probs = []             # <<<<<<<<<<<<<<
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 */
    __pyx_t_4 = PyList_New(0); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 577; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_ems_probs));
    __pyx_v_layer_ems_probs = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "LDModel.pyx":578
 *             print "layer: " + str(layer)
 *             layer_ems_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):             # <<<<<<<<<<<<<<
 *                 print "node: " + str(node)
 *                 layer_ems_probs.append((self._states[anc][layer][node].prob_em[0],self._states[anc][layer][node].prob_em[1]))
 */
    __pyx_t_5 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_5 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_4 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_5])[__pyx_v_layer])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_4);
    __Pyx_GIVEREF(__pyx_t_4);
    __pyx_t_4 = 0;
    __pyx_t_4 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    if (PyList_CheckExact(__pyx_t_4) || PyTuple_CheckExact(__pyx_t_4)) {
      __pyx_t_1 = __pyx_t_4; __Pyx_INCREF(__pyx_t_1); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_5 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_6 = Py_TYPE(__pyx_t_1)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_1)) {
        if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_4 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_5); __Pyx_INCREF(__pyx_t_4); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_4 = PySequence_ITEM(__pyx_t_1, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_4 = __pyx_t_6(__pyx_t_1);
        if (unlikely(!__pyx_t_4)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 578; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_4);
      }
      __Pyx_XDECREF(__pyx_v_node);
      __pyx_v_node = __pyx_t_4;
      __pyx_t_4 = 0;

      /* "LDModel.pyx":579
 *             layer_ems_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)             # <<<<<<<<<<<<<<
 *                 layer_ems_probs.append((self._states[anc][layer][node].prob_em[0],self._states[anc][layer][node].prob_em[1]))
 *             ems_probs.append(layer_ems_probs)
 */
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_INCREF(__pyx_v_node);
      PyTuple_SET_ITEM(__pyx_t_4, 0, __pyx_v_node);
      __Pyx_GIVEREF(__pyx_v_node);
      __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __pyx_t_4 = PyNumber_Add(((PyObject *)__pyx_kp_s_41), __pyx_t_7); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      if (__Pyx_PrintOne(0, __pyx_t_4) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 579; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;

      /* "LDModel.pyx":580
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 print "node: " + str(node)
 *                 layer_ems_probs.append((self._states[anc][layer][node].prob_em[0],self._states[anc][layer][node].prob_em[1]))             # <<<<<<<<<<<<<<
 *             ems_probs.append(layer_ems_probs)
 *         return ems_probs
 */
      __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PyFloat_FromDouble(((((__pyx_v_self->_states[__pyx_t_8])[__pyx_v_layer])[__pyx_t_9]).prob_em[0])); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_7 = PyFloat_FromDouble(((((__pyx_v_self->_states[__pyx_t_9])[__pyx_v_layer])[__pyx_t_8]).prob_em[1])); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_10 = PyTuple_New(2); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_10, 1, __pyx_t_7);
      __Pyx_GIVEREF(__pyx_t_7);
      __pyx_t_4 = 0;
      __pyx_t_7 = 0;
      __pyx_t_11 = PyList_Append(__pyx_v_layer_ems_probs, ((PyObject *)__pyx_t_10)); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 580; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "LDModel.pyx":581
 *                 print "node: " + str(node)
 *                 layer_ems_probs.append((self._states[anc][layer][node].prob_em[0],self._states[anc][layer][node].prob_em[1]))
 *             ems_probs.append(layer_ems_probs)             # <<<<<<<<<<<<<<
 *         return ems_probs
 * 
 */
    __pyx_t_11 = PyList_Append(__pyx_v_ems_probs, ((PyObject *)__pyx_v_layer_ems_probs)); if (unlikely(__pyx_t_11 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 581; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "LDModel.pyx":582
 *                 layer_ems_probs.append((self._states[anc][layer][node].prob_em[0],self._states[anc][layer][node].prob_em[1]))
 *             ems_probs.append(layer_ems_probs)
 *         return ems_probs             # <<<<<<<<<<<<<<
 * 
 *     def get_trans_probs(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_ems_probs));
  __pyx_r = ((PyObject *)__pyx_v_ems_probs);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("LDModel.LDModel.get_node_ems_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_ems_probs);
  __Pyx_XDECREF(__pyx_v_layer_ems_probs);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_37get_trans_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_37get_trans_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_trans_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_36get_trans_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":584
 *         return ems_probs
 * 
 *     def get_trans_probs(self, anc):             # <<<<<<<<<<<<<<
 *         probs = []
 *         for layer in range(self._snp_num-1):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_36get_trans_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_probs = NULL;
  long __pyx_v_layer;
  PyObject *__pyx_v_layer_probs = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  long __pyx_t_2;
  long __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  Py_ssize_t __pyx_t_7;
  Py_ssize_t __pyx_t_8;
  PyObject *__pyx_t_9 = NULL;
  PyObject *__pyx_t_10 = NULL;
  PyObject *(*__pyx_t_11)(PyObject *);
  Py_ssize_t __pyx_t_12;
  Py_ssize_t __pyx_t_13;
  int __pyx_t_14;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_trans_probs", 0);
  __Pyx_TraceCall("get_trans_probs", __pyx_f[0], 584);

  /* "LDModel.pyx":585
 * 
 *     def get_trans_probs(self, anc):
 *         probs = []             # <<<<<<<<<<<<<<
 *         for layer in range(self._snp_num-1):
 *             layer_probs = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 585; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_probs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":586
 *     def get_trans_probs(self, anc):
 *         probs = []
 *         for layer in range(self._snp_num-1):             # <<<<<<<<<<<<<<
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 */
  __pyx_t_2 = (__pyx_v_self->_snp_num - 1);
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":587
 *         probs = []
 *         for layer in range(self._snp_num-1):
 *             layer_probs = []             # <<<<<<<<<<<<<<
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 587; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_probs));
    __pyx_v_layer_probs = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":588
 *         for layer in range(self._snp_num-1):
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):             # <<<<<<<<<<<<<<
 *                 layer_probs.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             probs.append(layer_probs)
 */
    __pyx_t_4 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_4 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_4])[__pyx_v_layer])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_5 = __pyx_t_1; __Pyx_INCREF(__pyx_t_5); __pyx_t_4 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_6(__pyx_t_5);
        if (unlikely(!__pyx_t_1)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 588; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF(__pyx_v_node);
      __pyx_v_node = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":589
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])             # <<<<<<<<<<<<<<
 *             probs.append(layer_probs)
 *         return probs
 */
      __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_9 = PyInt_FromLong((((__pyx_v_self->_states[__pyx_t_7])[__pyx_v_layer])[__pyx_t_8]).out_trans_num); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __pyx_t_10 = PyTuple_New(1); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_10);
      PyTuple_SET_ITEM(__pyx_t_10, 0, __pyx_t_9);
      __Pyx_GIVEREF(__pyx_t_9);
      __pyx_t_9 = 0;
      __pyx_t_9 = PyObject_Call(__pyx_builtin_xrange, ((PyObject *)__pyx_t_10), NULL); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_9);
      __Pyx_DECREF(((PyObject *)__pyx_t_10)); __pyx_t_10 = 0;
      if (PyList_CheckExact(__pyx_t_9) || PyTuple_CheckExact(__pyx_t_9)) {
        __pyx_t_10 = __pyx_t_9; __Pyx_INCREF(__pyx_t_10); __pyx_t_8 = 0;
        __pyx_t_11 = NULL;
      } else {
        __pyx_t_8 = -1; __pyx_t_10 = PyObject_GetIter(__pyx_t_9); if (unlikely(!__pyx_t_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_10);
        __pyx_t_11 = Py_TYPE(__pyx_t_10)->tp_iternext;
      }
      __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      for (;;) {
        if (!__pyx_t_11 && PyList_CheckExact(__pyx_t_10)) {
          if (__pyx_t_8 >= PyList_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_9 = PyList_GET_ITEM(__pyx_t_10, __pyx_t_8); __Pyx_INCREF(__pyx_t_9); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_9 = PySequence_ITEM(__pyx_t_10, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else if (!__pyx_t_11 && PyTuple_CheckExact(__pyx_t_10)) {
          if (__pyx_t_8 >= PyTuple_GET_SIZE(__pyx_t_10)) break;
          #if CYTHON_COMPILING_IN_CPYTHON
          __pyx_t_9 = PyTuple_GET_ITEM(__pyx_t_10, __pyx_t_8); __Pyx_INCREF(__pyx_t_9); __pyx_t_8++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #else
          __pyx_t_9 = PySequence_ITEM(__pyx_t_10, __pyx_t_8); __pyx_t_8++; if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          #endif
        } else {
          __pyx_t_9 = __pyx_t_11(__pyx_t_10);
          if (unlikely(!__pyx_t_9)) {
            if (PyErr_Occurred()) {
              if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
              else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
            }
            break;
          }
          __Pyx_GOTREF(__pyx_t_9);
        }
        __Pyx_XDECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_9;
        __pyx_t_9 = 0;
        __pyx_t_7 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_7 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_12 = __Pyx_PyIndex_AsSsize_t(__pyx_v_node); if (unlikely((__pyx_t_12 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_13 = __Pyx_PyIndex_AsSsize_t(__pyx_v_i); if (unlikely((__pyx_t_13 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_9 = PyFloat_FromDouble(((((__pyx_v_self->_trans[__pyx_t_7])[__pyx_v_layer])[__pyx_t_12])[__pyx_t_13])); if (unlikely(!__pyx_t_9)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_9);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_9))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_9); __pyx_t_9 = 0;
      }
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
      __pyx_t_10 = ((PyObject *)__pyx_t_1);
      __Pyx_INCREF(__pyx_t_10);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_14 = PyList_Append(__pyx_v_layer_probs, __pyx_t_10); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 589; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_10); __pyx_t_10 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "LDModel.pyx":590
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             probs.append(layer_probs)             # <<<<<<<<<<<<<<
 *         return probs
 * 
 */
    __pyx_t_14 = PyList_Append(__pyx_v_probs, ((PyObject *)__pyx_v_layer_probs)); if (unlikely(__pyx_t_14 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 590; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "LDModel.pyx":591
 *                 layer_probs.append([self._trans[anc][layer][node][i] for i in xrange(self._states[anc][layer][node].out_trans_num)])
 *             probs.append(layer_probs)
 *         return probs             # <<<<<<<<<<<<<<
 * 
 *     def get_forward_probs(self, anc):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_probs));
  __pyx_r = ((PyObject *)__pyx_v_probs);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_9);
  __Pyx_XDECREF(__pyx_t_10);
  __Pyx_AddTraceback("LDModel.LDModel.get_trans_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_probs);
  __Pyx_XDECREF(__pyx_v_layer_probs);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_39get_forward_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_39get_forward_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_forward_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_38get_forward_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":593
 *         return probs
 * 
 *     def get_forward_probs(self, anc):             # <<<<<<<<<<<<<<
 *         probs = []
 *         for layer in range(self._snp_num):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_38get_forward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_anc) {
  PyObject *__pyx_v_probs = NULL;
  int __pyx_v_layer;
  PyObject *__pyx_v_layer_probs = NULL;
  PyObject *__pyx_v_node = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_t_2;
  int __pyx_t_3;
  Py_ssize_t __pyx_t_4;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  int __pyx_t_8;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_forward_probs", 0);
  __Pyx_TraceCall("get_forward_probs", __pyx_f[0], 593);

  /* "LDModel.pyx":594
 * 
 *     def get_forward_probs(self, anc):
 *         probs = []             # <<<<<<<<<<<<<<
 *         for layer in range(self._snp_num):
 *             layer_probs = []
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 594; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_probs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":595
 *     def get_forward_probs(self, anc):
 *         probs = []
 *         for layer in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 */
  __pyx_t_2 = __pyx_v_self->_snp_num;
  for (__pyx_t_3 = 0; __pyx_t_3 < __pyx_t_2; __pyx_t_3+=1) {
    __pyx_v_layer = __pyx_t_3;

    /* "LDModel.pyx":596
 *         probs = []
 *         for layer in range(self._snp_num):
 *             layer_probs = []             # <<<<<<<<<<<<<<
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append(self._forward_probs[layer][node])
 */
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 596; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_XDECREF(((PyObject *)__pyx_v_layer_probs));
    __pyx_v_layer_probs = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":597
 *         for layer in range(self._snp_num):
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):             # <<<<<<<<<<<<<<
 *                 layer_probs.append(self._forward_probs[layer][node])
 *             probs.append(layer_probs)
 */
    __pyx_t_4 = __Pyx_PyIndex_AsSsize_t(__pyx_v_anc); if (unlikely((__pyx_t_4 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyInt_FromLong(((__pyx_v_self->_layer_state_nums[__pyx_t_4])[__pyx_v_layer])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_5 = PyTuple_New(1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    PyTuple_SET_ITEM(__pyx_t_5, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_5), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_5)); __pyx_t_5 = 0;
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_5 = __pyx_t_1; __Pyx_INCREF(__pyx_t_5); __pyx_t_4 = 0;
      __pyx_t_6 = NULL;
    } else {
      __pyx_t_4 = -1; __pyx_t_5 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_5)) {
        if (__pyx_t_4 >= PyList_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_5)) {
        if (__pyx_t_4 >= PyTuple_GET_SIZE(__pyx_t_5)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_5, __pyx_t_4); __Pyx_INCREF(__pyx_t_1); __pyx_t_4++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_5, __pyx_t_4); __pyx_t_4++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_6(__pyx_t_5);
        if (unlikely(!__pyx_t_1)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 597; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF(__pyx_v_node);
      __pyx_v_node = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":598
 *             layer_probs = []
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append(self._forward_probs[layer][node])             # <<<<<<<<<<<<<<
 *             probs.append(layer_probs)
 *         return probs
 */
      __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s___forward_probs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = __Pyx_GetItemInt(__pyx_t_1, __pyx_v_layer, sizeof(int), PyInt_FromLong); if (!__pyx_t_7) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_GetItem(__pyx_t_7, __pyx_v_node); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __pyx_t_8 = PyList_Append(__pyx_v_layer_probs, __pyx_t_1); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 598; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;

    /* "LDModel.pyx":599
 *             for node in range(self._layer_state_nums[anc][layer]):
 *                 layer_probs.append(self._forward_probs[layer][node])
 *             probs.append(layer_probs)             # <<<<<<<<<<<<<<
 *         return probs
 * 
 */
    __pyx_t_8 = PyList_Append(__pyx_v_probs, ((PyObject *)__pyx_v_layer_probs)); if (unlikely(__pyx_t_8 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 599; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }

  /* "LDModel.pyx":600
 *                 layer_probs.append(self._forward_probs[layer][node])
 *             probs.append(layer_probs)
 *         return probs             # <<<<<<<<<<<<<<
 * 
 *     def print_transitions(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(((PyObject *)__pyx_v_probs));
  __pyx_r = ((PyObject *)__pyx_v_probs);
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("LDModel.LDModel.get_forward_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_probs);
  __Pyx_XDECREF(__pyx_v_layer_probs);
  __Pyx_XDECREF(__pyx_v_node);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_41print_transitions(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_41print_transitions(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("print_transitions (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_40print_transitions(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":602
 *         return probs
 * 
 *     def print_transitions(self):             # <<<<<<<<<<<<<<
 *         self._trans_file.write("snp ancestry node next_node transition\n")
 *         for snp_idx in range(self._snp_num):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_40print_transitions(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  int __pyx_v_snp_idx;
  int __pyx_v_admx_idx;
  int __pyx_v_node_idx;
  int __pyx_v_nxt_node_idx;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  PyObject *__pyx_t_11 = NULL;
  PyObject *__pyx_t_12 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("print_transitions", 0);
  __Pyx_TraceCall("print_transitions", __pyx_f[0], 602);

  /* "LDModel.pyx":603
 * 
 *     def print_transitions(self):
 *         self._trans_file.write("snp ancestry node next_node transition\n")             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self._snp_num):
 *             for admx_idx in range(self.K):
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_trans_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_43), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":604
 *     def print_transitions(self):
 *         self._trans_file.write("snp ancestry node next_node transition\n")
 *         for snp_idx in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             for admx_idx in range(self.K):
 *                 for node_idx in range(self._layer_state_nums[admx_idx][snp_idx]):
 */
  __pyx_t_3 = __pyx_v_self->_snp_num;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_snp_idx = __pyx_t_4;

    /* "LDModel.pyx":605
 *         self._trans_file.write("snp ancestry node next_node transition\n")
 *         for snp_idx in range(self._snp_num):
 *             for admx_idx in range(self.K):             # <<<<<<<<<<<<<<
 *                 for node_idx in range(self._layer_state_nums[admx_idx][snp_idx]):
 *                     for nxt_node_idx in range(self._states[admx_idx][snp_idx][node_idx].out_trans_num):
 */
    __pyx_t_5 = __pyx_v_self->K;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_admx_idx = __pyx_t_6;

      /* "LDModel.pyx":606
 *         for snp_idx in range(self._snp_num):
 *             for admx_idx in range(self.K):
 *                 for node_idx in range(self._layer_state_nums[admx_idx][snp_idx]):             # <<<<<<<<<<<<<<
 *                     for nxt_node_idx in range(self._states[admx_idx][snp_idx][node_idx].out_trans_num):
 *                         self._trans_file.write(str(snp_idx) + " " +
 */
      __pyx_t_7 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx])[__pyx_v_snp_idx]);
      for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
        __pyx_v_node_idx = __pyx_t_8;

        /* "LDModel.pyx":607
 *             for admx_idx in range(self.K):
 *                 for node_idx in range(self._layer_state_nums[admx_idx][snp_idx]):
 *                     for nxt_node_idx in range(self._states[admx_idx][snp_idx][node_idx].out_trans_num):             # <<<<<<<<<<<<<<
 *                         self._trans_file.write(str(snp_idx) + " " +
 *                                   str(admx_idx) + " " +
 */
        __pyx_t_9 = (((__pyx_v_self->_states[__pyx_v_admx_idx])[__pyx_v_snp_idx])[__pyx_v_node_idx]).out_trans_num;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
          __pyx_v_nxt_node_idx = __pyx_t_10;

          /* "LDModel.pyx":608
 *                 for node_idx in range(self._layer_state_nums[admx_idx][snp_idx]):
 *                     for nxt_node_idx in range(self._states[admx_idx][snp_idx][node_idx].out_trans_num):
 *                         self._trans_file.write(str(snp_idx) + " " +             # <<<<<<<<<<<<<<
 *                                   str(admx_idx) + " " +
 *                                   str(node_idx) + " " +
 */
          __pyx_t_2 = PyObject_GetAttr(__pyx_v_self->_trans_file, __pyx_n_s__write); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_2);

          /* "LDModel.pyx":609
 *                     for nxt_node_idx in range(self._states[admx_idx][snp_idx][node_idx].out_trans_num):
 *                         self._trans_file.write(str(snp_idx) + " " +
 *                                   str(admx_idx) + " " +             # <<<<<<<<<<<<<<
 *                                   str(node_idx) + " " +
 *                                   str(nxt_node_idx) + " " +
 */
          __pyx_t_1 = PyInt_FromLong(__pyx_v_snp_idx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_11), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(((PyObject *)__pyx_t_11)); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyInt_FromLong(__pyx_v_admx_idx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __pyx_t_12 = PyNumber_Add(__pyx_t_11, __pyx_t_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_Add(__pyx_t_12, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;

          /* "LDModel.pyx":610
 *                         self._trans_file.write(str(snp_idx) + " " +
 *                                   str(admx_idx) + " " +
 *                                   str(node_idx) + " " +             # <<<<<<<<<<<<<<
 *                                   str(nxt_node_idx) + " " +
 *                                   str(self._trans[admx_idx][snp_idx][node_idx][nxt_node_idx]) + "\n")
 */
          __pyx_t_12 = PyInt_FromLong(__pyx_v_node_idx); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __pyx_t_11 = PyTuple_New(1); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          PyTuple_SET_ITEM(__pyx_t_11, 0, __pyx_t_12);
          __Pyx_GIVEREF(__pyx_t_12);
          __pyx_t_12 = 0;
          __pyx_t_12 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_11), NULL); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(((PyObject *)__pyx_t_11)); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_t_1, __pyx_t_12); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 609; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_12 = PyNumber_Add(__pyx_t_11, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;

          /* "LDModel.pyx":611
 *                                   str(admx_idx) + " " +
 *                                   str(node_idx) + " " +
 *                                   str(nxt_node_idx) + " " +             # <<<<<<<<<<<<<<
 *                                   str(self._trans[admx_idx][snp_idx][node_idx][nxt_node_idx]) + "\n")
 * 
 */
          __pyx_t_11 = PyInt_FromLong(__pyx_v_nxt_node_idx); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_11);
          __Pyx_GIVEREF(__pyx_t_11);
          __pyx_t_11 = 0;
          __pyx_t_11 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_Add(__pyx_t_12, __pyx_t_11); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 610; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __pyx_t_11 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_11);
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

          /* "LDModel.pyx":612
 *                                   str(node_idx) + " " +
 *                                   str(nxt_node_idx) + " " +
 *                                   str(self._trans[admx_idx][snp_idx][node_idx][nxt_node_idx]) + "\n")             # <<<<<<<<<<<<<<
 * 
 *     cpdef generate_random_hap(self, int anc):
 */
          __pyx_t_1 = PyFloat_FromDouble(((((__pyx_v_self->_trans[__pyx_v_admx_idx])[__pyx_v_snp_idx])[__pyx_v_node_idx])[__pyx_v_nxt_node_idx])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __pyx_t_12 = PyNumber_Add(__pyx_t_11, __pyx_t_1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 611; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          __Pyx_DECREF(__pyx_t_11); __pyx_t_11 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
          __pyx_t_1 = PyNumber_Add(__pyx_t_12, ((PyObject *)__pyx_kp_s_1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 612; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_12); __pyx_t_12 = 0;
          __pyx_t_12 = PyTuple_New(1); if (unlikely(!__pyx_t_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_12);
          PyTuple_SET_ITEM(__pyx_t_12, 0, __pyx_t_1);
          __Pyx_GIVEREF(__pyx_t_1);
          __pyx_t_1 = 0;
          __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_12), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
          __Pyx_DECREF(((PyObject *)__pyx_t_12)); __pyx_t_12 = 0;
          __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        }
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_11);
  __Pyx_XDECREF(__pyx_t_12);
  __Pyx_AddTraceback("LDModel.LDModel.print_transitions", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":614
 *                                   str(self._trans[admx_idx][snp_idx][node_idx][nxt_node_idx]) + "\n")
 * 
 *     cpdef generate_random_hap(self, int anc):             # <<<<<<<<<<<<<<
 *         hap = ""
 *         p = [self._pi[anc][0][i] for i in xrange(self._layer_state_nums[anc][0])]
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_43generate_random_hap(PyObject *__pyx_v_self, PyObject *__pyx_arg_anc); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_generate_random_hap(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_anc, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_hap = NULL;
  PyObject *__pyx_v_p = NULL;
  int __pyx_v_next_node;
  int __pyx_v_layer;
  PyObject *__pyx_v_t = NULL;
  int __pyx_v_i;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("generate_random_hap", 0);
  __Pyx_TraceCall("generate_random_hap", __pyx_f[0], 614);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__generate_random_hap); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_43generate_random_hap)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_anc); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":615
 * 
 *     cpdef generate_random_hap(self, int anc):
 *         hap = ""             # <<<<<<<<<<<<<<
 *         p = [self._pi[anc][0][i] for i in xrange(self._layer_state_nums[anc][0])]
 *         #print "layer state nums: " + str(self._layer_state_nums[anc][0])
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_hap = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":616
 *     cpdef generate_random_hap(self, int anc):
 *         hap = ""
 *         p = [self._pi[anc][0][i] for i in xrange(self._layer_state_nums[anc][0])]             # <<<<<<<<<<<<<<
 *         #print "layer state nums: " + str(self._layer_state_nums[anc][0])
 *         #print "pi: " + str(p)
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_4 = ((__pyx_v_self->_layer_state_nums[__pyx_v_anc])[0]);
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_i = __pyx_t_5;
    __pyx_t_2 = PyFloat_FromDouble((((__pyx_v_self->_pi[__pyx_v_anc])[0])[__pyx_v_i])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    if (unlikely(__Pyx_PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_2))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 616; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  }
  __pyx_t_2 = ((PyObject *)__pyx_t_1);
  __Pyx_INCREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_v_p = ((PyObject*)__pyx_t_2);
  __pyx_t_2 = 0;

  /* "LDModel.pyx":619
 *         #print "layer state nums: " + str(self._layer_state_nums[anc][0])
 *         #print "pi: " + str(p)
 *         cdef int next_node = np.array(p).cumsum().searchsorted(np.random.sample(1))[0]             # <<<<<<<<<<<<<<
 *         #print "next node: " + str(next_node)
 *         for layer in range(self._snp_num):
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_v_p));
  PyTuple_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_v_p));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_p));
  __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__cumsum); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__searchsorted); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__random); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__sample); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_k_tuple_45), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
  __pyx_t_3 = __Pyx_GetItemInt(__pyx_t_1, 0, sizeof(long), PyInt_FromLong); if (!__pyx_t_3) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_3);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_t_3); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
  __pyx_v_next_node = __pyx_t_4;

  /* "LDModel.pyx":621
 *         cdef int next_node = np.array(p).cumsum().searchsorted(np.random.sample(1))[0]
 *         #print "next node: " + str(next_node)
 *         for layer in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             print "generating haplotype for layer: " + str(layer)
 *             if self._states[anc][layer][next_node].prob_em[0] > 0.5:
 */
  __pyx_t_4 = __pyx_v_self->_snp_num;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_layer = __pyx_t_5;

    /* "LDModel.pyx":622
 *         #print "next node: " + str(next_node)
 *         for layer in range(self._snp_num):
 *             print "generating haplotype for layer: " + str(layer)             # <<<<<<<<<<<<<<
 *             if self._states[anc][layer][next_node].prob_em[0] > 0.5:
 *                 hap += '0'
 */
    __pyx_t_3 = PyInt_FromLong(__pyx_v_layer); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_3);
    __Pyx_GIVEREF(__pyx_t_3);
    __pyx_t_3 = 0;
    __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_Add(((PyObject *)__pyx_kp_s_46), __pyx_t_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    if (__Pyx_PrintOne(0, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 622; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

    /* "LDModel.pyx":623
 *         for layer in range(self._snp_num):
 *             print "generating haplotype for layer: " + str(layer)
 *             if self._states[anc][layer][next_node].prob_em[0] > 0.5:             # <<<<<<<<<<<<<<
 *                 hap += '0'
 *             else:
 */
    __pyx_t_6 = (((((__pyx_v_self->_states[__pyx_v_anc])[__pyx_v_layer])[__pyx_v_next_node]).prob_em[0]) > 0.5);
    if (__pyx_t_6) {

      /* "LDModel.pyx":624
 *             print "generating haplotype for layer: " + str(layer)
 *             if self._states[anc][layer][next_node].prob_em[0] > 0.5:
 *                 hap += '0'             # <<<<<<<<<<<<<<
 *             else:
 *                 hap += '1'
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_hap, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 624; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_hap);
      __pyx_v_hap = __pyx_t_1;
      __pyx_t_1 = 0;
      goto __pyx_L7;
    }
    /*else*/ {

      /* "LDModel.pyx":626
 *                 hap += '0'
 *             else:
 *                 hap += '1'             # <<<<<<<<<<<<<<
 *             if layer < self._snp_num - 1:
 *                 #print "states in layer: " + str(layer)
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_hap, ((PyObject *)__pyx_kp_s__1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_hap);
      __pyx_v_hap = __pyx_t_1;
      __pyx_t_1 = 0;
    }
    __pyx_L7:;

    /* "LDModel.pyx":627
 *             else:
 *                 hap += '1'
 *             if layer < self._snp_num - 1:             # <<<<<<<<<<<<<<
 *                 #print "states in layer: " + str(layer)
 *                 t = [self._trans[anc][layer][next_node][i] for i in xrange(self._states[anc][layer][next_node].out_trans_num)]
 */
    __pyx_t_6 = (__pyx_v_layer < (__pyx_v_self->_snp_num - 1));
    if (__pyx_t_6) {

      /* "LDModel.pyx":629
 *             if layer < self._snp_num - 1:
 *                 #print "states in layer: " + str(layer)
 *                 t = [self._trans[anc][layer][next_node][i] for i in xrange(self._states[anc][layer][next_node].out_trans_num)]             # <<<<<<<<<<<<<<
 *                 #print "transition probs: " + str(t)
 *                 next_node = self._trans_idx[anc][layer][next_node][np.array(t).cumsum().searchsorted(np.random.sample(1))]
 */
      __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_7 = (((__pyx_v_self->_states[__pyx_v_anc])[__pyx_v_layer])[__pyx_v_next_node]).out_trans_num;
      for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
        __pyx_v_i = __pyx_t_8;
        __pyx_t_3 = PyFloat_FromDouble(((((__pyx_v_self->_trans[__pyx_v_anc])[__pyx_v_layer])[__pyx_v_next_node])[__pyx_v_i])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        if (unlikely(__Pyx_PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_3))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 629; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      }
      __pyx_t_3 = ((PyObject *)__pyx_t_1);
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __Pyx_XDECREF(((PyObject *)__pyx_v_t));
      __pyx_v_t = ((PyObject*)__pyx_t_3);
      __pyx_t_3 = 0;

      /* "LDModel.pyx":631
 *                 t = [self._trans[anc][layer][next_node][i] for i in xrange(self._states[anc][layer][next_node].out_trans_num)]
 *                 #print "transition probs: " + str(t)
 *                 next_node = self._trans_idx[anc][layer][next_node][np.array(t).cumsum().searchsorted(np.random.sample(1))]             # <<<<<<<<<<<<<<
 *                 #print "next node: " + str(next_node)
 *         return hap
 */
      __pyx_t_3 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_1 = PyObject_GetAttr(__pyx_t_3, __pyx_n_s__array); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_INCREF(((PyObject *)__pyx_v_t));
      PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_v_t));
      __Pyx_GIVEREF(((PyObject *)__pyx_v_t));
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__cumsum); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_3 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__searchsorted); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__random); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__sample); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_k_tuple_47), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(__pyx_t_3, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_v_next_node = ((((__pyx_v_self->_trans_idx[__pyx_v_anc])[__pyx_v_layer])[__pyx_v_next_node])[__pyx_t_9]);
      goto __pyx_L8;
    }
    __pyx_L8:;
  }

  /* "LDModel.pyx":633
 *                 next_node = self._trans_idx[anc][layer][next_node][np.array(t).cumsum().searchsorted(np.random.sample(1))]
 *                 #print "next node: " + str(next_node)
 *         return hap             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_ibd_prior(self):
 */
  __Pyx_XDECREF(__pyx_r);
  __Pyx_INCREF(__pyx_v_hap);
  __pyx_r = __pyx_v_hap;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.generate_random_hap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_hap);
  __Pyx_XDECREF(__pyx_v_p);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_43generate_random_hap(PyObject *__pyx_v_self, PyObject *__pyx_arg_anc); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_43generate_random_hap(PyObject *__pyx_v_self, PyObject *__pyx_arg_anc) {
  int __pyx_v_anc;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("generate_random_hap (wrapper)", 0);
  assert(__pyx_arg_anc); {
    __pyx_v_anc = __Pyx_PyInt_AsInt(__pyx_arg_anc); if (unlikely((__pyx_v_anc == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.generate_random_hap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_42generate_random_hap(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_anc));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":614
 *                                   str(self._trans[admx_idx][snp_idx][node_idx][nxt_node_idx]) + "\n")
 * 
 *     cpdef generate_random_hap(self, int anc):             # <<<<<<<<<<<<<<
 *         hap = ""
 *         p = [self._pi[anc][0][i] for i in xrange(self._layer_state_nums[anc][0])]
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_42generate_random_hap(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_anc) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("generate_random_hap", 0);
  __Pyx_TraceCall("generate_random_hap", __pyx_f[0], 614);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->generate_random_hap(__pyx_v_self, __pyx_v_anc, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.generate_random_hap", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":635
 *         return hap
 * 
 *     cpdef calc_ibd_prior(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef double d
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_45calc_ibd_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_ibd_prior(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  double __pyx_v_d;
  int __pyx_v_anc;
  long __pyx_v_j;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  long __pyx_t_7;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_ibd_prior", 0);
  __Pyx_TraceCall("calc_ibd_prior", __pyx_f[0], 635);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__calc_ibd_prior); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_45calc_ibd_prior)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":638
 *         cdef int win_idx
 *         cdef double d
 *         self._s = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *         for anc in range(self.K):
 *             self._s[anc] = <double ***> malloc((self.get_num_windows()) * sizeof(double ***))
 */
  __pyx_v_self->_s = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

  /* "LDModel.pyx":639
 *         cdef double d
 *         self._s = <double ****> malloc(self.K * sizeof(double ***))
 *         for anc in range(self.K):             # <<<<<<<<<<<<<<
 *             self._s[anc] = <double ***> malloc((self.get_num_windows()) * sizeof(double ***))
 *             for win_idx in range(self.get_num_windows()):
 */
  __pyx_t_3 = __pyx_v_self->K;
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_anc = __pyx_t_4;

    /* "LDModel.pyx":640
 *         self._s = <double ****> malloc(self.K * sizeof(double ***))
 *         for anc in range(self.K):
 *             self._s[anc] = <double ***> malloc((self.get_num_windows()) * sizeof(double ***))             # <<<<<<<<<<<<<<
 *             for win_idx in range(self.get_num_windows()):
 *                 self._s[anc][win_idx] = <double **> malloc(2 * sizeof(double *))
 */
    (__pyx_v_self->_s[__pyx_v_anc]) = ((double ***)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double ***)))));

    /* "LDModel.pyx":641
 *         for anc in range(self.K):
 *             self._s[anc] = <double ***> malloc((self.get_num_windows()) * sizeof(double ***))
 *             for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *                 self._s[anc][win_idx] = <double **> malloc(2 * sizeof(double *))
 *                 for j in range(2):
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_win_idx = __pyx_t_6;

      /* "LDModel.pyx":642
 *             self._s[anc] = <double ***> malloc((self.get_num_windows()) * sizeof(double ***))
 *             for win_idx in range(self.get_num_windows()):
 *                 self._s[anc][win_idx] = <double **> malloc(2 * sizeof(double *))             # <<<<<<<<<<<<<<
 *                 for j in range(2):
 *                     self._s[anc][win_idx][j] = <double *> malloc(2 * sizeof(double))
 */
      ((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx]) = ((double **)malloc((2 * (sizeof(double *)))));

      /* "LDModel.pyx":643
 *             for win_idx in range(self.get_num_windows()):
 *                 self._s[anc][win_idx] = <double **> malloc(2 * sizeof(double *))
 *                 for j in range(2):             # <<<<<<<<<<<<<<
 *                     self._s[anc][win_idx][j] = <double *> malloc(2 * sizeof(double))
 * 
 */
      for (__pyx_t_7 = 0; __pyx_t_7 < 2; __pyx_t_7+=1) {
        __pyx_v_j = __pyx_t_7;

        /* "LDModel.pyx":644
 *                 self._s[anc][win_idx] = <double **> malloc(2 * sizeof(double *))
 *                 for j in range(2):
 *                     self._s[anc][win_idx][j] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 * 
 *             for win_idx in range(self.get_num_windows()):
 */
        (((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[__pyx_v_j]) = ((double *)malloc((2 * (sizeof(double)))));
      }
    }

    /* "LDModel.pyx":646
 *                     self._s[anc][win_idx][j] = <double *> malloc(2 * sizeof(double))
 * 
 *             for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *                 d = self._genetic_map[self.end_snp(win_idx)].genetic_dist - self._genetic_map[self.start_snp(win_idx)].genetic_dist
 *                 self._s[anc][win_idx][1][1] = exp(-self._t_1_0[anc] * d)
 */
    __pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_win_idx = __pyx_t_6;

      /* "LDModel.pyx":647
 * 
 *             for win_idx in range(self.get_num_windows()):
 *                 d = self._genetic_map[self.end_snp(win_idx)].genetic_dist - self._genetic_map[self.start_snp(win_idx)].genetic_dist             # <<<<<<<<<<<<<<
 *                 self._s[anc][win_idx][1][1] = exp(-self._t_1_0[anc] * d)
 *                 self._s[anc][win_idx][0][0] = exp(-self._t_0_1[anc] * d)
 */
      __pyx_v_d = ((__pyx_v_self->_genetic_map[((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx)]).genetic_dist - (__pyx_v_self->_genetic_map[((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx)]).genetic_dist);

      /* "LDModel.pyx":648
 *             for win_idx in range(self.get_num_windows()):
 *                 d = self._genetic_map[self.end_snp(win_idx)].genetic_dist - self._genetic_map[self.start_snp(win_idx)].genetic_dist
 *                 self._s[anc][win_idx][1][1] = exp(-self._t_1_0[anc] * d)             # <<<<<<<<<<<<<<
 *                 self._s[anc][win_idx][0][0] = exp(-self._t_0_1[anc] * d)
 *                 self._s[anc][win_idx][1][0] = 1 - self._s[anc][win_idx][1][1]
 */
      ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[1])[1]) = exp(((-(__pyx_v_self->_t_1_0[__pyx_v_anc])) * __pyx_v_d));

      /* "LDModel.pyx":649
 *                 d = self._genetic_map[self.end_snp(win_idx)].genetic_dist - self._genetic_map[self.start_snp(win_idx)].genetic_dist
 *                 self._s[anc][win_idx][1][1] = exp(-self._t_1_0[anc] * d)
 *                 self._s[anc][win_idx][0][0] = exp(-self._t_0_1[anc] * d)             # <<<<<<<<<<<<<<
 *                 self._s[anc][win_idx][1][0] = 1 - self._s[anc][win_idx][1][1]
 *                 self._s[anc][win_idx][0][1] = 1 - self._s[anc][win_idx][0][0]
 */
      ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[0])[0]) = exp(((-(__pyx_v_self->_t_0_1[__pyx_v_anc])) * __pyx_v_d));

      /* "LDModel.pyx":650
 *                 self._s[anc][win_idx][1][1] = exp(-self._t_1_0[anc] * d)
 *                 self._s[anc][win_idx][0][0] = exp(-self._t_0_1[anc] * d)
 *                 self._s[anc][win_idx][1][0] = 1 - self._s[anc][win_idx][1][1]             # <<<<<<<<<<<<<<
 *                 self._s[anc][win_idx][0][1] = 1 - self._s[anc][win_idx][0][0]
 *                 #for i in range(2):
 */
      ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[1])[0]) = (1.0 - ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[1])[1]));

      /* "LDModel.pyx":651
 *                 self._s[anc][win_idx][0][0] = exp(-self._t_0_1[anc] * d)
 *                 self._s[anc][win_idx][1][0] = 1 - self._s[anc][win_idx][1][1]
 *                 self._s[anc][win_idx][0][1] = 1 - self._s[anc][win_idx][0][0]             # <<<<<<<<<<<<<<
 *                 #for i in range(2):
 *                 #    for j in range(2):
 */
      ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[0])[1]) = (1.0 - ((((__pyx_v_self->_s[__pyx_v_anc])[__pyx_v_win_idx])[0])[0]));
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.calc_ibd_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_45calc_ibd_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_45calc_ibd_prior(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_ibd_prior (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_44calc_ibd_prior(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":635
 *         return hap
 * 
 *     cpdef calc_ibd_prior(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef double d
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_44calc_ibd_prior(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_ibd_prior", 0);
  __Pyx_TraceCall("calc_ibd_prior", __pyx_f[0], 635);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_ibd_prior(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 635; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_ibd_prior", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":661
 *         #self._s[self.get_num_windows()-1][1][1] = 1
 * 
 *     cpdef calc_anc_trans(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_47calc_anc_trans(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_anc_trans(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_nxt_admx_idx1;
  int __pyx_v_nxt_admx_idx2;
  int __pyx_v_nxt_admx_idx3;
  int __pyx_v_nxt_admx_idx4;
  double *__pyx_v_sum_recomb;
  PyObject *__pyx_v_snp_idx = NULL;
  PyObject *__pyx_v_sum = NULL;
  PyObject *__pyx_v_scale = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  Py_ssize_t __pyx_t_5;
  PyObject *(*__pyx_t_6)(PyObject *);
  PyObject *__pyx_t_7 = NULL;
  Py_ssize_t __pyx_t_8;
  Py_ssize_t __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  double __pyx_t_27;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_anc_trans", 0);
  __Pyx_TraceCall("calc_anc_trans", __pyx_f[0], 661);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__calc_anc_trans); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_47calc_anc_trans)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":673
 * 
 *         cdef double *sum_recomb
 *         sum_recomb = <double *> malloc((self.get_num_windows()) * sizeof(double))             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             sum_recomb[win_idx] = 0
 */
  __pyx_v_sum_recomb = ((double *)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double)))));

  /* "LDModel.pyx":674
 *         cdef double *sum_recomb
 *         sum_recomb = <double *> malloc((self.get_num_windows()) * sizeof(double))
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             sum_recomb[win_idx] = 0
 *         for snp_idx in range(self._snp_num):
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":675
 *         sum_recomb = <double *> malloc((self.get_num_windows()) * sizeof(double))
 *         for win_idx in range(self.get_num_windows()):
 *             sum_recomb[win_idx] = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self._snp_num):
 *             sum_recomb[int(snp_idx/self._win_size)] += self._genetic_map[snp_idx].recomb_rate #* 1e-6
 */
    (__pyx_v_sum_recomb[__pyx_v_win_idx]) = 0.0;
  }

  /* "LDModel.pyx":676
 *         for win_idx in range(self.get_num_windows()):
 *             sum_recomb[win_idx] = 0
 *         for snp_idx in range(self._snp_num):             # <<<<<<<<<<<<<<
 *             sum_recomb[int(snp_idx/self._win_size)] += self._genetic_map[snp_idx].recomb_rate #* 1e-6
 * 
 */
  __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_snp_num); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_5 = 0;
    __pyx_t_6 = NULL;
  } else {
    __pyx_t_5 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_6 = Py_TYPE(__pyx_t_2)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (!__pyx_t_6 && PyList_CheckExact(__pyx_t_2)) {
      if (__pyx_t_5 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_6 && PyTuple_CheckExact(__pyx_t_2)) {
      if (__pyx_t_5 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_5); __Pyx_INCREF(__pyx_t_1); __pyx_t_5++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_5); __pyx_t_5++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_1 = __pyx_t_6(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 676; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF(__pyx_v_snp_idx);
    __pyx_v_snp_idx = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":677
 *             sum_recomb[win_idx] = 0
 *         for snp_idx in range(self._snp_num):
 *             sum_recomb[int(snp_idx/self._win_size)] += self._genetic_map[snp_idx].recomb_rate #* 1e-6             # <<<<<<<<<<<<<<
 * 
 *         self._anc_trans = <double *********> malloc((self.get_num_windows()) * sizeof(double ********))
 */
    __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_7 = __Pyx_PyNumber_Divide(__pyx_v_snp_idx, __pyx_t_1); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_7);
    __Pyx_GIVEREF(__pyx_t_7);
    __pyx_t_7 = 0;
    __pyx_t_7 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_8 = __Pyx_PyIndex_AsSsize_t(__pyx_t_7); if (unlikely((__pyx_t_8 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    __pyx_t_9 = __Pyx_PyIndex_AsSsize_t(__pyx_v_snp_idx); if (unlikely((__pyx_t_9 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 677; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    (__pyx_v_sum_recomb[__pyx_t_8]) = ((__pyx_v_sum_recomb[__pyx_t_8]) + (__pyx_v_self->_genetic_map[__pyx_t_9]).recomb_rate);
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":679
 *             sum_recomb[int(snp_idx/self._win_size)] += self._genetic_map[snp_idx].recomb_rate #* 1e-6
 * 
 *         self._anc_trans = <double *********> malloc((self.get_num_windows()) * sizeof(double ********))             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             sum = 0
 */
  __pyx_v_self->_anc_trans = ((double *********)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double ********)))));

  /* "LDModel.pyx":680
 * 
 *         self._anc_trans = <double *********> malloc((self.get_num_windows()) * sizeof(double ********))
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             sum = 0
 *             #print "calculating ancestry transitions for window: " + str(win_idx)
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":681
 *         self._anc_trans = <double *********> malloc((self.get_num_windows()) * sizeof(double ********))
 *         for win_idx in range(self.get_num_windows()):
 *             sum = 0             # <<<<<<<<<<<<<<
 *             #print "calculating ancestry transitions for window: " + str(win_idx)
 *             self._anc_trans[win_idx] = <double ********> malloc(self.K * sizeof(double *******))
 */
    __Pyx_INCREF(__pyx_int_0);
    __Pyx_XDECREF(__pyx_v_sum);
    __pyx_v_sum = __pyx_int_0;

    /* "LDModel.pyx":683
 *             sum = 0
 *             #print "calculating ancestry transitions for window: " + str(win_idx)
 *             self._anc_trans[win_idx] = <double ********> malloc(self.K * sizeof(double *******))             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 self._anc_trans[win_idx][admx_idx1] = <double *******> malloc(self.K * sizeof(double ******))
 */
    (__pyx_v_self->_anc_trans[__pyx_v_win_idx]) = ((double ********)malloc((__pyx_v_self->K * (sizeof(double *******)))));

    /* "LDModel.pyx":684
 *             #print "calculating ancestry transitions for window: " + str(win_idx)
 *             self._anc_trans[win_idx] = <double ********> malloc(self.K * sizeof(double *******))
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 self._anc_trans[win_idx][admx_idx1] = <double *******> malloc(self.K * sizeof(double ******))
 *                 for admx_idx2 in range(self.K):
 */
    __pyx_t_10 = __pyx_v_self->K;
    for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
      __pyx_v_admx_idx1 = __pyx_t_11;

      /* "LDModel.pyx":685
 *             self._anc_trans[win_idx] = <double ********> malloc(self.K * sizeof(double *******))
 *             for admx_idx1 in range(self.K):
 *                 self._anc_trans[win_idx][admx_idx1] = <double *******> malloc(self.K * sizeof(double ******))             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     self._anc_trans[win_idx][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double *****))
 */
      ((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1]) = ((double *******)malloc((__pyx_v_self->K * (sizeof(double ******)))));

      /* "LDModel.pyx":686
 *             for admx_idx1 in range(self.K):
 *                 self._anc_trans[win_idx][admx_idx1] = <double *******> malloc(self.K * sizeof(double ******))
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     self._anc_trans[win_idx][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double *****))
 *                     for admx_idx3 in range(self.K):
 */
      __pyx_t_12 = __pyx_v_self->K;
      for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
        __pyx_v_admx_idx2 = __pyx_t_13;

        /* "LDModel.pyx":687
 *                 self._anc_trans[win_idx][admx_idx1] = <double *******> malloc(self.K * sizeof(double ******))
 *                 for admx_idx2 in range(self.K):
 *                     self._anc_trans[win_idx][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double *****))             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double ****))
 */
        (((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double ******)malloc((__pyx_v_self->K * (sizeof(double *****)))));

        /* "LDModel.pyx":688
 *                 for admx_idx2 in range(self.K):
 *                     self._anc_trans[win_idx][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double *****))
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double ****))
 *                         for admx_idx4 in range(self.K):
 */
        __pyx_t_14 = __pyx_v_self->K;
        for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
          __pyx_v_admx_idx3 = __pyx_t_15;

          /* "LDModel.pyx":689
 *                     self._anc_trans[win_idx][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double *****))
 *                     for admx_idx3 in range(self.K):
 *                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double ****))             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc(self.K * sizeof(double ***))
 */
          ((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double *****)malloc((__pyx_v_self->K * (sizeof(double ****)))));

          /* "LDModel.pyx":690
 *                     for admx_idx3 in range(self.K):
 *                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double ****))
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc(self.K * sizeof(double ***))
 *                             for nxt_admx_idx1 in range(self.K):
 */
          __pyx_t_16 = __pyx_v_self->K;
          for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
            __pyx_v_admx_idx4 = __pyx_t_17;

            /* "LDModel.pyx":691
 *                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double ****))
 *                         for admx_idx4 in range(self.K):
 *                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1] = <double ***> malloc(self.K * sizeof(double **))
 */
            (((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

            /* "LDModel.pyx":692
 *                         for admx_idx4 in range(self.K):
 *                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc(self.K * sizeof(double ***))
 *                             for nxt_admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1] = <double ***> malloc(self.K * sizeof(double **))
 *                                 for nxt_admx_idx2 in range(self.K):
 */
            __pyx_t_18 = __pyx_v_self->K;
            for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
              __pyx_v_nxt_admx_idx1 = __pyx_t_19;

              /* "LDModel.pyx":693
 *                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc(self.K * sizeof(double ***))
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1] = <double ***> malloc(self.K * sizeof(double **))             # <<<<<<<<<<<<<<
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2] = <double **> malloc(self.K * sizeof(double *))
 */
              ((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1]) = ((double ***)malloc((__pyx_v_self->K * (sizeof(double **)))));

              /* "LDModel.pyx":694
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1] = <double ***> malloc(self.K * sizeof(double **))
 *                                 for nxt_admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                                     self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2] = <double **> malloc(self.K * sizeof(double *))
 *                                     for nxt_admx_idx3 in range(self.K):
 */
              __pyx_t_20 = __pyx_v_self->K;
              for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                __pyx_v_nxt_admx_idx2 = __pyx_t_21;

                /* "LDModel.pyx":695
 *                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1] = <double ***> malloc(self.K * sizeof(double **))
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2] = <double **> malloc(self.K * sizeof(double *))             # <<<<<<<<<<<<<<
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3] = <double *> malloc(self.K * sizeof(double))
 */
                (((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2]) = ((double **)malloc((__pyx_v_self->K * (sizeof(double *)))));

                /* "LDModel.pyx":696
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2] = <double **> malloc(self.K * sizeof(double *))
 *                                     for nxt_admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3] = <double *> malloc(self.K * sizeof(double))
 *                                         for nxt_admx_idx4 in range(self.K):
 */
                __pyx_t_22 = __pyx_v_self->K;
                for (__pyx_t_23 = 0; __pyx_t_23 < __pyx_t_22; __pyx_t_23+=1) {
                  __pyx_v_nxt_admx_idx3 = __pyx_t_23;

                  /* "LDModel.pyx":697
 *                                     self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2] = <double **> malloc(self.K * sizeof(double *))
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3] = <double *> malloc(self.K * sizeof(double))             # <<<<<<<<<<<<<<
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             if sum_recomb[win_idx] > 0:
 */
                  ((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3]) = ((double *)malloc((__pyx_v_self->K * (sizeof(double)))));

                  /* "LDModel.pyx":698
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3] = <double *> malloc(self.K * sizeof(double))
 *                                         for nxt_admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                             if sum_recomb[win_idx] > 0:
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = (self.g - 1) * sum_recomb[win_idx]
 */
                  __pyx_t_24 = __pyx_v_self->K;
                  for (__pyx_t_25 = 0; __pyx_t_25 < __pyx_t_24; __pyx_t_25+=1) {
                    __pyx_v_nxt_admx_idx4 = __pyx_t_25;

                    /* "LDModel.pyx":699
 *                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3] = <double *> malloc(self.K * sizeof(double))
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             if sum_recomb[win_idx] > 0:             # <<<<<<<<<<<<<<
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = (self.g - 1) * sum_recomb[win_idx]
 *                                             else:
 */
                    __pyx_t_26 = ((__pyx_v_sum_recomb[__pyx_v_win_idx]) > 0.0);
                    if (__pyx_t_26) {

                      /* "LDModel.pyx":700
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             if sum_recomb[win_idx] > 0:
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = (self.g - 1) * sum_recomb[win_idx]             # <<<<<<<<<<<<<<
 *                                             else:
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 1
 */
                      (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4]) = ((__pyx_v_self->g - 1) * (__pyx_v_sum_recomb[__pyx_v_win_idx]));
                      goto __pyx_L25;
                    }
                    /*else*/ {

                      /* "LDModel.pyx":702
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = (self.g - 1) * sum_recomb[win_idx]
 *                                             else:
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 1             # <<<<<<<<<<<<<<
 *                                             sum += self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]
 *             scale = 1.0
 */
                      (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4]) = 1.0;
                    }
                    __pyx_L25:;

                    /* "LDModel.pyx":703
 *                                             else:
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 1
 *                                             sum += self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]             # <<<<<<<<<<<<<<
 *             scale = 1.0
 *             if sum == 0:
 */
                    __pyx_t_2 = PyFloat_FromDouble((((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_2);
                    __pyx_t_7 = PyNumber_InPlaceAdd(__pyx_v_sum, __pyx_t_2); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_7);
                    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    __Pyx_DECREF(__pyx_v_sum);
                    __pyx_v_sum = __pyx_t_7;
                    __pyx_t_7 = 0;
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":704
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 1
 *                                             sum += self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]
 *             scale = 1.0             # <<<<<<<<<<<<<<
 *             if sum == 0:
 *                 scale = 1.0
 */
    __pyx_t_7 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_7);
    __Pyx_XDECREF(__pyx_v_scale);
    __pyx_v_scale = __pyx_t_7;
    __pyx_t_7 = 0;

    /* "LDModel.pyx":705
 *                                             sum += self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]
 *             scale = 1.0
 *             if sum == 0:             # <<<<<<<<<<<<<<
 *                 scale = 1.0
 *             else:
 */
    __pyx_t_7 = PyObject_RichCompare(__pyx_v_sum, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_7); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_26 = __Pyx_PyObject_IsTrue(__pyx_t_7); if (unlikely(__pyx_t_26 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
    if (__pyx_t_26) {

      /* "LDModel.pyx":706
 *             scale = 1.0
 *             if sum == 0:
 *                 scale = 1.0             # <<<<<<<<<<<<<<
 *             else:
 *                 scale = 1.0/sum
 */
      __pyx_t_7 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __Pyx_DECREF(__pyx_v_scale);
      __pyx_v_scale = __pyx_t_7;
      __pyx_t_7 = 0;
      goto __pyx_L26;
    }
    /*else*/ {

      /* "LDModel.pyx":708
 *                 scale = 1.0
 *             else:
 *                 scale = 1.0/sum             # <<<<<<<<<<<<<<
 *                 if not c_isfinite(scale):
 *                     scale = 1.0
 */
      __pyx_t_7 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_7);
      __pyx_t_2 = __Pyx_PyNumber_Divide(__pyx_t_7, __pyx_v_sum); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 708; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;
      __Pyx_DECREF(__pyx_v_scale);
      __pyx_v_scale = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":709
 *             else:
 *                 scale = 1.0/sum
 *                 if not c_isfinite(scale):             # <<<<<<<<<<<<<<
 *                     scale = 1.0
 *             for admx_idx1 in range(self.K):
 */
      __pyx_t_27 = __pyx_PyFloat_AsDouble(__pyx_v_scale); if (unlikely((__pyx_t_27 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 709; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_26 = (!c_isfinite(__pyx_t_27));
      if (__pyx_t_26) {

        /* "LDModel.pyx":710
 *                 scale = 1.0/sum
 *                 if not c_isfinite(scale):
 *                     scale = 1.0             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
        __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 710; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_v_scale);
        __pyx_v_scale = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L27;
      }
      __pyx_L27:;
    }
    __pyx_L26:;

    /* "LDModel.pyx":711
 *                 if not c_isfinite(scale):
 *                     scale = 1.0
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_10 = __pyx_v_self->K;
    for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
      __pyx_v_admx_idx1 = __pyx_t_11;

      /* "LDModel.pyx":712
 *                     scale = 1.0
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_12 = __pyx_v_self->K;
      for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
        __pyx_v_admx_idx2 = __pyx_t_13;

        /* "LDModel.pyx":713
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for nxt_admx_idx1 in range(self.K):
 */
        __pyx_t_14 = __pyx_v_self->K;
        for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
          __pyx_v_admx_idx3 = __pyx_t_15;

          /* "LDModel.pyx":714
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 for nxt_admx_idx2 in range(self.K):
 */
          __pyx_t_16 = __pyx_v_self->K;
          for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
            __pyx_v_admx_idx4 = __pyx_t_17;

            /* "LDModel.pyx":715
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for nxt_admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     for nxt_admx_idx3 in range(self.K):
 */
            __pyx_t_18 = __pyx_v_self->K;
            for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
              __pyx_v_nxt_admx_idx1 = __pyx_t_19;

              /* "LDModel.pyx":716
 *                         for admx_idx4 in range(self.K):
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 for nxt_admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         for nxt_admx_idx4 in range(self.K):
 */
              __pyx_t_20 = __pyx_v_self->K;
              for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                __pyx_v_nxt_admx_idx2 = __pyx_t_21;

                /* "LDModel.pyx":717
 *                             for nxt_admx_idx1 in range(self.K):
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     for nxt_admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = \
 */
                __pyx_t_22 = __pyx_v_self->K;
                for (__pyx_t_23 = 0; __pyx_t_23 < __pyx_t_22; __pyx_t_23+=1) {
                  __pyx_v_nxt_admx_idx3 = __pyx_t_23;

                  /* "LDModel.pyx":718
 *                                 for nxt_admx_idx2 in range(self.K):
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         for nxt_admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = \
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * scale
 */
                  __pyx_t_24 = __pyx_v_self->K;
                  for (__pyx_t_25 = 0; __pyx_t_25 < __pyx_t_24; __pyx_t_25+=1) {
                    __pyx_v_nxt_admx_idx4 = __pyx_t_25;

                    /* "LDModel.pyx":720
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = \
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * scale             # <<<<<<<<<<<<<<
 *                                             if not c_isfinite(self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]):
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 0.0
 */
                    __pyx_t_2 = PyFloat_FromDouble((((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_2);
                    __pyx_t_7 = PyNumber_Multiply(__pyx_t_2, __pyx_v_scale); if (unlikely(!__pyx_t_7)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_7);
                    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    __pyx_t_27 = __pyx_PyFloat_AsDouble(__pyx_t_7); if (unlikely((__pyx_t_27 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_DECREF(__pyx_t_7); __pyx_t_7 = 0;

                    /* "LDModel.pyx":719
 *                                     for nxt_admx_idx3 in range(self.K):
 *                                         for nxt_admx_idx4 in range(self.K):
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = \             # <<<<<<<<<<<<<<
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * scale
 *                                             if not c_isfinite(self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]):
 */
                    (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4]) = __pyx_t_27;

                    /* "LDModel.pyx":721
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = \
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * scale
 *                                             if not c_isfinite(self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]):             # <<<<<<<<<<<<<<
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 0.0
 * 
 */
                    __pyx_t_26 = (!c_isfinite((((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])));
                    if (__pyx_t_26) {

                      /* "LDModel.pyx":722
 *                                             self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * scale
 *                                             if not c_isfinite(self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4]):
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 0.0             # <<<<<<<<<<<<<<
 * 
 *     cpdef emission_prob_ibd_admx_mem_alloc(self, int win_idx):
 */
                      (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4]) = 0.0;
                      goto __pyx_L44;
                    }
                    __pyx_L44:;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_7);
  __Pyx_AddTraceback("LDModel.LDModel.calc_anc_trans", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_snp_idx);
  __Pyx_XDECREF(__pyx_v_sum);
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_47calc_anc_trans(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_47calc_anc_trans(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_anc_trans (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_46calc_anc_trans(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":661
 *         #self._s[self.get_num_windows()-1][1][1] = 1
 * 
 *     cpdef calc_anc_trans(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_46calc_anc_trans(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_anc_trans", 0);
  __Pyx_TraceCall("calc_anc_trans", __pyx_f[0], 661);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_anc_trans(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 661; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_anc_trans", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":724
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 0.0
 * 
 *     cpdef emission_prob_ibd_admx_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_49emission_prob_ibd_admx_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_emission_prob_ibd_admx_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_alloc", 0);
  __Pyx_TraceCall("emission_prob_ibd_admx_mem_alloc", __pyx_f[0], 724);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_48); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_49emission_prob_ibd_admx_mem_alloc)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":737
 *         #cdef double sum
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         self._emission_prob_ibd_admx = <double *********> malloc(self._win_size * sizeof(double ********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":738
 * 
 *         snp_idx_win = 0
 *         self._emission_prob_ibd_admx = <double *********> malloc(self._win_size * sizeof(double ********))             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._emission_prob_ibd_admx[snp_idx_win] = <double ********> malloc(self.K * sizeof(double*******))
 */
  __pyx_v_self->_emission_prob_ibd_admx = ((double *********)malloc((__pyx_v_self->_win_size * (sizeof(double ********)))));

  /* "LDModel.pyx":739
 *         snp_idx_win = 0
 *         self._emission_prob_ibd_admx = <double *********> malloc(self._win_size * sizeof(double ********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             self._emission_prob_ibd_admx[snp_idx_win] = <double ********> malloc(self.K * sizeof(double*******))
 *             for admx_idx1 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":740
 *         self._emission_prob_ibd_admx = <double *********> malloc(self._win_size * sizeof(double ********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._emission_prob_ibd_admx[snp_idx_win] = <double ********> malloc(self.K * sizeof(double*******))             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1] = <double *******> malloc(self.K * sizeof(double******))
 */
    (__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win]) = ((double ********)malloc((__pyx_v_self->K * (sizeof(double *******)))));

    /* "LDModel.pyx":741
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._emission_prob_ibd_admx[snp_idx_win] = <double ********> malloc(self.K * sizeof(double*******))
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1] = <double *******> malloc(self.K * sizeof(double******))
 *                 for admx_idx2 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":742
 *             self._emission_prob_ibd_admx[snp_idx_win] = <double ********> malloc(self.K * sizeof(double*******))
 *             for admx_idx1 in range(self.K):
 *                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1] = <double *******> malloc(self.K * sizeof(double******))             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double*****))
 */
      ((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1]) = ((double *******)malloc((__pyx_v_self->K * (sizeof(double ******)))));

      /* "LDModel.pyx":743
 *             for admx_idx1 in range(self.K):
 *                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1] = <double *******> malloc(self.K * sizeof(double******))
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double*****))
 *                     for admx_idx3 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":744
 *                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1] = <double *******> malloc(self.K * sizeof(double******))
 *                 for admx_idx2 in range(self.K):
 *                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double*****))             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double****))
 */
        (((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double ******)malloc((__pyx_v_self->K * (sizeof(double *****)))));

        /* "LDModel.pyx":745
 *                 for admx_idx2 in range(self.K):
 *                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double*****))
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double****))
 *                         for admx_idx4 in range(self.K):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":746
 *                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double ******> malloc(self.K * sizeof(double*****))
 *                     for admx_idx3 in range(self.K):
 *                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double****))             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double***))
 */
          ((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double *****)malloc((__pyx_v_self->K * (sizeof(double ****)))));

          /* "LDModel.pyx":747
 *                     for admx_idx3 in range(self.K):
 *                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double****))
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double***))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":748
 *                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double *****> malloc(self.K * sizeof(double****))
 *                         for admx_idx4 in range(self.K):
 *                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double***))             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ***> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double**))
 */
            (((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double ****)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]) * (sizeof(double ***)))));

            /* "LDModel.pyx":749
 *                         for admx_idx4 in range(self.K):
 *                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double***))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ***> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double**))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":750
 *                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double ****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double***))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ***> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double**))             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double **> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double*))
 */
              ((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1]) = ((double ***)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]) * (sizeof(double **)))));

              /* "LDModel.pyx":751
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ***> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double**))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double **> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double*))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":752
 *                                 self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ***> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double**))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double **> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double*))             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double *> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double))
 */
                (((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2]) = ((double **)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]) * (sizeof(double *)))));

                /* "LDModel.pyx":753
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double **> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double*))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double *> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double))
 *             snp_idx_win += 1
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":754
 *                                     self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double **> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double*))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double *> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double))             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 * 
 */
                  ((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3]) = ((double *)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]) * (sizeof(double)))));
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":755
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double *> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double))
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef emission_prob_ibd_admx_mem_free(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_49emission_prob_ibd_admx_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_49emission_prob_ibd_admx_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_alloc (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_48emission_prob_ibd_admx_mem_alloc(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":724
 *                                                 self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] = 0.0
 * 
 *     cpdef emission_prob_ibd_admx_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_48emission_prob_ibd_admx_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_alloc", 0);
  __Pyx_TraceCall("emission_prob_ibd_admx_mem_alloc", __pyx_f[0], 724);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->emission_prob_ibd_admx_mem_alloc(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":757
 *             snp_idx_win += 1
 * 
 *     cpdef emission_prob_ibd_admx_mem_free(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_51emission_prob_ibd_admx_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_emission_prob_ibd_admx_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_free", 0);
  __Pyx_TraceCall("emission_prob_ibd_admx_mem_free", __pyx_f[0], 757);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_49); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_51emission_prob_ibd_admx_mem_free)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":770
 *         #cdef double sum
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":771
 * 
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":772
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":773
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":774
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":775
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":776
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":777
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":778
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":779
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])             # <<<<<<<<<<<<<<
 *                                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 */
                  free(((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3]));
                }

                /* "LDModel.pyx":780
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])             # <<<<<<<<<<<<<<
 *                                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 */
                free((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2]));
              }

              /* "LDModel.pyx":781
 *                                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])             # <<<<<<<<<<<<<<
 *                             free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 */
              free(((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1]));
            }

            /* "LDModel.pyx":782
 *                                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])             # <<<<<<<<<<<<<<
 *                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 */
            free((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]));
          }

          /* "LDModel.pyx":783
 *                                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])             # <<<<<<<<<<<<<<
 *                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1])
 */
          free(((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]));
        }

        /* "LDModel.pyx":784
 *                             free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])             # <<<<<<<<<<<<<<
 *                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._emission_prob_ibd_admx[snp_idx_win])
 */
        free((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]));
      }

      /* "LDModel.pyx":785
 *                         free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1])             # <<<<<<<<<<<<<<
 *             free(self._emission_prob_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1
 */
      free(((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1]));
    }

    /* "LDModel.pyx":786
 *                     free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._emission_prob_ibd_admx[snp_idx_win])             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 *         free(self._emission_prob_ibd_admx)
 */
    free((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win]));

    /* "LDModel.pyx":787
 *                 free(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._emission_prob_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 *         free(self._emission_prob_ibd_admx)
 * 
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  /* "LDModel.pyx":788
 *             free(self._emission_prob_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1
 *         free(self._emission_prob_ibd_admx)             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_emission_probs_ibd_admx(self, int win_idx):
 */
  free(__pyx_v_self->_emission_prob_ibd_admx);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_51emission_prob_ibd_admx_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_51emission_prob_ibd_admx_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_free (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_50emission_prob_ibd_admx_mem_free(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":757
 *             snp_idx_win += 1
 * 
 *     cpdef emission_prob_ibd_admx_mem_free(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_50emission_prob_ibd_admx_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("emission_prob_ibd_admx_mem_free", 0);
  __Pyx_TraceCall("emission_prob_ibd_admx_mem_free", __pyx_f[0], 757);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->emission_prob_ibd_admx_mem_free(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 757; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.emission_prob_ibd_admx_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":790
 *         free(self._emission_prob_ibd_admx)
 * 
 *     cpdef calc_emission_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_53calc_emission_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_emission_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  int __pyx_t_30;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_emission_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_emission_probs_ibd_admx", __pyx_f[0], 790);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_50); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_53calc_emission_probs_ibd_admx)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":807
 *         #cdef double sum
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             #print "calculating emission probs in layer: " + str(snp_idx)
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":808
 * 
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             #print "calculating emission probs in layer: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":810
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             #print "calculating emission probs in layer: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":811
 *             #print "calculating emission probs in layer: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":812
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":813
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":814
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":815
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":816
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             #print "admx_idx1: " + str(admx_idx1) + " admx_idx2: " + str(admx_idx2) + " admx_idx3: " + str(admx_idx3) + " admx_idx4: " + str(admx_idx4) + " snp_idx: " + str(snp_idx) + " node_idx1: " + str(node_idx1) + " node_idx2: " + str(node_idx2) + " node_idx3: " + str(node_idx3) + " node_idx4: " + str(node_idx4)
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":817
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             #print "admx_idx1: " + str(admx_idx1) + " admx_idx2: " + str(admx_idx2) + " admx_idx3: " + str(admx_idx3) + " admx_idx4: " + str(admx_idx4) + " snp_idx: " + str(snp_idx) + " node_idx1: " + str(node_idx1) + " node_idx2: " + str(node_idx2) + " node_idx3: " + str(node_idx3) + " node_idx4: " + str(node_idx4)
 *                                             #if chr1[snp_idx] == chr2[snp_idx]:
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":820
 *                                             #print "admx_idx1: " + str(admx_idx1) + " admx_idx2: " + str(admx_idx2) + " admx_idx3: " + str(admx_idx3) + " admx_idx4: " + str(admx_idx4) + " snp_idx: " + str(snp_idx) + " node_idx1: " + str(node_idx1) + " node_idx2: " + str(node_idx2) + " node_idx3: " + str(node_idx3) + " node_idx4: " + str(node_idx4)
 *                                             #if chr1[snp_idx] == chr2[snp_idx]:
 *                                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = \             # <<<<<<<<<<<<<<
 *                                             self._states[admx_idx1][snp_idx][node_idx1].prob_em[self._chr1[snp_idx]] * \
 *                                             self._states[admx_idx2][snp_idx][node_idx2].prob_em[self._chr2[snp_idx]]
 */
                    (((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]) = (((((__pyx_v_self->_states[__pyx_v_admx_idx1])[__pyx_v_snp_idx])[__pyx_v_node_idx1]).prob_em[(__pyx_v_self->_chr1[__pyx_v_snp_idx])]) * ((((__pyx_v_self->_states[__pyx_v_admx_idx2])[__pyx_v_snp_idx])[__pyx_v_node_idx2]).prob_em[(__pyx_v_self->_chr2[__pyx_v_snp_idx])]));

                    /* "LDModel.pyx":829
 * 
 *                                             #if chr3[snp_idx] == chr4[snp_idx]:
 *                                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] *= \             # <<<<<<<<<<<<<<
 *                                             self._states[admx_idx3][snp_idx][node_idx3].prob_em[self._chr3[snp_idx]] * \
 *                                             self._states[admx_idx4][snp_idx][node_idx4].prob_em[self._chr4[snp_idx]]
 */
                    __pyx_t_22 = __pyx_v_snp_idx_win;
                    __pyx_t_23 = __pyx_v_admx_idx1;
                    __pyx_t_24 = __pyx_v_admx_idx2;
                    __pyx_t_25 = __pyx_v_admx_idx3;
                    __pyx_t_26 = __pyx_v_admx_idx4;
                    __pyx_t_27 = __pyx_v_node_idx1;
                    __pyx_t_28 = __pyx_v_node_idx2;
                    __pyx_t_29 = __pyx_v_node_idx3;
                    __pyx_t_30 = __pyx_v_node_idx4;

                    /* "LDModel.pyx":831
 *                                             self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] *= \
 *                                             self._states[admx_idx3][snp_idx][node_idx3].prob_em[self._chr3[snp_idx]] * \
 *                                             self._states[admx_idx4][snp_idx][node_idx4].prob_em[self._chr4[snp_idx]]             # <<<<<<<<<<<<<<
 *                                             #else:
 *                                             #    self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] *= \
 */
                    (((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_t_22])[__pyx_t_23])[__pyx_t_24])[__pyx_t_25])[__pyx_t_26])[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30]) = ((((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_t_22])[__pyx_t_23])[__pyx_t_24])[__pyx_t_25])[__pyx_t_26])[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30]) * (((((__pyx_v_self->_states[__pyx_v_admx_idx3])[__pyx_v_snp_idx])[__pyx_v_node_idx3]).prob_em[(__pyx_v_self->_chr3[__pyx_v_snp_idx])]) * ((((__pyx_v_self->_states[__pyx_v_admx_idx4])[__pyx_v_snp_idx])[__pyx_v_node_idx4]).prob_em[(__pyx_v_self->_chr4[__pyx_v_snp_idx])])));
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":836
 *                                             #    self._states[admx_idx3][snp_idx][node_idx3].prob_em[int(chr(chr3[snp_idx]))] * self._states[admx_idx4][snp_idx][node_idx4].prob_em[int(chr(chr4[snp_idx]))] + \
 *                                             #    self._states[admx_idx3][snp_idx][node_idx3].prob_em[int(chr(chr4[snp_idx]))] * self._states[admx_idx4][snp_idx][node_idx4].prob_em[int(chr(chr3[snp_idx]))]
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef forward_probs_mem_alloc(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.calc_emission_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_53calc_emission_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_53calc_emission_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_emission_probs_ibd_admx (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.calc_emission_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_52calc_emission_probs_ibd_admx(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":790
 *         free(self._emission_prob_ibd_admx)
 * 
 *     cpdef calc_emission_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_52calc_emission_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_emission_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_emission_probs_ibd_admx", __pyx_f[0], 790);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_emission_probs_ibd_admx(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 790; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_emission_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":838
 *             snp_idx_win += 1
 * 
 *     cpdef forward_probs_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_55forward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_forward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_alloc", 0);
  __Pyx_TraceCall("forward_probs_mem_alloc", __pyx_f[0], 838);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_51); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_55forward_probs_mem_alloc)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":851
 *         cdef int snp_idx_win
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         self._forward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":852
 * 
 *         snp_idx_win = 0
 *         self._forward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._forward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 */
  __pyx_v_self->_forward_probs_ibd_admx = ((double **********)malloc((__pyx_v_self->_win_size * (sizeof(double *********)))));

  /* "LDModel.pyx":853
 *         snp_idx_win = 0
 *         self._forward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             self._forward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":854
 *         self._forward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._forward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 */
    (__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win]) = ((double *********)malloc((__pyx_v_self->K * (sizeof(double ********)))));

    /* "LDModel.pyx":855
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._forward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":856
 *             self._forward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):
 *                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 */
      ((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1]) = ((double ********)malloc((__pyx_v_self->K * (sizeof(double *******)))));

      /* "LDModel.pyx":857
 *             for admx_idx1 in range(self.K):
 *                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":858
 *                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):
 *                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 */
        (((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double *******)malloc((__pyx_v_self->K * (sizeof(double ******)))));

        /* "LDModel.pyx":859
 *                 for admx_idx2 in range(self.K):
 *                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":860
 *                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):
 *                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 */
          ((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double ******)malloc((__pyx_v_self->K * (sizeof(double *****)))));

          /* "LDModel.pyx":861
 *                     for admx_idx3 in range(self.K):
 *                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":862
 *                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):
 *                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 */
            (((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double *****)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]) * (sizeof(double ****)))));

            /* "LDModel.pyx":863
 *                         for admx_idx4 in range(self.K):
 *                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":864
 *                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 */
              ((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1]) = ((double ****)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]) * (sizeof(double ***)))));

              /* "LDModel.pyx":865
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":866
 *                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 */
                (((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2]) = ((double ***)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]) * (sizeof(double **)))));

                /* "LDModel.pyx":867
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":868
 *                                     self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 */
                  ((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3]) = ((double **)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]) * (sizeof(double *)))));

                  /* "LDModel.pyx":869
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":870
 *                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 */
                    (((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]) = ((double *)malloc((2 * (sizeof(double)))));

                    /* "LDModel.pyx":871
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1
 */
                    for (__pyx_t_22 = 0; __pyx_t_22 < 2; __pyx_t_22+=1) {
                      __pyx_v_ibd = __pyx_t_22;

                      /* "LDModel.pyx":872
 *                                             self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 * 
 */
                      ((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = 0.0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":873
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef forward_probs_mem_free(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_55forward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_55forward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_alloc (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_54forward_probs_mem_alloc(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":838
 *             snp_idx_win += 1
 * 
 *     cpdef forward_probs_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_54forward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_alloc", 0);
  __Pyx_TraceCall("forward_probs_mem_alloc", __pyx_f[0], 838);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->forward_probs_mem_alloc(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":875
 *             snp_idx_win += 1
 * 
 *     cpdef forward_probs_mem_free(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_57forward_probs_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_forward_probs_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_free", 0);
  __Pyx_TraceCall("forward_probs_mem_free", __pyx_f[0], 875);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_52); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_57forward_probs_mem_free)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":888
 *         cdef int snp_idx_win
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             #print "freeing in snp: " + str(snp_idx)
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":889
 * 
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             #print "freeing in snp: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":891
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             #print "freeing in snp: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":892
 *             #print "freeing in snp: " + str(snp_idx)
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":893
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":894
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":895
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":896
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":897
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4])
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":898
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4])
 *                                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":899
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4])             # <<<<<<<<<<<<<<
 *                                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 */
                    free((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]));
                  }

                  /* "LDModel.pyx":900
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4])
 *                                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])             # <<<<<<<<<<<<<<
 *                                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 */
                  free(((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3]));
                }

                /* "LDModel.pyx":901
 *                                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4])
 *                                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])             # <<<<<<<<<<<<<<
 *                                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 */
                free((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2]));
              }

              /* "LDModel.pyx":902
 *                                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3])
 *                                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])             # <<<<<<<<<<<<<<
 *                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 */
              free(((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1]));
            }

            /* "LDModel.pyx":903
 *                                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2])
 *                                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])             # <<<<<<<<<<<<<<
 *                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 */
            free((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]));
          }

          /* "LDModel.pyx":904
 *                                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1])
 *                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])             # <<<<<<<<<<<<<<
 *                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1])
 */
          free(((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]));
        }

        /* "LDModel.pyx":905
 *                             free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4])
 *                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])             # <<<<<<<<<<<<<<
 *                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._forward_probs_ibd_admx[snp_idx_win])
 */
        free((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]));
      }

      /* "LDModel.pyx":906
 *                         free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3])
 *                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1])             # <<<<<<<<<<<<<<
 *             free(self._forward_probs_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1
 */
      free(((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1]));
    }

    /* "LDModel.pyx":907
 *                     free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2])
 *                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._forward_probs_ibd_admx[snp_idx_win])             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 *         free(self._forward_probs_ibd_admx)
 */
    free((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win]));

    /* "LDModel.pyx":908
 *                 free(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1])
 *             free(self._forward_probs_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 *         free(self._forward_probs_ibd_admx)
 * 
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  /* "LDModel.pyx":909
 *             free(self._forward_probs_ibd_admx[snp_idx_win])
 *             snp_idx_win += 1
 *         free(self._forward_probs_ibd_admx)             # <<<<<<<<<<<<<<
 * 
 *     cdef forward_probs_init(self, int win_idx):
 */
  free(__pyx_v_self->_forward_probs_ibd_admx);

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_57forward_probs_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_57forward_probs_mem_free(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_free (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_56forward_probs_mem_free(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":875
 *             snp_idx_win += 1
 * 
 *     cpdef forward_probs_mem_free(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_56forward_probs_mem_free(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("forward_probs_mem_free", 0);
  __Pyx_TraceCall("forward_probs_mem_free", __pyx_f[0], 875);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->forward_probs_mem_free(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 875; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.forward_probs_mem_free", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":911
 *         free(self._forward_probs_ibd_admx)
 * 
 *     cdef forward_probs_init(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_f_7LDModel_7LDModel_forward_probs_init(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("forward_probs_init", 0);
  __Pyx_TraceCall("forward_probs_init", __pyx_f[0], 911);

  /* "LDModel.pyx":924
 *         cdef int snp_idx_win
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":925
 * 
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_snp_idx = __pyx_t_2;

    /* "LDModel.pyx":926
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_3 = __pyx_v_self->K;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_admx_idx1 = __pyx_t_4;

      /* "LDModel.pyx":927
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx2 = __pyx_t_6;

        /* "LDModel.pyx":928
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx3 = __pyx_t_8;

          /* "LDModel.pyx":929
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx4 = __pyx_t_10;

            /* "LDModel.pyx":930
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_11 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_node_idx1 = __pyx_t_12;

              /* "LDModel.pyx":931
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_13 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
                __pyx_v_node_idx2 = __pyx_t_14;

                /* "LDModel.pyx":932
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 */
                __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                  __pyx_v_node_idx3 = __pyx_t_16;

                  /* "LDModel.pyx":933
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 */
                  __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                    __pyx_v_node_idx4 = __pyx_t_18;

                    /* "LDModel.pyx":934
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1
 */
                    for (__pyx_t_19 = 0; __pyx_t_19 < 2; __pyx_t_19+=1) {
                      __pyx_v_ibd = __pyx_t_19;

                      /* "LDModel.pyx":935
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 * 
 */
                      ((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = 0.0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":936
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_forward_probs_ibd_admx(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":938
 *             snp_idx_win += 1
 * 
 *     cpdef calc_forward_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_59calc_forward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_forward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_prev_node_idx1;
  int __pyx_v_prev_node_idx2;
  int __pyx_v_prev_node_idx3;
  int __pyx_v_prev_node_idx4;
  int __pyx_v_prev_node1;
  int __pyx_v_prev_node2;
  int __pyx_v_prev_node3;
  int __pyx_v_prev_node4;
  int __pyx_v_ibd;
  int __pyx_v_prev_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  double __pyx_v_sum;
  double __pyx_v_eps_or_1_eps;
  int __pyx_v_snp_idx_win;
  int __pyx_v_start_snp;
  CYTHON_UNUSED long __pyx_v_a;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  double __pyx_t_22;
  double __pyx_t_23;
  double __pyx_t_24;
  long __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  int __pyx_t_30;
  int __pyx_t_31;
  int __pyx_t_32;
  int __pyx_t_33;
  int __pyx_t_34;
  long __pyx_t_35;
  int __pyx_t_36;
  int __pyx_t_37;
  int __pyx_t_38;
  int __pyx_t_39;
  int __pyx_t_40;
  int __pyx_t_41;
  int __pyx_t_42;
  int __pyx_t_43;
  int __pyx_t_44;
  int __pyx_t_45;
  int __pyx_t_46;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_forward_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_forward_probs_ibd_admx", __pyx_f[0], 938);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_53); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_59calc_forward_probs_ibd_admx)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":966
 *         cdef double eps_or_1_eps
 *         cdef int snp_idx_win
 *         cdef int start_snp = self.start_snp(win_idx)             # <<<<<<<<<<<<<<
 * 
 *         # first layer
 */
  __pyx_v_start_snp = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx);

  /* "LDModel.pyx":969
 * 
 *         # first layer
 *         for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):
 */
  __pyx_t_4 = __pyx_v_self->K;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_admx_idx1 = __pyx_t_5;

    /* "LDModel.pyx":970
 *         # first layer
 *         for admx_idx1 in range(self.K):
 *             for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx2 = __pyx_t_7;

      /* "LDModel.pyx":971
 *         for admx_idx1 in range(self.K):
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][start_snp]):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx3 = __pyx_t_9;

        /* "LDModel.pyx":972
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][start_snp]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][start_snp]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx4 = __pyx_t_11;

          /* "LDModel.pyx":973
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][start_snp]):             # <<<<<<<<<<<<<<
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][start_snp]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][start_snp]):
 */
          __pyx_t_12 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_start_snp]);
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_node_idx1 = __pyx_t_13;

            /* "LDModel.pyx":974
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][start_snp]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][start_snp]):             # <<<<<<<<<<<<<<
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][start_snp]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][start_snp]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_start_snp]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx2 = __pyx_t_15;

              /* "LDModel.pyx":975
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][start_snp]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][start_snp]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][start_snp]):             # <<<<<<<<<<<<<<
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][start_snp]):
 *                                         for ibd in range(2):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_start_snp]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx3 = __pyx_t_17;

                /* "LDModel.pyx":976
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][start_snp]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][start_snp]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][start_snp]):             # <<<<<<<<<<<<<<
 *                                         for ibd in range(2):
 *                                             if ibd == 0:
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_start_snp]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx4 = __pyx_t_19;

                  /* "LDModel.pyx":977
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][start_snp]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][start_snp]):
 *                                         for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                             if ibd == 0:
 *                                                 self._forward_probs_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 */
                  for (__pyx_t_20 = 0; __pyx_t_20 < 2; __pyx_t_20+=1) {
                    __pyx_v_ibd = __pyx_t_20;

                    /* "LDModel.pyx":978
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][start_snp]):
 *                                         for ibd in range(2):
 *                                             if ibd == 0:             # <<<<<<<<<<<<<<
 *                                                 self._forward_probs_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 self._pi[admx_idx1][win_idx][node_idx1] * self._pi[admx_idx2][win_idx][node_idx2] * self._pi[admx_idx3][win_idx][node_idx3] * self._pi[admx_idx4][win_idx][node_idx4] * \
 */
                    __pyx_t_21 = (__pyx_v_ibd == 0);
                    if (__pyx_t_21) {

                      /* "LDModel.pyx":979
 *                                         for ibd in range(2):
 *                                             if ibd == 0:
 *                                                 self._forward_probs_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                                 self._pi[admx_idx1][win_idx][node_idx1] * self._pi[admx_idx2][win_idx][node_idx2] * self._pi[admx_idx3][win_idx][node_idx3] * self._pi[admx_idx4][win_idx][node_idx4] * \
 *                                                 self._emission_prob_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]
 */
                      ((((((((((__pyx_v_self->_forward_probs_ibd_admx[0])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = (((((((__pyx_v_self->_pi[__pyx_v_admx_idx1])[__pyx_v_win_idx])[__pyx_v_node_idx1]) * (((__pyx_v_self->_pi[__pyx_v_admx_idx2])[__pyx_v_win_idx])[__pyx_v_node_idx2])) * (((__pyx_v_self->_pi[__pyx_v_admx_idx3])[__pyx_v_win_idx])[__pyx_v_node_idx3])) * (((__pyx_v_self->_pi[__pyx_v_admx_idx4])[__pyx_v_win_idx])[__pyx_v_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[0])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]));
                      goto __pyx_L21;
                    }
                    /*else*/ {

                      /* "LDModel.pyx":984
 *                                             else:
 *                                                 self._forward_probs_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 min(self._pi[admx_idx1][win_idx][node_idx1],self._pi[admx_idx3][win_idx][node_idx3]) * self._pi[admx_idx2][win_idx][node_idx2] * self._pi[admx_idx4][win_idx][node_idx4] * \             # <<<<<<<<<<<<<<
 *                                                 self._emission_prob_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]
 * 
 */
                      __pyx_t_22 = (((__pyx_v_self->_pi[__pyx_v_admx_idx3])[__pyx_v_win_idx])[__pyx_v_node_idx3]);
                      __pyx_t_23 = (((__pyx_v_self->_pi[__pyx_v_admx_idx1])[__pyx_v_win_idx])[__pyx_v_node_idx1]);
                      if ((__pyx_t_22 < __pyx_t_23)) {
                        __pyx_t_24 = __pyx_t_22;
                      } else {
                        __pyx_t_24 = __pyx_t_23;
                      }

                      /* "LDModel.pyx":983
 *                                                 self._emission_prob_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]
 *                                             else:
 *                                                 self._forward_probs_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                                 min(self._pi[admx_idx1][win_idx][node_idx1],self._pi[admx_idx3][win_idx][node_idx3]) * self._pi[admx_idx2][win_idx][node_idx2] * self._pi[admx_idx4][win_idx][node_idx4] * \
 *                                                 self._emission_prob_ibd_admx[0][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]
 */
                      ((((((((((__pyx_v_self->_forward_probs_ibd_admx[0])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = (((__pyx_t_24 * (((__pyx_v_self->_pi[__pyx_v_admx_idx2])[__pyx_v_win_idx])[__pyx_v_node_idx2])) * (((__pyx_v_self->_pi[__pyx_v_admx_idx4])[__pyx_v_win_idx])[__pyx_v_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[0])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]));
                    }
                    __pyx_L21:;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  /* "LDModel.pyx":988
 * 
 *         # all other layers
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)-1):
 *             #print "calculating forward probs in layer: " + str(snp_idx)
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":989
 *         # all other layers
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)-1):             # <<<<<<<<<<<<<<
 *             #print "calculating forward probs in layer: " + str(snp_idx)
 * 
 */
  __pyx_t_25 = (((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1);
  for (__pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_4 < __pyx_t_25; __pyx_t_4+=1) {
    __pyx_v_snp_idx = __pyx_t_4;

    /* "LDModel.pyx":992
 *             #print "calculating forward probs in layer: " + str(snp_idx)
 * 
 *             sum = 0             # <<<<<<<<<<<<<<
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):
 */
    __pyx_v_sum = 0.0;

    /* "LDModel.pyx":994
 *             sum = 0
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_5 = __pyx_v_self->K;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_admx_idx1 = __pyx_t_6;

      /* "LDModel.pyx":995
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_7 = __pyx_v_self->K;
      for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
        __pyx_v_admx_idx2 = __pyx_t_8;

        /* "LDModel.pyx":996
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 */
        __pyx_t_9 = __pyx_v_self->K;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
          __pyx_v_admx_idx3 = __pyx_t_10;

          /* "LDModel.pyx":997
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 */
          __pyx_t_11 = __pyx_v_self->K;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
            __pyx_v_admx_idx4 = __pyx_t_12;

            /* "LDModel.pyx":998
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 */
            __pyx_t_13 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)]);
            for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
              __pyx_v_node_idx1 = __pyx_t_14;

              /* "LDModel.pyx":999
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 */
              __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)]);
              for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                __pyx_v_node_idx2 = __pyx_t_16;

                /* "LDModel.pyx":1000
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 *                                             for ibd in range(2):
 */
                __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)]);
                for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                  __pyx_v_node_idx3 = __pyx_t_18;

                  /* "LDModel.pyx":1001
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 * 
 */
                  __pyx_t_19 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)]);
                  for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_19; __pyx_t_20+=1) {
                    __pyx_v_node_idx4 = __pyx_t_20;

                    /* "LDModel.pyx":1002
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 * 
 *                                                 for prev_node_idx1 in range(self._states[admx_idx1][snp_idx+1][node_idx1].in_trans_num):
 */
                    for (__pyx_t_26 = 0; __pyx_t_26 < 2; __pyx_t_26+=1) {
                      __pyx_v_ibd = __pyx_t_26;

                      /* "LDModel.pyx":1004
 *                                             for ibd in range(2):
 * 
 *                                                 for prev_node_idx1 in range(self._states[admx_idx1][snp_idx+1][node_idx1].in_trans_num):             # <<<<<<<<<<<<<<
 *                                                     for prev_node_idx2 in range(self._states[admx_idx2][snp_idx+1][node_idx2].in_trans_num):
 *                                                         for prev_node_idx3 in range(self._states[admx_idx3][snp_idx+1][node_idx3].in_trans_num):
 */
                      __pyx_t_27 = (((__pyx_v_self->_states[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx1]).in_trans_num;
                      for (__pyx_t_28 = 0; __pyx_t_28 < __pyx_t_27; __pyx_t_28+=1) {
                        __pyx_v_prev_node_idx1 = __pyx_t_28;

                        /* "LDModel.pyx":1005
 * 
 *                                                 for prev_node_idx1 in range(self._states[admx_idx1][snp_idx+1][node_idx1].in_trans_num):
 *                                                     for prev_node_idx2 in range(self._states[admx_idx2][snp_idx+1][node_idx2].in_trans_num):             # <<<<<<<<<<<<<<
 *                                                         for prev_node_idx3 in range(self._states[admx_idx3][snp_idx+1][node_idx3].in_trans_num):
 *                                                             for prev_node_idx4 in range(self._states[admx_idx4][snp_idx+1][node_idx4].in_trans_num):
 */
                        __pyx_t_29 = (((__pyx_v_self->_states[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx2]).in_trans_num;
                        for (__pyx_t_30 = 0; __pyx_t_30 < __pyx_t_29; __pyx_t_30+=1) {
                          __pyx_v_prev_node_idx2 = __pyx_t_30;

                          /* "LDModel.pyx":1006
 *                                                 for prev_node_idx1 in range(self._states[admx_idx1][snp_idx+1][node_idx1].in_trans_num):
 *                                                     for prev_node_idx2 in range(self._states[admx_idx2][snp_idx+1][node_idx2].in_trans_num):
 *                                                         for prev_node_idx3 in range(self._states[admx_idx3][snp_idx+1][node_idx3].in_trans_num):             # <<<<<<<<<<<<<<
 *                                                             for prev_node_idx4 in range(self._states[admx_idx4][snp_idx+1][node_idx4].in_trans_num):
 *                                                                 #for prev_ibd in range(2):
 */
                          __pyx_t_31 = (((__pyx_v_self->_states[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx3]).in_trans_num;
                          for (__pyx_t_32 = 0; __pyx_t_32 < __pyx_t_31; __pyx_t_32+=1) {
                            __pyx_v_prev_node_idx3 = __pyx_t_32;

                            /* "LDModel.pyx":1007
 *                                                     for prev_node_idx2 in range(self._states[admx_idx2][snp_idx+1][node_idx2].in_trans_num):
 *                                                         for prev_node_idx3 in range(self._states[admx_idx3][snp_idx+1][node_idx3].in_trans_num):
 *                                                             for prev_node_idx4 in range(self._states[admx_idx4][snp_idx+1][node_idx4].in_trans_num):             # <<<<<<<<<<<<<<
 *                                                                 #for prev_ibd in range(2):
 *                                                                     prev_ibd = ibd
 */
                            __pyx_t_33 = (((__pyx_v_self->_states[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx4]).in_trans_num;
                            for (__pyx_t_34 = 0; __pyx_t_34 < __pyx_t_33; __pyx_t_34+=1) {
                              __pyx_v_prev_node_idx4 = __pyx_t_34;

                              /* "LDModel.pyx":1009
 *                                                             for prev_node_idx4 in range(self._states[admx_idx4][snp_idx+1][node_idx4].in_trans_num):
 *                                                                 #for prev_ibd in range(2):
 *                                                                     prev_ibd = ibd             # <<<<<<<<<<<<<<
 *                                                                     prev_node1 = self._back_trans_idx[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1]
 *                                                                     prev_node2 = self._back_trans_idx[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2]
 */
                              __pyx_v_prev_ibd = __pyx_v_ibd;

                              /* "LDModel.pyx":1010
 *                                                                 #for prev_ibd in range(2):
 *                                                                     prev_ibd = ibd
 *                                                                     prev_node1 = self._back_trans_idx[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1]             # <<<<<<<<<<<<<<
 *                                                                     prev_node2 = self._back_trans_idx[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2]
 *                                                                     prev_node3 = self._back_trans_idx[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]
 */
                              __pyx_v_prev_node1 = ((((__pyx_v_self->_back_trans_idx[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx1])[__pyx_v_prev_node_idx1]);

                              /* "LDModel.pyx":1011
 *                                                                     prev_ibd = ibd
 *                                                                     prev_node1 = self._back_trans_idx[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1]
 *                                                                     prev_node2 = self._back_trans_idx[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2]             # <<<<<<<<<<<<<<
 *                                                                     prev_node3 = self._back_trans_idx[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]
 *                                                                     prev_node4 = self._back_trans_idx[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4]
 */
                              __pyx_v_prev_node2 = ((((__pyx_v_self->_back_trans_idx[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx2])[__pyx_v_prev_node_idx2]);

                              /* "LDModel.pyx":1012
 *                                                                     prev_node1 = self._back_trans_idx[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1]
 *                                                                     prev_node2 = self._back_trans_idx[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2]
 *                                                                     prev_node3 = self._back_trans_idx[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]             # <<<<<<<<<<<<<<
 *                                                                     prev_node4 = self._back_trans_idx[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4]
 *                                                                     if ibd == 0:
 */
                              __pyx_v_prev_node3 = ((((__pyx_v_self->_back_trans_idx[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx3])[__pyx_v_prev_node_idx3]);

                              /* "LDModel.pyx":1013
 *                                                                     prev_node2 = self._back_trans_idx[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2]
 *                                                                     prev_node3 = self._back_trans_idx[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]
 *                                                                     prev_node4 = self._back_trans_idx[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4]             # <<<<<<<<<<<<<<
 *                                                                     if ibd == 0:
 *                                                                         a=1
 */
                              __pyx_v_prev_node4 = ((((__pyx_v_self->_back_trans_idx[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx4])[__pyx_v_prev_node_idx4]);

                              /* "LDModel.pyx":1014
 *                                                                     prev_node3 = self._back_trans_idx[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]
 *                                                                     prev_node4 = self._back_trans_idx[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4]
 *                                                                     if ibd == 0:             # <<<<<<<<<<<<<<
 *                                                                         a=1
 * 
 */
                              __pyx_t_21 = (__pyx_v_ibd == 0);
                              if (__pyx_t_21) {

                                /* "LDModel.pyx":1015
 *                                                                     prev_node4 = self._back_trans_idx[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4]
 *                                                                     if ibd == 0:
 *                                                                         a=1             # <<<<<<<<<<<<<<
 * 
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 */
                                __pyx_v_a = 1;

                                /* "LDModel.pyx":1017
 *                                                                         a=1
 * 
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1] * \
 */
                                __pyx_t_35 = (__pyx_v_snp_idx_win + 1);
                                __pyx_t_36 = __pyx_v_admx_idx1;
                                __pyx_t_37 = __pyx_v_admx_idx2;
                                __pyx_t_38 = __pyx_v_admx_idx3;
                                __pyx_t_39 = __pyx_v_admx_idx4;
                                __pyx_t_40 = __pyx_v_node_idx1;
                                __pyx_t_41 = __pyx_v_node_idx2;
                                __pyx_t_42 = __pyx_v_node_idx3;
                                __pyx_t_43 = __pyx_v_node_idx4;
                                __pyx_t_44 = __pyx_v_ibd;

                                /* "LDModel.pyx":1023
 *                                                                         self._back_trans[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3] * \
 *                                                                         self._back_trans[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4] * \
 *                                                                         self._emission_prob_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] #* \             # <<<<<<<<<<<<<<
 *                                                                         #self._s[snp_idx+1][prev_ibd][ibd]
 * 
 */
                                ((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41])[__pyx_t_42])[__pyx_t_43])[__pyx_t_44]) = (((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41])[__pyx_t_42])[__pyx_t_43])[__pyx_t_44]) + (((((((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_prev_node1])[__pyx_v_prev_node2])[__pyx_v_prev_node3])[__pyx_v_prev_node4])[__pyx_v_prev_ibd]) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx1])[__pyx_v_prev_node_idx1])) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx2])[__pyx_v_prev_node_idx2])) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx3])[__pyx_v_prev_node_idx3])) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx4])[__pyx_v_prev_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])));
                                goto __pyx_L50;
                              }
                              /*else*/ {

                                /* "LDModel.pyx":1028
 *                                                                     else:
 *                                                                         # node_idx1 == node_idx3: #chr(get_likely_allele(self._states[admx_idx1][snp_idx+1][node_idx1])) == chr(get_likely_allele(self._states[admx_idx3][snp_idx+1][node_idx3])): #chr1[snp_idx+1] == chr3[snp_idx+1]:
 *                                                                         if admx_idx1 == admx_idx3 and get_likely_allele(self._states[admx_idx1][snp_idx+1][node_idx1]) == get_likely_allele(self._states[admx_idx3][snp_idx+1][node_idx3]):             # <<<<<<<<<<<<<<
 *                                                                             eps_or_1_eps = 1 - eps
 *                                                                         else:
 */
                                __pyx_t_21 = (__pyx_v_admx_idx1 == __pyx_v_admx_idx3);
                                if (__pyx_t_21) {
                                  __pyx_t_45 = (get_likely_allele((((__pyx_v_self->_states[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx1])) == get_likely_allele((((__pyx_v_self->_states[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx3])));
                                  __pyx_t_46 = __pyx_t_45;
                                } else {
                                  __pyx_t_46 = __pyx_t_21;
                                }
                                if (__pyx_t_46) {

                                  /* "LDModel.pyx":1029
 *                                                                         # node_idx1 == node_idx3: #chr(get_likely_allele(self._states[admx_idx1][snp_idx+1][node_idx1])) == chr(get_likely_allele(self._states[admx_idx3][snp_idx+1][node_idx3])): #chr1[snp_idx+1] == chr3[snp_idx+1]:
 *                                                                         if admx_idx1 == admx_idx3 and get_likely_allele(self._states[admx_idx1][snp_idx+1][node_idx1]) == get_likely_allele(self._states[admx_idx3][snp_idx+1][node_idx3]):
 *                                                                             eps_or_1_eps = 1 - eps             # <<<<<<<<<<<<<<
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps
 */
                                  __pyx_v_eps_or_1_eps = (1.0 - __pyx_v_7LDModel_eps);
                                  goto __pyx_L51;
                                }
                                /*else*/ {

                                  /* "LDModel.pyx":1031
 *                                                                             eps_or_1_eps = 1 - eps
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps             # <<<<<<<<<<<<<<
 * 
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 */
                                  __pyx_v_eps_or_1_eps = __pyx_v_7LDModel_eps;
                                }
                                __pyx_L51:;

                                /* "LDModel.pyx":1033
 *                                                                             eps_or_1_eps = eps
 * 
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         min(self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1],
 */
                                __pyx_t_35 = (__pyx_v_snp_idx_win + 1);
                                __pyx_t_36 = __pyx_v_admx_idx1;
                                __pyx_t_37 = __pyx_v_admx_idx2;
                                __pyx_t_38 = __pyx_v_admx_idx3;
                                __pyx_t_39 = __pyx_v_admx_idx4;
                                __pyx_t_40 = __pyx_v_node_idx1;
                                __pyx_t_41 = __pyx_v_node_idx2;
                                __pyx_t_42 = __pyx_v_node_idx3;
                                __pyx_t_43 = __pyx_v_node_idx4;
                                __pyx_t_44 = __pyx_v_ibd;

                                /* "LDModel.pyx":1036
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         min(self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1],
 *                                                                             self._back_trans[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]) * \             # <<<<<<<<<<<<<<
 *                                                                         self._back_trans[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2] * \
 *                                                                         self._back_trans[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4] * \
 */
                                __pyx_t_24 = ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx3])[__pyx_v_prev_node_idx3]);

                                /* "LDModel.pyx":1035
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         min(self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1],             # <<<<<<<<<<<<<<
 *                                                                             self._back_trans[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]) * \
 *                                                                         self._back_trans[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2] * \
 */
                                __pyx_t_22 = ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx1])[__pyx_v_prev_node_idx1]);

                                /* "LDModel.pyx":1036
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         min(self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1],
 *                                                                             self._back_trans[admx_idx3][snp_idx+1][node_idx3][prev_node_idx3]) * \             # <<<<<<<<<<<<<<
 *                                                                         self._back_trans[admx_idx2][snp_idx+1][node_idx2][prev_node_idx2] * \
 *                                                                         self._back_trans[admx_idx4][snp_idx+1][node_idx4][prev_node_idx4] * \
 */
                                if ((__pyx_t_24 < __pyx_t_22)) {
                                  __pyx_t_23 = __pyx_t_24;
                                } else {
                                  __pyx_t_23 = __pyx_t_22;
                                }

                                /* "LDModel.pyx":1033
 *                                                                             eps_or_1_eps = eps
 * 
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][prev_node1][prev_node2][prev_node3][prev_node4][prev_ibd] * \
 *                                                                         min(self._back_trans[admx_idx1][snp_idx+1][node_idx1][prev_node_idx1],
 */
                                ((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41])[__pyx_t_42])[__pyx_t_43])[__pyx_t_44]) = (((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41])[__pyx_t_42])[__pyx_t_43])[__pyx_t_44]) + (((((((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_prev_node1])[__pyx_v_prev_node2])[__pyx_v_prev_node3])[__pyx_v_prev_node4])[__pyx_v_prev_ibd]) * __pyx_t_23) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx2])[__pyx_v_prev_node_idx2])) * ((((__pyx_v_self->_back_trans[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)])[__pyx_v_node_idx4])[__pyx_v_prev_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])) * __pyx_v_eps_or_1_eps));
                              }
                              __pyx_L50:;
                            }
                          }
                        }
                      }

                      /* "LDModel.pyx":1041
 *                                                                         self._emission_prob_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] * eps_or_1_eps
 *                                                                         #self._s[snp_idx+1][prev_ibd][ibd] * \
 *                                                 sum += self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]             # <<<<<<<<<<<<<<
 * 
 *             # rescaling to avoid underflow
 */
                      __pyx_v_sum = (__pyx_v_sum + ((((((((((__pyx_v_self->_forward_probs_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1044
 * 
 *             # rescaling to avoid underflow
 *             if sum == 0:             # <<<<<<<<<<<<<<
 *                 sum = 1
 *             for admx_idx1 in range(self.K):
 */
    __pyx_t_46 = (__pyx_v_sum == 0.0);
    if (__pyx_t_46) {

      /* "LDModel.pyx":1045
 *             # rescaling to avoid underflow
 *             if sum == 0:
 *                 sum = 1             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
      __pyx_v_sum = 1.0;
      goto __pyx_L52;
    }
    __pyx_L52:;

    /* "LDModel.pyx":1046
 *             if sum == 0:
 *                 sum = 1
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_5 = __pyx_v_self->K;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_admx_idx1 = __pyx_t_6;

      /* "LDModel.pyx":1047
 *                 sum = 1
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_7 = __pyx_v_self->K;
      for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
        __pyx_v_admx_idx2 = __pyx_t_8;

        /* "LDModel.pyx":1048
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 */
        __pyx_t_9 = __pyx_v_self->K;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
          __pyx_v_admx_idx3 = __pyx_t_10;

          /* "LDModel.pyx":1049
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 */
          __pyx_t_11 = __pyx_v_self->K;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
            __pyx_v_admx_idx4 = __pyx_t_12;

            /* "LDModel.pyx":1050
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 */
            __pyx_t_13 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[(__pyx_v_snp_idx + 1)]);
            for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
              __pyx_v_node_idx1 = __pyx_t_14;

              /* "LDModel.pyx":1051
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 */
              __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[(__pyx_v_snp_idx + 1)]);
              for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                __pyx_v_node_idx2 = __pyx_t_16;

                /* "LDModel.pyx":1052
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx+1]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 *                                             for ibd in range(2):
 */
                __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[(__pyx_v_snp_idx + 1)]);
                for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                  __pyx_v_node_idx3 = __pyx_t_18;

                  /* "LDModel.pyx":1053
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx+1]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 */
                  __pyx_t_19 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[(__pyx_v_snp_idx + 1)]);
                  for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_19; __pyx_t_20+=1) {
                    __pyx_v_node_idx4 = __pyx_t_20;

                    /* "LDModel.pyx":1054
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx+1]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)
 */
                    for (__pyx_t_26 = 0; __pyx_t_26 < 2; __pyx_t_26+=1) {
                      __pyx_v_ibd = __pyx_t_26;

                      /* "LDModel.pyx":1056
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)             # <<<<<<<<<<<<<<
 * 
 *                                                 #if snp_idx == (self.end_snp(win_idx) - 1):
 */
                      if (unlikely(__pyx_v_sum == 0)) {
                        PyErr_Format(PyExc_ZeroDivisionError, "float division");
                        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1056; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      }

                      /* "LDModel.pyx":1055
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx+1]):
 *                                             for ibd in range(2):
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                                 self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)
 * 
 */
                      ((((((((((__pyx_v_self->_forward_probs_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = (((((((((((__pyx_v_self->_forward_probs_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) * (1.0 / __pyx_v_sum));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1061
 *                                                 #    self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                                 #    self._forward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef backward_probs_mem_alloc(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.calc_forward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_59calc_forward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_59calc_forward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_forward_probs_ibd_admx (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.calc_forward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_58calc_forward_probs_ibd_admx(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":938
 *             snp_idx_win += 1
 * 
 *     cpdef calc_forward_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_58calc_forward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_forward_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_forward_probs_ibd_admx", __pyx_f[0], 938);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_forward_probs_ibd_admx(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 938; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_forward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1063
 *             snp_idx_win += 1
 * 
 *     cpdef backward_probs_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_61backward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_backward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("backward_probs_mem_alloc", 0);
  __Pyx_TraceCall("backward_probs_mem_alloc", __pyx_f[0], 1063);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_54); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_61backward_probs_mem_alloc)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1076
 *         cdef int snp_idx_win
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         self._backward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":1077
 * 
 *         snp_idx_win = 0
 *         self._backward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._backward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 */
  __pyx_v_self->_backward_probs_ibd_admx = ((double **********)malloc((__pyx_v_self->_win_size * (sizeof(double *********)))));

  /* "LDModel.pyx":1078
 *         snp_idx_win = 0
 *         self._backward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             self._backward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":1079
 *         self._backward_probs_ibd_admx = <double **********> malloc(self._win_size * sizeof(double *********))
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._backward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 */
    (__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win]) = ((double *********)malloc((__pyx_v_self->K * (sizeof(double ********)))));

    /* "LDModel.pyx":1080
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             self._backward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":1081
 *             self._backward_probs_ibd_admx[snp_idx_win] = <double *********> malloc(self.K * sizeof(double********))
 *             for admx_idx1 in range(self.K):
 *                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 */
      ((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1]) = ((double ********)malloc((__pyx_v_self->K * (sizeof(double *******)))));

      /* "LDModel.pyx":1082
 *             for admx_idx1 in range(self.K):
 *                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":1083
 *                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1] = <double ********> malloc(self.K * sizeof(double*******))
 *                 for admx_idx2 in range(self.K):
 *                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 */
        (((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double *******)malloc((__pyx_v_self->K * (sizeof(double ******)))));

        /* "LDModel.pyx":1084
 *                 for admx_idx2 in range(self.K):
 *                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":1085
 *                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2] = <double *******> malloc(self.K * sizeof(double******))
 *                     for admx_idx3 in range(self.K):
 *                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 */
          ((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double ******)malloc((__pyx_v_self->K * (sizeof(double *****)))));

          /* "LDModel.pyx":1086
 *                     for admx_idx3 in range(self.K):
 *                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":1087
 *                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3] = <double ******> malloc(self.K * sizeof(double*****))
 *                         for admx_idx4 in range(self.K):
 *                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 */
            (((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double *****)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]) * (sizeof(double ****)))));

            /* "LDModel.pyx":1088
 *                         for admx_idx4 in range(self.K):
 *                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":1089
 *                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4]= <double *****> malloc((self._layer_state_nums[admx_idx1][snp_idx]) * sizeof(double****))
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 */
              ((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1]) = ((double ****)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]) * (sizeof(double ***)))));

              /* "LDModel.pyx":1090
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":1091
 *                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1] = <double ****> malloc((self._layer_state_nums[admx_idx2][snp_idx]) * sizeof(double***))
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 */
                (((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2]) = ((double ***)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]) * (sizeof(double **)))));

                /* "LDModel.pyx":1092
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":1093
 *                                     self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2] = <double ***> malloc((self._layer_state_nums[admx_idx3][snp_idx]) * sizeof(double**))
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 */
                  ((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3]) = ((double **)malloc((((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]) * (sizeof(double *)))));

                  /* "LDModel.pyx":1094
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":1095
 *                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3] = <double **> malloc((self._layer_state_nums[admx_idx4][snp_idx]) * sizeof(double*))
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 */
                    (((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4]) = ((double *)malloc((2 * (sizeof(double)))));

                    /* "LDModel.pyx":1096
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1
 */
                    for (__pyx_t_22 = 0; __pyx_t_22 < 2; __pyx_t_22+=1) {
                      __pyx_v_ibd = __pyx_t_22;

                      /* "LDModel.pyx":1097
 *                                             self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4] = <double *> malloc(2 * sizeof(double))
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 * 
 */
                      ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = 0.0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1098
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cdef backward_probs_init(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.backward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_61backward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_61backward_probs_mem_alloc(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("backward_probs_mem_alloc (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.backward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_60backward_probs_mem_alloc(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1063
 *             snp_idx_win += 1
 * 
 *     cpdef backward_probs_mem_alloc(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_60backward_probs_mem_alloc(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("backward_probs_mem_alloc", 0);
  __Pyx_TraceCall("backward_probs_mem_alloc", __pyx_f[0], 1063);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->backward_probs_mem_alloc(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1063; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.backward_probs_mem_alloc", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1100
 *             snp_idx_win += 1
 * 
 *     cdef backward_probs_init(self, int win_idx):             # <<<<<<<<<<<<<<
 *         cdef int snp_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_f_7LDModel_7LDModel_backward_probs_init(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_snp_idx_win;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("backward_probs_init", 0);
  __Pyx_TraceCall("backward_probs_init", __pyx_f[0], 1100);

  /* "LDModel.pyx":1113
 *         cdef int snp_idx_win
 * 
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 */
  __pyx_v_snp_idx_win = 0;

  /* "LDModel.pyx":1114
 * 
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx); __pyx_t_2 < __pyx_t_1; __pyx_t_2+=1) {
    __pyx_v_snp_idx = __pyx_t_2;

    /* "LDModel.pyx":1115
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_3 = __pyx_v_self->K;
    for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
      __pyx_v_admx_idx1 = __pyx_t_4;

      /* "LDModel.pyx":1116
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx2 = __pyx_t_6;

        /* "LDModel.pyx":1117
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx3 = __pyx_t_8;

          /* "LDModel.pyx":1118
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx4 = __pyx_t_10;

            /* "LDModel.pyx":1119
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_11 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_node_idx1 = __pyx_t_12;

              /* "LDModel.pyx":1120
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_13 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
                __pyx_v_node_idx2 = __pyx_t_14;

                /* "LDModel.pyx":1121
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 */
                __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                  __pyx_v_node_idx3 = __pyx_t_16;

                  /* "LDModel.pyx":1122
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 */
                  __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                    __pyx_v_node_idx4 = __pyx_t_18;

                    /* "LDModel.pyx":1123
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1
 */
                    for (__pyx_t_19 = 0; __pyx_t_19 < 2; __pyx_t_19+=1) {
                      __pyx_v_ibd = __pyx_t_19;

                      /* "LDModel.pyx":1124
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *             snp_idx_win += 1
 * 
 */
                      ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = 0.0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1125
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 0
 *             snp_idx_win += 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_backward_probs_ibd_admx(self, int win_idx):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win + 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1127
 *             snp_idx_win += 1
 * 
 *     cpdef calc_backward_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_63calc_backward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_backward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx, int __pyx_skip_dispatch) {
  int __pyx_v_snp_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_nxt_node_idx1;
  int __pyx_v_nxt_node_idx2;
  int __pyx_v_nxt_node_idx3;
  int __pyx_v_nxt_node_idx4;
  int __pyx_v_nxt_node1;
  int __pyx_v_nxt_node2;
  int __pyx_v_nxt_node3;
  int __pyx_v_nxt_node4;
  int __pyx_v_ibd;
  int __pyx_v_nxt_ibd;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  double __pyx_v_sum;
  double __pyx_v_eps_or_1_eps;
  int __pyx_v_snp_idx_win;
  CYTHON_UNUSED long __pyx_v_a;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  int __pyx_t_30;
  int __pyx_t_31;
  int __pyx_t_32;
  int __pyx_t_33;
  int __pyx_t_34;
  int __pyx_t_35;
  int __pyx_t_36;
  int __pyx_t_37;
  int __pyx_t_38;
  int __pyx_t_39;
  int __pyx_t_40;
  int __pyx_t_41;
  double __pyx_t_42;
  double __pyx_t_43;
  double __pyx_t_44;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_backward_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_backward_probs_ibd_admx", __pyx_f[0], 1127);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_55); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_63calc_backward_probs_ibd_admx)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1157
 * 
 *         # last layer
 *         for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):
 */
  __pyx_t_4 = __pyx_v_self->K;
  for (__pyx_t_5 = 0; __pyx_t_5 < __pyx_t_4; __pyx_t_5+=1) {
    __pyx_v_admx_idx1 = __pyx_t_5;

    /* "LDModel.pyx":1158
 *         # last layer
 *         for admx_idx1 in range(self.K):
 *             for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx2 = __pyx_t_7;

      /* "LDModel.pyx":1159
 *         for admx_idx1 in range(self.K):
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][self.end_snp(win_idx) - 1]):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx3 = __pyx_t_9;

        /* "LDModel.pyx":1160
 *             for admx_idx2 in range(self.K):
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][self.end_snp(win_idx) - 1]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][self.end_snp(win_idx) - 1]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx4 = __pyx_t_11;

          /* "LDModel.pyx":1161
 *                 for admx_idx3 in range(self.K):
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][self.end_snp(win_idx) - 1]):             # <<<<<<<<<<<<<<
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][self.end_snp(win_idx) - 1]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][self.end_snp(win_idx) - 1]):
 */
          __pyx_t_12 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[(((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1)]);
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_node_idx1 = __pyx_t_13;

            /* "LDModel.pyx":1162
 *                     for admx_idx4 in range(self.K):
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][self.end_snp(win_idx) - 1]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][self.end_snp(win_idx) - 1]):             # <<<<<<<<<<<<<<
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][self.end_snp(win_idx) - 1]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][self.end_snp(win_idx) - 1]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[(((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1)]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx2 = __pyx_t_15;

              /* "LDModel.pyx":1163
 *                         for node_idx1 in range(self._layer_state_nums[admx_idx1][self.end_snp(win_idx) - 1]):
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][self.end_snp(win_idx) - 1]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][self.end_snp(win_idx) - 1]):             # <<<<<<<<<<<<<<
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][self.end_snp(win_idx) - 1]):
 *                                         for ibd in range(2):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[(((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1)]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx3 = __pyx_t_17;

                /* "LDModel.pyx":1164
 *                             for node_idx2 in range(self._layer_state_nums[admx_idx2][self.end_snp(win_idx) - 1]):
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][self.end_snp(win_idx) - 1]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][self.end_snp(win_idx) - 1]):             # <<<<<<<<<<<<<<
 *                                         for ibd in range(2):
 *                                             self._backward_probs_ibd_admx[self._win_size - 1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 1
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[(((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1)]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx4 = __pyx_t_19;

                  /* "LDModel.pyx":1165
 *                                 for node_idx3 in range(self._layer_state_nums[admx_idx3][self.end_snp(win_idx) - 1]):
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][self.end_snp(win_idx) - 1]):
 *                                         for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                             self._backward_probs_ibd_admx[self._win_size - 1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 1
 * 
 */
                  for (__pyx_t_20 = 0; __pyx_t_20 < 2; __pyx_t_20+=1) {
                    __pyx_v_ibd = __pyx_t_20;

                    /* "LDModel.pyx":1166
 *                                     for node_idx4 in range(self._layer_state_nums[admx_idx4][self.end_snp(win_idx) - 1]):
 *                                         for ibd in range(2):
 *                                             self._backward_probs_ibd_admx[self._win_size - 1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = 1             # <<<<<<<<<<<<<<
 * 
 *         # all other layers
 */
                    ((((((((((__pyx_v_self->_backward_probs_ibd_admx[(__pyx_v_self->_win_size - 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = 1.0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }

  /* "LDModel.pyx":1169
 * 
 *         # all other layers
 *         snp_idx_win = self._win_size - 2             # <<<<<<<<<<<<<<
 *         for snp_idx in reversed(range(self.start_snp(win_idx), self.end_snp(win_idx) - 1)):
 *             #print "calculating backward probs in layer: " + str(snp_idx)
 */
  __pyx_v_snp_idx_win = (__pyx_v_self->_win_size - 2);

  /* "LDModel.pyx":1170
 *         # all other layers
 *         snp_idx_win = self._win_size - 2
 *         for snp_idx in reversed(range(self.start_snp(win_idx), self.end_snp(win_idx) - 1)):             # <<<<<<<<<<<<<<
 *             #print "calculating backward probs in layer: " + str(snp_idx)
 * 
 */
  __pyx_t_4 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx);
  for (__pyx_t_5 = (((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - 1)-1; __pyx_t_5 >= __pyx_t_4; __pyx_t_5-=1) {
    __pyx_v_snp_idx = __pyx_t_5;

    /* "LDModel.pyx":1173
 *             #print "calculating backward probs in layer: " + str(snp_idx)
 * 
 *             sum = 0             # <<<<<<<<<<<<<<
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):
 */
    __pyx_v_sum = 0.0;

    /* "LDModel.pyx":1175
 *             sum = 0
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":1176
 *             # calculate forward probabilities
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":1177
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":1178
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":1179
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":1180
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":1181
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":1182
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 * 
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":1183
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 * 
 *                                                 for nxt_node_idx1 in range(self._states[admx_idx1][snp_idx][node_idx1].out_trans_num):
 */
                    for (__pyx_t_22 = 0; __pyx_t_22 < 2; __pyx_t_22+=1) {
                      __pyx_v_ibd = __pyx_t_22;

                      /* "LDModel.pyx":1185
 *                                             for ibd in range(2):
 * 
 *                                                 for nxt_node_idx1 in range(self._states[admx_idx1][snp_idx][node_idx1].out_trans_num):             # <<<<<<<<<<<<<<
 *                                                     for nxt_node_idx2 in range(self._states[admx_idx2][snp_idx][node_idx2].out_trans_num):
 *                                                         for nxt_node_idx3 in range(self._states[admx_idx3][snp_idx][node_idx3].out_trans_num):
 */
                      __pyx_t_23 = (((__pyx_v_self->_states[__pyx_v_admx_idx1])[__pyx_v_snp_idx])[__pyx_v_node_idx1]).out_trans_num;
                      for (__pyx_t_24 = 0; __pyx_t_24 < __pyx_t_23; __pyx_t_24+=1) {
                        __pyx_v_nxt_node_idx1 = __pyx_t_24;

                        /* "LDModel.pyx":1186
 * 
 *                                                 for nxt_node_idx1 in range(self._states[admx_idx1][snp_idx][node_idx1].out_trans_num):
 *                                                     for nxt_node_idx2 in range(self._states[admx_idx2][snp_idx][node_idx2].out_trans_num):             # <<<<<<<<<<<<<<
 *                                                         for nxt_node_idx3 in range(self._states[admx_idx3][snp_idx][node_idx3].out_trans_num):
 *                                                             for nxt_node_idx4 in range(self._states[admx_idx4][snp_idx][node_idx4].out_trans_num):
 */
                        __pyx_t_25 = (((__pyx_v_self->_states[__pyx_v_admx_idx2])[__pyx_v_snp_idx])[__pyx_v_node_idx2]).out_trans_num;
                        for (__pyx_t_26 = 0; __pyx_t_26 < __pyx_t_25; __pyx_t_26+=1) {
                          __pyx_v_nxt_node_idx2 = __pyx_t_26;

                          /* "LDModel.pyx":1187
 *                                                 for nxt_node_idx1 in range(self._states[admx_idx1][snp_idx][node_idx1].out_trans_num):
 *                                                     for nxt_node_idx2 in range(self._states[admx_idx2][snp_idx][node_idx2].out_trans_num):
 *                                                         for nxt_node_idx3 in range(self._states[admx_idx3][snp_idx][node_idx3].out_trans_num):             # <<<<<<<<<<<<<<
 *                                                             for nxt_node_idx4 in range(self._states[admx_idx4][snp_idx][node_idx4].out_trans_num):
 *                                                                 #for nxt_ibd in range(2):
 */
                          __pyx_t_27 = (((__pyx_v_self->_states[__pyx_v_admx_idx3])[__pyx_v_snp_idx])[__pyx_v_node_idx3]).out_trans_num;
                          for (__pyx_t_28 = 0; __pyx_t_28 < __pyx_t_27; __pyx_t_28+=1) {
                            __pyx_v_nxt_node_idx3 = __pyx_t_28;

                            /* "LDModel.pyx":1188
 *                                                     for nxt_node_idx2 in range(self._states[admx_idx2][snp_idx][node_idx2].out_trans_num):
 *                                                         for nxt_node_idx3 in range(self._states[admx_idx3][snp_idx][node_idx3].out_trans_num):
 *                                                             for nxt_node_idx4 in range(self._states[admx_idx4][snp_idx][node_idx4].out_trans_num):             # <<<<<<<<<<<<<<
 *                                                                 #for nxt_ibd in range(2):
 *                                                                     nxt_ibd = ibd
 */
                            __pyx_t_29 = (((__pyx_v_self->_states[__pyx_v_admx_idx4])[__pyx_v_snp_idx])[__pyx_v_node_idx4]).out_trans_num;
                            for (__pyx_t_30 = 0; __pyx_t_30 < __pyx_t_29; __pyx_t_30+=1) {
                              __pyx_v_nxt_node_idx4 = __pyx_t_30;

                              /* "LDModel.pyx":1190
 *                                                             for nxt_node_idx4 in range(self._states[admx_idx4][snp_idx][node_idx4].out_trans_num):
 *                                                                 #for nxt_ibd in range(2):
 *                                                                     nxt_ibd = ibd             # <<<<<<<<<<<<<<
 *                                                                     nxt_node1 = self._trans_idx[admx_idx1][snp_idx][node_idx1][nxt_node_idx1]
 *                                                                     nxt_node2 = self._trans_idx[admx_idx2][snp_idx][node_idx2][nxt_node_idx2]
 */
                              __pyx_v_nxt_ibd = __pyx_v_ibd;

                              /* "LDModel.pyx":1191
 *                                                                 #for nxt_ibd in range(2):
 *                                                                     nxt_ibd = ibd
 *                                                                     nxt_node1 = self._trans_idx[admx_idx1][snp_idx][node_idx1][nxt_node_idx1]             # <<<<<<<<<<<<<<
 *                                                                     nxt_node2 = self._trans_idx[admx_idx2][snp_idx][node_idx2][nxt_node_idx2]
 *                                                                     nxt_node3 = self._trans_idx[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]
 */
                              __pyx_v_nxt_node1 = ((((__pyx_v_self->_trans_idx[__pyx_v_admx_idx1])[__pyx_v_snp_idx])[__pyx_v_node_idx1])[__pyx_v_nxt_node_idx1]);

                              /* "LDModel.pyx":1192
 *                                                                     nxt_ibd = ibd
 *                                                                     nxt_node1 = self._trans_idx[admx_idx1][snp_idx][node_idx1][nxt_node_idx1]
 *                                                                     nxt_node2 = self._trans_idx[admx_idx2][snp_idx][node_idx2][nxt_node_idx2]             # <<<<<<<<<<<<<<
 *                                                                     nxt_node3 = self._trans_idx[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]
 *                                                                     nxt_node4 = self._trans_idx[admx_idx4][snp_idx][node_idx4][nxt_node_idx4]
 */
                              __pyx_v_nxt_node2 = ((((__pyx_v_self->_trans_idx[__pyx_v_admx_idx2])[__pyx_v_snp_idx])[__pyx_v_node_idx2])[__pyx_v_nxt_node_idx2]);

                              /* "LDModel.pyx":1193
 *                                                                     nxt_node1 = self._trans_idx[admx_idx1][snp_idx][node_idx1][nxt_node_idx1]
 *                                                                     nxt_node2 = self._trans_idx[admx_idx2][snp_idx][node_idx2][nxt_node_idx2]
 *                                                                     nxt_node3 = self._trans_idx[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]             # <<<<<<<<<<<<<<
 *                                                                     nxt_node4 = self._trans_idx[admx_idx4][snp_idx][node_idx4][nxt_node_idx4]
 *                                                                     if ibd == 0:
 */
                              __pyx_v_nxt_node3 = ((((__pyx_v_self->_trans_idx[__pyx_v_admx_idx3])[__pyx_v_snp_idx])[__pyx_v_node_idx3])[__pyx_v_nxt_node_idx3]);

                              /* "LDModel.pyx":1194
 *                                                                     nxt_node2 = self._trans_idx[admx_idx2][snp_idx][node_idx2][nxt_node_idx2]
 *                                                                     nxt_node3 = self._trans_idx[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]
 *                                                                     nxt_node4 = self._trans_idx[admx_idx4][snp_idx][node_idx4][nxt_node_idx4]             # <<<<<<<<<<<<<<
 *                                                                     if ibd == 0:
 *                                                                         a=1
 */
                              __pyx_v_nxt_node4 = ((((__pyx_v_self->_trans_idx[__pyx_v_admx_idx4])[__pyx_v_snp_idx])[__pyx_v_node_idx4])[__pyx_v_nxt_node_idx4]);

                              /* "LDModel.pyx":1195
 *                                                                     nxt_node3 = self._trans_idx[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]
 *                                                                     nxt_node4 = self._trans_idx[admx_idx4][snp_idx][node_idx4][nxt_node_idx4]
 *                                                                     if ibd == 0:             # <<<<<<<<<<<<<<
 *                                                                         a=1
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 */
                              __pyx_t_31 = (__pyx_v_ibd == 0);
                              if (__pyx_t_31) {

                                /* "LDModel.pyx":1196
 *                                                                     nxt_node4 = self._trans_idx[admx_idx4][snp_idx][node_idx4][nxt_node_idx4]
 *                                                                     if ibd == 0:
 *                                                                         a=1             # <<<<<<<<<<<<<<
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 */
                                __pyx_v_a = 1;

                                /* "LDModel.pyx":1197
 *                                                                     if ibd == 0:
 *                                                                         a=1
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1] * \
 */
                                __pyx_t_32 = __pyx_v_snp_idx_win;
                                __pyx_t_33 = __pyx_v_admx_idx1;
                                __pyx_t_34 = __pyx_v_admx_idx2;
                                __pyx_t_35 = __pyx_v_admx_idx3;
                                __pyx_t_36 = __pyx_v_admx_idx4;
                                __pyx_t_37 = __pyx_v_node_idx1;
                                __pyx_t_38 = __pyx_v_node_idx2;
                                __pyx_t_39 = __pyx_v_node_idx3;
                                __pyx_t_40 = __pyx_v_node_idx4;
                                __pyx_t_41 = __pyx_v_ibd;

                                /* "LDModel.pyx":1203
 *                                                                         self._trans[admx_idx3][snp_idx][node_idx3][nxt_node_idx3] * \
 *                                                                         self._trans[admx_idx4][snp_idx][node_idx4][nxt_node_idx4] * \
 *                                                                         self._emission_prob_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4] #* \             # <<<<<<<<<<<<<<
 *                                                                         #self._s[snp_idx][ibd][nxt_ibd]
 *                                                                     else:
 */
                                ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_t_32])[__pyx_t_33])[__pyx_t_34])[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41]) = (((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_t_32])[__pyx_t_33])[__pyx_t_34])[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41]) + (((((((((((((((__pyx_v_self->_backward_probs_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_node1])[__pyx_v_nxt_node2])[__pyx_v_nxt_node3])[__pyx_v_nxt_node4])[__pyx_v_nxt_ibd]) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx1])[__pyx_v_snp_idx])[__pyx_v_node_idx1])[__pyx_v_nxt_node_idx1])) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx2])[__pyx_v_snp_idx])[__pyx_v_node_idx2])[__pyx_v_nxt_node_idx2])) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx3])[__pyx_v_snp_idx])[__pyx_v_node_idx3])[__pyx_v_nxt_node_idx3])) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx4])[__pyx_v_snp_idx])[__pyx_v_node_idx4])[__pyx_v_nxt_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_node1])[__pyx_v_nxt_node2])[__pyx_v_nxt_node3])[__pyx_v_nxt_node4])));
                                goto __pyx_L49;
                              }
                              /*else*/ {

                                /* "LDModel.pyx":1206
 *                                                                         #self._s[snp_idx][ibd][nxt_ibd]
 *                                                                     else:
 *                                                                         if self._chr1[snp_idx+1] == self._chr3[snp_idx+1]:             # <<<<<<<<<<<<<<
 *                                                                             eps_or_1_eps = 1 - eps
 *                                                                         else:
 */
                                __pyx_t_31 = ((__pyx_v_self->_chr1[(__pyx_v_snp_idx + 1)]) == (__pyx_v_self->_chr3[(__pyx_v_snp_idx + 1)]));
                                if (__pyx_t_31) {

                                  /* "LDModel.pyx":1207
 *                                                                     else:
 *                                                                         if self._chr1[snp_idx+1] == self._chr3[snp_idx+1]:
 *                                                                             eps_or_1_eps = 1 - eps             # <<<<<<<<<<<<<<
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps
 */
                                  __pyx_v_eps_or_1_eps = (1.0 - __pyx_v_7LDModel_eps);
                                  goto __pyx_L50;
                                }
                                /*else*/ {

                                  /* "LDModel.pyx":1209
 *                                                                             eps_or_1_eps = 1 - eps
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps             # <<<<<<<<<<<<<<
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 */
                                  __pyx_v_eps_or_1_eps = __pyx_v_7LDModel_eps;
                                }
                                __pyx_L50:;

                                /* "LDModel.pyx":1210
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         min(self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1],
 */
                                __pyx_t_32 = __pyx_v_snp_idx_win;
                                __pyx_t_33 = __pyx_v_admx_idx1;
                                __pyx_t_34 = __pyx_v_admx_idx2;
                                __pyx_t_35 = __pyx_v_admx_idx3;
                                __pyx_t_36 = __pyx_v_admx_idx4;
                                __pyx_t_37 = __pyx_v_node_idx1;
                                __pyx_t_38 = __pyx_v_node_idx2;
                                __pyx_t_39 = __pyx_v_node_idx3;
                                __pyx_t_40 = __pyx_v_node_idx4;
                                __pyx_t_41 = __pyx_v_ibd;

                                /* "LDModel.pyx":1213
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         min(self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1],
 *                                                                             self._trans[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]) * \             # <<<<<<<<<<<<<<
 *                                                                         self._trans[admx_idx2][snp_idx][node_idx2][nxt_node_idx2] * \
 *                                                                         self._trans[admx_idx4][snp_idx][node_idx4][nxt_node_idx4] * \
 */
                                __pyx_t_42 = ((((__pyx_v_self->_trans[__pyx_v_admx_idx3])[__pyx_v_snp_idx])[__pyx_v_node_idx3])[__pyx_v_nxt_node_idx3]);

                                /* "LDModel.pyx":1212
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         min(self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1],             # <<<<<<<<<<<<<<
 *                                                                             self._trans[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]) * \
 *                                                                         self._trans[admx_idx2][snp_idx][node_idx2][nxt_node_idx2] * \
 */
                                __pyx_t_43 = ((((__pyx_v_self->_trans[__pyx_v_admx_idx1])[__pyx_v_snp_idx])[__pyx_v_node_idx1])[__pyx_v_nxt_node_idx1]);

                                /* "LDModel.pyx":1213
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         min(self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1],
 *                                                                             self._trans[admx_idx3][snp_idx][node_idx3][nxt_node_idx3]) * \             # <<<<<<<<<<<<<<
 *                                                                         self._trans[admx_idx2][snp_idx][node_idx2][nxt_node_idx2] * \
 *                                                                         self._trans[admx_idx4][snp_idx][node_idx4][nxt_node_idx4] * \
 */
                                if ((__pyx_t_42 < __pyx_t_43)) {
                                  __pyx_t_44 = __pyx_t_42;
                                } else {
                                  __pyx_t_44 = __pyx_t_43;
                                }

                                /* "LDModel.pyx":1210
 *                                                                         else:
 *                                                                             eps_or_1_eps = eps
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                                         self._backward_probs_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4][nxt_ibd] * \
 *                                                                         min(self._trans[admx_idx1][snp_idx][node_idx1][nxt_node_idx1],
 */
                                ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_t_32])[__pyx_t_33])[__pyx_t_34])[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41]) = (((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_t_32])[__pyx_t_33])[__pyx_t_34])[__pyx_t_35])[__pyx_t_36])[__pyx_t_37])[__pyx_t_38])[__pyx_t_39])[__pyx_t_40])[__pyx_t_41]) + (((((((((((((((__pyx_v_self->_backward_probs_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_node1])[__pyx_v_nxt_node2])[__pyx_v_nxt_node3])[__pyx_v_nxt_node4])[__pyx_v_nxt_ibd]) * __pyx_t_44) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx2])[__pyx_v_snp_idx])[__pyx_v_node_idx2])[__pyx_v_nxt_node_idx2])) * ((((__pyx_v_self->_trans[__pyx_v_admx_idx4])[__pyx_v_snp_idx])[__pyx_v_node_idx4])[__pyx_v_nxt_node_idx4])) * (((((((((__pyx_v_self->_emission_prob_ibd_admx[(__pyx_v_snp_idx_win + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_node1])[__pyx_v_nxt_node2])[__pyx_v_nxt_node3])[__pyx_v_nxt_node4])) * __pyx_v_eps_or_1_eps));
                              }
                              __pyx_L49:;
                            }
                          }
                        }
                      }

                      /* "LDModel.pyx":1218
 *                                                                         self._emission_prob_ibd_admx[snp_idx_win+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_node1][nxt_node2][nxt_node3][nxt_node4] * eps_or_1_eps
 *                                                                         #self._s[snp_idx][ibd][nxt_ibd] * \
 *                                                 sum += self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]             # <<<<<<<<<<<<<<
 * 
 *             # rescaling to avoid underflow
 */
                      __pyx_v_sum = (__pyx_v_sum + ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1221
 * 
 *             # rescaling to avoid underflow
 *             if sum == 0:             # <<<<<<<<<<<<<<
 *                 sum = 1
 *             for admx_idx1 in range(self.K):
 */
    __pyx_t_31 = (__pyx_v_sum == 0.0);
    if (__pyx_t_31) {

      /* "LDModel.pyx":1222
 *             # rescaling to avoid underflow
 *             if sum == 0:
 *                 sum = 1             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
      __pyx_v_sum = 1.0;
      goto __pyx_L51;
    }
    __pyx_L51:;

    /* "LDModel.pyx":1223
 *             if sum == 0:
 *                 sum = 1
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_6 = __pyx_v_self->K;
    for (__pyx_t_7 = 0; __pyx_t_7 < __pyx_t_6; __pyx_t_7+=1) {
      __pyx_v_admx_idx1 = __pyx_t_7;

      /* "LDModel.pyx":1224
 *                 sum = 1
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx2 = __pyx_t_9;

        /* "LDModel.pyx":1225
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx3 = __pyx_t_11;

          /* "LDModel.pyx":1226
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx4 = __pyx_t_13;

            /* "LDModel.pyx":1227
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_14 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_node_idx1 = __pyx_t_15;

              /* "LDModel.pyx":1228
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_16 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_17 = 0; __pyx_t_17 < __pyx_t_16; __pyx_t_17+=1) {
                __pyx_v_node_idx2 = __pyx_t_17;

                /* "LDModel.pyx":1229
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 */
                __pyx_t_18 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_node_idx3 = __pyx_t_19;

                  /* "LDModel.pyx":1230
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 */
                  __pyx_t_20 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_node_idx4 = __pyx_t_21;

                    /* "LDModel.pyx":1231
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)
 */
                    for (__pyx_t_22 = 0; __pyx_t_22 < 2; __pyx_t_22+=1) {
                      __pyx_v_ibd = __pyx_t_22;

                      /* "LDModel.pyx":1233
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)             # <<<<<<<<<<<<<<
 *                                                 #print " snp_idx: " + str(snp_idx) + " admx_idx1: " + str(admx_idx1) + " admx_idx2: " + str(admx_idx2) + " admx_idx3: " + str(admx_idx3) + " admx_idx4: " + str(admx_idx4) + \
 *                                                 #" node_idx1: " + str(node_idx1) + " node_idx2: " + str(node_idx2) + " node_idx3: " + str(node_idx3) + " node_idx4: " + str(node_idx4) + " ibd: " + str(ibd),
 */
                      if (unlikely(__pyx_v_sum == 0)) {
                        PyErr_Format(PyExc_ZeroDivisionError, "float division");
                        {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      }

                      /* "LDModel.pyx":1232
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                                 self._backward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd] * (1/sum)
 *                                                 #print " snp_idx: " + str(snp_idx) + " admx_idx1: " + str(admx_idx1) + " admx_idx2: " + str(admx_idx2) + " admx_idx3: " + str(admx_idx3) + " admx_idx4: " + str(admx_idx4) + \
 */
                      ((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) = (((((((((((__pyx_v_self->_backward_probs_ibd_admx[__pyx_v_snp_idx_win])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]) * (1.0 / __pyx_v_sum));
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1237
 *                                                 #" node_idx1: " + str(node_idx1) + " node_idx2: " + str(node_idx2) + " node_idx3: " + str(node_idx3) + " node_idx4: " + str(node_idx4) + " ibd: " + str(ibd),
 *                                                 #print " backward prob: " + str(self._backward_probs_ibd_admx[snp_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 *             snp_idx_win -= 1             # <<<<<<<<<<<<<<
 * 
 *     cpdef top_level_alloc_mem(self):
 */
    __pyx_v_snp_idx_win = (__pyx_v_snp_idx_win - 1);
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_AddTraceback("LDModel.LDModel.calc_backward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_63calc_backward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_63calc_backward_probs_ibd_admx(PyObject *__pyx_v_self, PyObject *__pyx_arg_win_idx) {
  int __pyx_v_win_idx;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_backward_probs_ibd_admx (wrapper)", 0);
  assert(__pyx_arg_win_idx); {
    __pyx_v_win_idx = __Pyx_PyInt_AsInt(__pyx_arg_win_idx); if (unlikely((__pyx_v_win_idx == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.calc_backward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_62calc_backward_probs_ibd_admx(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((int)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1127
 *             snp_idx_win += 1
 * 
 *     cpdef calc_backward_probs_ibd_admx(self, int win_idx):             # <<<<<<<<<<<<<<
 * 
 *         cdef int snp_idx
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_62calc_backward_probs_ibd_admx(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_backward_probs_ibd_admx", 0);
  __Pyx_TraceCall("calc_backward_probs_ibd_admx", __pyx_f[0], 1127);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_backward_probs_ibd_admx(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1127; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_backward_probs_ibd_admx", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1239
 *             snp_idx_win -= 1
 * 
 *     cpdef top_level_alloc_mem(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_65top_level_alloc_mem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_top_level_alloc_mem(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_alloc_mem", 0);
  __Pyx_TraceCall("top_level_alloc_mem", __pyx_f[0], 1239);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__top_level_alloc_mem); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_65top_level_alloc_mem)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1247
 *         cdef int ibd
 * 
 *         self._top_level_ems_prob = <double ******> malloc(self.get_num_windows() * sizeof(double *****))             # <<<<<<<<<<<<<<
 *         self._top_level_forward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         self._top_level_backward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 */
  __pyx_v_self->_top_level_ems_prob = ((double ******)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double *****)))));

  /* "LDModel.pyx":1248
 * 
 *         self._top_level_ems_prob = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         self._top_level_forward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))             # <<<<<<<<<<<<<<
 *         self._top_level_backward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         for win_idx in range(self.get_num_windows()):
 */
  __pyx_v_self->_top_level_forward_probs = ((double ******)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double *****)))));

  /* "LDModel.pyx":1249
 *         self._top_level_ems_prob = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         self._top_level_forward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         self._top_level_backward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:
 */
  __pyx_v_self->_top_level_backward_probs = ((double ******)malloc((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) * (sizeof(double *****)))));

  /* "LDModel.pyx":1250
 *         self._top_level_forward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         self._top_level_backward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             if self._ibs[win_idx]:
 *                 self._top_level_ems_prob[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1251
 *         self._top_level_backward_probs = <double ******> malloc(self.get_num_windows() * sizeof(double *****))
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 self._top_level_ems_prob[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_forward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1252
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:
 *                 self._top_level_ems_prob[win_idx] = <double *****> malloc(self.K * sizeof(double ****))             # <<<<<<<<<<<<<<
 *                 self._top_level_forward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_backward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 */
      (__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx]) = ((double *****)malloc((__pyx_v_self->K * (sizeof(double ****)))));

      /* "LDModel.pyx":1253
 *             if self._ibs[win_idx]:
 *                 self._top_level_ems_prob[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_forward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))             # <<<<<<<<<<<<<<
 *                 self._top_level_backward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 for admx_idx1 in range(self.K):
 */
      (__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx]) = ((double *****)malloc((__pyx_v_self->K * (sizeof(double ****)))));

      /* "LDModel.pyx":1254
 *                 self._top_level_ems_prob[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_forward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_backward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     self._top_level_ems_prob[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 */
      (__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx]) = ((double *****)malloc((__pyx_v_self->K * (sizeof(double ****)))));

      /* "LDModel.pyx":1255
 *                 self._top_level_forward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 self._top_level_backward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     self._top_level_ems_prob[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_forward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx1 = __pyx_t_6;

        /* "LDModel.pyx":1256
 *                 self._top_level_backward_probs[win_idx] = <double *****> malloc(self.K * sizeof(double ****))
 *                 for admx_idx1 in range(self.K):
 *                     self._top_level_ems_prob[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *                     self._top_level_forward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_backward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 */
        ((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1]) = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

        /* "LDModel.pyx":1257
 *                 for admx_idx1 in range(self.K):
 *                     self._top_level_ems_prob[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_forward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *                     self._top_level_backward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     for admx_idx2 in range(self.K):
 */
        ((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1]) = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

        /* "LDModel.pyx":1258
 *                     self._top_level_ems_prob[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_forward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_backward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 */
        ((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1]) = ((double ****)malloc((__pyx_v_self->K * (sizeof(double ***)))));

        /* "LDModel.pyx":1259
 *                     self._top_level_forward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     self._top_level_backward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx2 = __pyx_t_8;

          /* "LDModel.pyx":1260
 *                     self._top_level_backward_probs[win_idx][admx_idx1] = <double ****> malloc(self.K * sizeof(double ***))
 *                     for admx_idx2 in range(self.K):
 *                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))             # <<<<<<<<<<<<<<
 *                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 */
          (((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double ***)malloc((__pyx_v_self->K * (sizeof(double **)))));

          /* "LDModel.pyx":1261
 *                     for admx_idx2 in range(self.K):
 *                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))             # <<<<<<<<<<<<<<
 *                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         for admx_idx3 in range(self.K):
 */
          (((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double ***)malloc((__pyx_v_self->K * (sizeof(double **)))));

          /* "LDModel.pyx":1262
 *                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 */
          (((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2]) = ((double ***)malloc((__pyx_v_self->K * (sizeof(double **)))));

          /* "LDModel.pyx":1263
 *                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx3 = __pyx_t_10;

            /* "LDModel.pyx":1264
 *                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2] = <double ***> malloc(self.K * sizeof(double **))
 *                         for admx_idx3 in range(self.K):
 *                             self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))             # <<<<<<<<<<<<<<
 *                             self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 */
            ((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double **)malloc((__pyx_v_self->K * (sizeof(double *)))));

            /* "LDModel.pyx":1265
 *                         for admx_idx3 in range(self.K):
 *                             self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))             # <<<<<<<<<<<<<<
 *                             self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             for admx_idx4 in range(self.K):
 */
            ((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double **)malloc((__pyx_v_self->K * (sizeof(double *)))));

            /* "LDModel.pyx":1266
 *                             self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 */
            ((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3]) = ((double **)malloc((__pyx_v_self->K * (sizeof(double *)))));

            /* "LDModel.pyx":1267
 *                             self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 */
            __pyx_t_11 = __pyx_v_self->K;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_admx_idx4 = __pyx_t_12;

              /* "LDModel.pyx":1268
 *                             self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3] = <double **> malloc(self.K * sizeof(double *))
 *                             for admx_idx4 in range(self.K):
 *                                 self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *                                 self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 */
              (((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double *)malloc((2 * (sizeof(double)))));

              /* "LDModel.pyx":1269
 *                             for admx_idx4 in range(self.K):
 *                                 self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *                                 self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 for ibd in range(2):
 */
              (((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double *)malloc((2 * (sizeof(double)))));

              /* "LDModel.pyx":1270
 *                                 self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
              (((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4]) = ((double *)malloc((2 * (sizeof(double)))));

              /* "LDModel.pyx":1271
 *                                 self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
              for (__pyx_t_13 = 0; __pyx_t_13 < 2; __pyx_t_13+=1) {
                __pyx_v_ibd = __pyx_t_13;

                /* "LDModel.pyx":1272
 *                                 self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4] = <double *> malloc(2 * sizeof(double))
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
                ((((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;

                /* "LDModel.pyx":1273
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 */
                ((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;

                /* "LDModel.pyx":1274
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 * 
 *     cpdef top_level_init(self):
 */
                ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;
              }
            }
          }
        }
      }
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_alloc_mem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_65top_level_alloc_mem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_65top_level_alloc_mem(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("top_level_alloc_mem (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_64top_level_alloc_mem(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1239
 *             snp_idx_win -= 1
 * 
 *     cpdef top_level_alloc_mem(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_64top_level_alloc_mem(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_alloc_mem", 0);
  __Pyx_TraceCall("top_level_alloc_mem", __pyx_f[0], 1239);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->top_level_alloc_mem(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1239; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_alloc_mem", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1276
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 *     cpdef top_level_init(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_67top_level_init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_top_level_init(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_init", 0);
  __Pyx_TraceCall("top_level_init", __pyx_f[0], 1276);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__top_level_init); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_67top_level_init)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1284
 *         cdef int ibd
 * 
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1286
 *         for win_idx in range(self.get_num_windows()):
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1287
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx1 = __pyx_t_6;

        /* "LDModel.pyx":1288
 *             if self._ibs[win_idx]:
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx2 = __pyx_t_8;

          /* "LDModel.pyx":1289
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx3 = __pyx_t_10;

            /* "LDModel.pyx":1290
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
            __pyx_t_11 = __pyx_v_self->K;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_admx_idx4 = __pyx_t_12;

              /* "LDModel.pyx":1291
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
              for (__pyx_t_13 = 0; __pyx_t_13 < 2; __pyx_t_13+=1) {
                __pyx_v_ibd = __pyx_t_13;

                /* "LDModel.pyx":1292
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 */
                ((((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;

                /* "LDModel.pyx":1293
 *                                 for ibd in range(2):
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 */
                ((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;

                /* "LDModel.pyx":1294
 *                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0             # <<<<<<<<<<<<<<
 * 
 *     cpdef top_level_print(self):
 */
                ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;
              }
            }
          }
        }
      }
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_67top_level_init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_67top_level_init(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("top_level_init (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_66top_level_init(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1276
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 *     cpdef top_level_init(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_66top_level_init(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_init", 0);
  __Pyx_TraceCall("top_level_init", __pyx_f[0], 1276);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->top_level_init(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_init", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1296
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 *     cpdef top_level_print(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_69top_level_print(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_top_level_print(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  double __pyx_v_curr_gamma;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  PyObject *__pyx_t_14 = NULL;
  PyObject *__pyx_t_15 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_print", 0);
  __Pyx_TraceCall("top_level_print", __pyx_f[0], 1296);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__top_level_print); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_69top_level_print)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1304
 *         cdef int ibd
 * 
 *         self._probs_file.write("ind1 ind2 win admx1 admx2 admx3 admx4 ibd forward backward gamma emission alpha1 alpha2 alpha3 alpha4 s1 s2 s3 s4\n")             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             #print "initializing window %d" % win_idx
 */
  __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_probs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_57), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":1305
 * 
 *         self._probs_file.write("ind1 ind2 win admx1 admx2 admx3 admx4 ibd forward backward gamma emission alpha1 alpha2 alpha3 alpha4 s1 s2 s3 s4\n")
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1307
 *         for win_idx in range(self.get_num_windows()):
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1308
 *             #print "initializing window %d" % win_idx
 *             if self._ibs[win_idx]:
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx1 = __pyx_t_6;

        /* "LDModel.pyx":1309
 *             if self._ibs[win_idx]:
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx2 = __pyx_t_8;

          /* "LDModel.pyx":1310
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx3 = __pyx_t_10;

            /* "LDModel.pyx":1311
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 */
            __pyx_t_11 = __pyx_v_self->K;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_admx_idx4 = __pyx_t_12;

              /* "LDModel.pyx":1312
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +
 */
              for (__pyx_t_13 = 0; __pyx_t_13 < 2; __pyx_t_13+=1) {
                __pyx_v_ibd = __pyx_t_13;

                /* "LDModel.pyx":1313
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]             # <<<<<<<<<<<<<<
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +
 *                                     str(admx_idx1) + " " +
 */
                __pyx_v_curr_gamma = (((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) * ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]));

                /* "LDModel.pyx":1314
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx1) + " " +
 *                                     str(admx_idx2) + " " +
 */
                __pyx_t_2 = PyObject_GetAttr(__pyx_v_self->_probs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);

                /* "LDModel.pyx":1315
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +
 *                                     str(admx_idx1) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx2) + " " +
 *                                     str(admx_idx3) + " " +
 */
                __pyx_t_1 = PyBytes_FromString(__pyx_v_self->_prefix_string); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(((PyObject *)__pyx_t_1));
                __pyx_t_14 = PyNumber_Add(((PyObject *)__pyx_t_1), ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;

                /* "LDModel.pyx":1314
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx1) + " " +
 *                                     str(admx_idx2) + " " +
 */
                __pyx_t_1 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1315
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +
 *                                     str(admx_idx1) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx2) + " " +
 *                                     str(admx_idx3) + " " +
 */
                __pyx_t_15 = PyInt_FromLong(__pyx_v_admx_idx1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1316
 *                                     self._probs_file.write(self._prefix_string + " " + str(win_idx) + " " +
 *                                     str(admx_idx1) + " " +
 *                                     str(admx_idx2) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx3) + " " +
 *                                     str(admx_idx4) + " " +
 */
                __pyx_t_14 = PyInt_FromLong(__pyx_v_admx_idx2); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1315; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":1317
 *                                     str(admx_idx1) + " " +
 *                                     str(admx_idx2) + " " +
 *                                     str(admx_idx3) + " " +             # <<<<<<<<<<<<<<
 *                                     str(admx_idx4) + " " +
 *                                     str(ibd) + " " +
 */
                __pyx_t_1 = PyInt_FromLong(__pyx_v_admx_idx3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1316; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1318
 *                                     str(admx_idx2) + " " +
 *                                     str(admx_idx3) + " " +
 *                                     str(admx_idx4) + " " +             # <<<<<<<<<<<<<<
 *                                     str(ibd) + " " +
 *                                     str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 */
                __pyx_t_15 = PyInt_FromLong(__pyx_v_admx_idx4); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1317; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1319
 *                                     str(admx_idx3) + " " +
 *                                     str(admx_idx4) + " " +
 *                                     str(ibd) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 */
                __pyx_t_14 = PyInt_FromLong(__pyx_v_ibd); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1318; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":1320
 *                                     str(admx_idx4) + " " +
 *                                     str(ibd) + " " +
 *                                     str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(curr_gamma) + " " +
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1319; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1321
 *                                     str(ibd) + " " +
 *                                     str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(curr_gamma) + " " +
 *                                     str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 */
                __pyx_t_15 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1322
 *                                     str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(curr_gamma) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._alphas[admx_idx1]) + " " +
 */
                __pyx_t_14 = PyFloat_FromDouble(__pyx_v_curr_gamma); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1321; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":1323
 *                                     str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(curr_gamma) + " " +
 *                                     str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._alphas[admx_idx1]) + " " +
 *                                     str(self._alphas[admx_idx2]) + " " +
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1322; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1324
 *                                     str(curr_gamma) + " " +
 *                                     str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._alphas[admx_idx1]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._alphas[admx_idx2]) + " " +
 *                                     str(self._alphas[admx_idx3]) + " " +
 */
                __pyx_t_15 = PyFloat_FromDouble((__pyx_v_self->_alphas[__pyx_v_admx_idx1])); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1323; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1325
 *                                     str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " +
 *                                     str(self._alphas[admx_idx1]) + " " +
 *                                     str(self._alphas[admx_idx2]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._alphas[admx_idx3]) + " " +
 *                                     str(self._alphas[admx_idx4]) + " " +
 */
                __pyx_t_14 = PyFloat_FromDouble((__pyx_v_self->_alphas[__pyx_v_admx_idx2])); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1324; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":1326
 *                                     str(self._alphas[admx_idx1]) + " " +
 *                                     str(self._alphas[admx_idx2]) + " " +
 *                                     str(self._alphas[admx_idx3]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._alphas[admx_idx4]) + " " +
 *                                     str(self._s[0][win_idx][0][0]) + " " +
 */
                __pyx_t_1 = PyFloat_FromDouble((__pyx_v_self->_alphas[__pyx_v_admx_idx3])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1325; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1327
 *                                     str(self._alphas[admx_idx2]) + " " +
 *                                     str(self._alphas[admx_idx3]) + " " +
 *                                     str(self._alphas[admx_idx4]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._s[0][win_idx][0][0]) + " " +
 *                                     str(self._s[0][win_idx][0][1]) + " " +
 */
                __pyx_t_15 = PyFloat_FromDouble((__pyx_v_self->_alphas[__pyx_v_admx_idx4])); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1326; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1328
 *                                     str(self._alphas[admx_idx3]) + " " +
 *                                     str(self._alphas[admx_idx4]) + " " +
 *                                     str(self._s[0][win_idx][0][0]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._s[0][win_idx][0][1]) + " " +
 *                                     str(self._s[0][win_idx][1][0]) + " " +
 */
                __pyx_t_14 = PyFloat_FromDouble(((((__pyx_v_self->_s[0])[__pyx_v_win_idx])[0])[0])); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                /* "LDModel.pyx":1329
 *                                     str(self._alphas[admx_idx4]) + " " +
 *                                     str(self._s[0][win_idx][0][0]) + " " +
 *                                     str(self._s[0][win_idx][0][1]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._s[0][win_idx][1][0]) + " " +
 *                                     str(self._s[0][win_idx][1][1]) + "\n")
 */
                __pyx_t_1 = PyFloat_FromDouble(((((__pyx_v_self->_s[0])[__pyx_v_win_idx])[0])[1])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_15 = PyTuple_New(1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                PyTuple_SET_ITEM(__pyx_t_15, 0, __pyx_t_1);
                __Pyx_GIVEREF(__pyx_t_1);
                __pyx_t_1 = 0;
                __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_15), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(((PyObject *)__pyx_t_15)); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, __pyx_t_1); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1328; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;

                /* "LDModel.pyx":1330
 *                                     str(self._s[0][win_idx][0][0]) + " " +
 *                                     str(self._s[0][win_idx][0][1]) + " " +
 *                                     str(self._s[0][win_idx][1][0]) + " " +             # <<<<<<<<<<<<<<
 *                                     str(self._s[0][win_idx][1][1]) + "\n")
 * 
 */
                __pyx_t_15 = PyFloat_FromDouble(((((__pyx_v_self->_s[0])[__pyx_v_win_idx])[1])[0])); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __pyx_t_14 = PyTuple_New(1); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                PyTuple_SET_ITEM(__pyx_t_14, 0, __pyx_t_15);
                __Pyx_GIVEREF(__pyx_t_15);
                __pyx_t_15 = 0;
                __pyx_t_15 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_14), NULL); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(((PyObject *)__pyx_t_14)); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, __pyx_t_15); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1329; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __pyx_t_15 = PyNumber_Add(__pyx_t_14, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_15);
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;

                /* "LDModel.pyx":1331
 *                                     str(self._s[0][win_idx][0][1]) + " " +
 *                                     str(self._s[0][win_idx][1][0]) + " " +
 *                                     str(self._s[0][win_idx][1][1]) + "\n")             # <<<<<<<<<<<<<<
 * 
 * #    cpdef posterior_decoding_ibd_admx(self, int win_idx):
 */
                __pyx_t_14 = PyFloat_FromDouble(((((__pyx_v_self->_s[0])[__pyx_v_win_idx])[1])[1])); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Add(__pyx_t_15, __pyx_t_14); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1330; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_15); __pyx_t_15 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
                __pyx_t_14 = PyNumber_Add(__pyx_t_1, ((PyObject *)__pyx_kp_s_1)); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1331; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_14);
                __Pyx_GIVEREF(__pyx_t_14);
                __pyx_t_14 = 0;
                __pyx_t_14 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_14)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_14);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_t_14); __pyx_t_14 = 0;
              }
            }
          }
        }
      }
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_14);
  __Pyx_XDECREF(__pyx_t_15);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_print", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_69top_level_print(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_69top_level_print(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("top_level_print (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_68top_level_print(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1296
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0
 * 
 *     cpdef top_level_print(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_68top_level_print(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("top_level_print", 0);
  __Pyx_TraceCall("top_level_print", __pyx_f[0], 1296);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->top_level_print(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1296; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.top_level_print", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1411
 * #        return (a1,a2,a3,a4,d1,d2,d3,d4,i)
 * 
 *     cpdef print_inner_probs(self, win_idx):             # <<<<<<<<<<<<<<
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_71print_inner_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_win_idx); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_print_inner_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_win_idx, int __pyx_skip_dispatch) {
  PyObject *__pyx_v_snp_idx_win = NULL;
  int __pyx_v_snp_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  long __pyx_v_ibd;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  long __pyx_t_23;
  PyObject *__pyx_t_24 = NULL;
  Py_ssize_t __pyx_t_25;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("print_inner_probs", 0);
  __Pyx_TraceCall("print_inner_probs", __pyx_f[0], 1411);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__print_inner_probs); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_71print_inner_probs)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_INCREF(__pyx_v_win_idx);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_v_win_idx);
      __Pyx_GIVEREF(__pyx_v_win_idx);
      __pyx_t_3 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __pyx_t_3 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1412
 * 
 *     cpdef print_inner_probs(self, win_idx):
 *         snp_idx_win = 0             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 */
  __Pyx_INCREF(__pyx_int_0);
  __pyx_v_snp_idx_win = __pyx_int_0;

  /* "LDModel.pyx":1413
 *     cpdef print_inner_probs(self, win_idx):
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):             # <<<<<<<<<<<<<<
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 */
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_win_idx); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_5 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_t_4);
  __pyx_t_4 = __Pyx_PyInt_AsInt(__pyx_v_win_idx); if (unlikely((__pyx_t_4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1413; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  for (__pyx_t_6 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_t_4); __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
    __pyx_v_snp_idx = __pyx_t_6;

    /* "LDModel.pyx":1414
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 */
    __pyx_t_7 = __pyx_v_self->K;
    for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
      __pyx_v_admx_idx1 = __pyx_t_8;

      /* "LDModel.pyx":1415
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 */
      __pyx_t_9 = __pyx_v_self->K;
      for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
        __pyx_v_admx_idx2 = __pyx_t_10;

        /* "LDModel.pyx":1416
 *             for admx_idx1 in range(self.K):
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 */
        __pyx_t_11 = __pyx_v_self->K;
        for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
          __pyx_v_admx_idx3 = __pyx_t_12;

          /* "LDModel.pyx":1417
 *                 for admx_idx2 in range(self.K):
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 */
          __pyx_t_13 = __pyx_v_self->K;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_admx_idx4 = __pyx_t_14;

            /* "LDModel.pyx":1418
 *                     for admx_idx3 in range(self.K):
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):             # <<<<<<<<<<<<<<
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 */
            __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_v_snp_idx]);
            for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
              __pyx_v_node_idx1 = __pyx_t_16;

              /* "LDModel.pyx":1419
 *                         for admx_idx4 in range(self.K):
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):             # <<<<<<<<<<<<<<
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 */
              __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_v_snp_idx]);
              for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                __pyx_v_node_idx2 = __pyx_t_18;

                /* "LDModel.pyx":1420
 *                             for node_idx1 in range(self._layer_state_nums[admx_idx1][snp_idx]):
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):             # <<<<<<<<<<<<<<
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 */
                __pyx_t_19 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_v_snp_idx]);
                for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_19; __pyx_t_20+=1) {
                  __pyx_v_node_idx3 = __pyx_t_20;

                  /* "LDModel.pyx":1421
 *                                 for node_idx2 in range(self._layer_state_nums[admx_idx2][snp_idx]):
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):             # <<<<<<<<<<<<<<
 *                                             for ibd in range(2):
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +
 */
                  __pyx_t_21 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_v_snp_idx]);
                  for (__pyx_t_22 = 0; __pyx_t_22 < __pyx_t_21; __pyx_t_22+=1) {
                    __pyx_v_node_idx4 = __pyx_t_22;

                    /* "LDModel.pyx":1422
 *                                     for node_idx3 in range(self._layer_state_nums[admx_idx3][snp_idx]):
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +
 *                                                           str(admx_idx1) + " " +
 */
                    for (__pyx_t_23 = 0; __pyx_t_23 < 2; __pyx_t_23+=1) {
                      __pyx_v_ibd = __pyx_t_23;

                      /* "LDModel.pyx":1423
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx1) + " " +
 *                                                           str(admx_idx2) + " " +
 */
                      __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_inner_probs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_1);

                      /* "LDModel.pyx":1424
 *                                             for ibd in range(2):
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +
 *                                                           str(admx_idx1) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx2) + " " +
 *                                                           str(admx_idx3) + " " +
 */
                      __pyx_t_3 = PyBytes_FromString(__pyx_v_self->_prefix_string); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(((PyObject *)__pyx_t_3));
                      __pyx_t_2 = PyNumber_Add(((PyObject *)__pyx_t_3), ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;

                      /* "LDModel.pyx":1423
 *                                         for node_idx4 in range(self._layer_state_nums[admx_idx4][snp_idx]):
 *                                             for ibd in range(2):
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx1) + " " +
 *                                                           str(admx_idx2) + " " +
 */
                      __pyx_t_3 = PyInt_FromLong(__pyx_v_snp_idx); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_24 = PyTuple_New(1); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_3);
                      __Pyx_GIVEREF(__pyx_t_3);
                      __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_24), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(((PyObject *)__pyx_t_24)); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

                      /* "LDModel.pyx":1424
 *                                             for ibd in range(2):
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +
 *                                                           str(admx_idx1) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx2) + " " +
 *                                                           str(admx_idx3) + " " +
 */
                      __pyx_t_24 = PyInt_FromLong(__pyx_v_admx_idx1); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_24);
                      __Pyx_GIVEREF(__pyx_t_24);
                      __pyx_t_24 = 0;
                      __pyx_t_24 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_24); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                      /* "LDModel.pyx":1425
 *                                                 self._inner_probs_file.write(self._prefix_string + " " + str(snp_idx) + " " +
 *                                                           str(admx_idx1) + " " +
 *                                                           str(admx_idx2) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx3) + " " +
 *                                                           str(admx_idx4) + " " +
 */
                      __pyx_t_2 = PyInt_FromLong(__pyx_v_admx_idx2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1424; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

                      /* "LDModel.pyx":1426
 *                                                           str(admx_idx1) + " " +
 *                                                           str(admx_idx2) + " " +
 *                                                           str(admx_idx3) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(admx_idx4) + " " +
 *                                                           str(node_idx1) + " " +
 */
                      __pyx_t_3 = PyInt_FromLong(__pyx_v_admx_idx3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_24 = PyTuple_New(1); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_3);
                      __Pyx_GIVEREF(__pyx_t_3);
                      __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_24), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(((PyObject *)__pyx_t_24)); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1425; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

                      /* "LDModel.pyx":1427
 *                                                           str(admx_idx2) + " " +
 *                                                           str(admx_idx3) + " " +
 *                                                           str(admx_idx4) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(node_idx1) + " " +
 *                                                           str(node_idx2) + " " +
 */
                      __pyx_t_24 = PyInt_FromLong(__pyx_v_admx_idx4); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_24);
                      __Pyx_GIVEREF(__pyx_t_24);
                      __pyx_t_24 = 0;
                      __pyx_t_24 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_24); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1426; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                      /* "LDModel.pyx":1428
 *                                                           str(admx_idx3) + " " +
 *                                                           str(admx_idx4) + " " +
 *                                                           str(node_idx1) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(node_idx2) + " " +
 *                                                           str(node_idx3) + " " +
 */
                      __pyx_t_2 = PyInt_FromLong(__pyx_v_node_idx1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1427; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

                      /* "LDModel.pyx":1429
 *                                                           str(admx_idx4) + " " +
 *                                                           str(node_idx1) + " " +
 *                                                           str(node_idx2) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(node_idx3) + " " +
 *                                                           str(node_idx4) + " " +
 */
                      __pyx_t_3 = PyInt_FromLong(__pyx_v_node_idx2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_24 = PyTuple_New(1); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_3);
                      __Pyx_GIVEREF(__pyx_t_3);
                      __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_24), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(((PyObject *)__pyx_t_24)); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1428; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

                      /* "LDModel.pyx":1430
 *                                                           str(node_idx1) + " " +
 *                                                           str(node_idx2) + " " +
 *                                                           str(node_idx3) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(node_idx4) + " " +
 *                                                           str(ibd) + " " +
 */
                      __pyx_t_24 = PyInt_FromLong(__pyx_v_node_idx3); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_24);
                      __Pyx_GIVEREF(__pyx_t_24);
                      __pyx_t_24 = 0;
                      __pyx_t_24 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_24); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1429; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                      /* "LDModel.pyx":1431
 *                                                           str(node_idx2) + " " +
 *                                                           str(node_idx3) + " " +
 *                                                           str(node_idx4) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(ibd) + " " +
 *                                                           str(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]) + " " +
 */
                      __pyx_t_2 = PyInt_FromLong(__pyx_v_node_idx4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1430; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;

                      /* "LDModel.pyx":1432
 *                                                           str(node_idx3) + " " +
 *                                                           str(node_idx4) + " " +
 *                                                           str(ibd) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]) + " " +
 *                                                           str(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]) + "\n")
 */
                      __pyx_t_3 = PyInt_FromLong(__pyx_v_ibd); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __pyx_t_24 = PyTuple_New(1); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      PyTuple_SET_ITEM(__pyx_t_24, 0, __pyx_t_3);
                      __Pyx_GIVEREF(__pyx_t_3);
                      __pyx_t_3 = 0;
                      __pyx_t_3 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_24), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(((PyObject *)__pyx_t_24)); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, __pyx_t_3); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1431; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;

                      /* "LDModel.pyx":1433
 *                                                           str(node_idx4) + " " +
 *                                                           str(ibd) + " " +
 *                                                           str(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]) + " " +             # <<<<<<<<<<<<<<
 *                                                           str(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]) + "\n")
 *             snp_idx_win+=1
 */
                      __pyx_t_25 = __Pyx_PyIndex_AsSsize_t(__pyx_v_snp_idx_win); if (unlikely((__pyx_t_25 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __pyx_t_24 = PyFloat_FromDouble(((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_25])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_24);
                      __Pyx_GIVEREF(__pyx_t_24);
                      __pyx_t_24 = 0;
                      __pyx_t_24 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, __pyx_t_24); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1432; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __pyx_t_24 = PyNumber_Add(__pyx_t_2, ((PyObject *)__pyx_kp_s_18)); if (unlikely(!__pyx_t_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_24);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                      /* "LDModel.pyx":1434
 *                                                           str(ibd) + " " +
 *                                                           str(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]) + " " +
 *                                                           str(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]) + "\n")             # <<<<<<<<<<<<<<
 *             snp_idx_win+=1
 * 
 */
                      __pyx_t_25 = __Pyx_PyIndex_AsSsize_t(__pyx_v_snp_idx_win); if (unlikely((__pyx_t_25 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __pyx_t_2 = PyFloat_FromDouble((((((((((__pyx_v_self->_emission_prob_ibd_admx[__pyx_t_25])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                      __pyx_t_3 = PyNumber_Add(__pyx_t_24, __pyx_t_2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1433; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      __Pyx_DECREF(__pyx_t_24); __pyx_t_24 = 0;
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_2 = PyNumber_Add(__pyx_t_3, ((PyObject *)__pyx_kp_s_1)); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1434; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
                      __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_3);
                      PyTuple_SET_ITEM(__pyx_t_3, 0, __pyx_t_2);
                      __Pyx_GIVEREF(__pyx_t_2);
                      __pyx_t_2 = 0;
                      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1423; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }

    /* "LDModel.pyx":1435
 *                                                           str(self._forward_probs_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]) + " " +
 *                                                           str(self._emission_prob_ibd_admx[snp_idx_win][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4]) + "\n")
 *             snp_idx_win+=1             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_top_level_ems_probs_inner(self):
 */
    __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_snp_idx_win, __pyx_int_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1435; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_v_snp_idx_win);
    __pyx_v_snp_idx_win = __pyx_t_2;
    __pyx_t_2 = 0;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_24);
  __Pyx_AddTraceback("LDModel.LDModel.print_inner_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_snp_idx_win);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_71print_inner_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_win_idx); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_71print_inner_probs(PyObject *__pyx_v_self, PyObject *__pyx_v_win_idx) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("print_inner_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_70print_inner_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), ((PyObject *)__pyx_v_win_idx));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1411
 * #        return (a1,a2,a3,a4,d1,d2,d3,d4,i)
 * 
 *     cpdef print_inner_probs(self, win_idx):             # <<<<<<<<<<<<<<
 *         snp_idx_win = 0
 *         for snp_idx in range(self.start_snp(win_idx), self.end_snp(win_idx)):
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_70print_inner_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, PyObject *__pyx_v_win_idx) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("print_inner_probs", 0);
  __Pyx_TraceCall("print_inner_probs", __pyx_f[0], 1411);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->print_inner_probs(__pyx_v_self, __pyx_v_win_idx, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1411; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.print_inner_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1437
 *             snp_idx_win+=1
 * 
 *     cpdef calc_top_level_ems_probs_inner(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_73calc_top_level_ems_probs_inner(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_top_level_ems_probs_inner(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_node_idx1;
  int __pyx_v_node_idx2;
  int __pyx_v_node_idx3;
  int __pyx_v_node_idx4;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  PyObject *__pyx_v_last_snp_win = 0;
  CYTHON_UNUSED long __pyx_v_sum;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  Py_ssize_t __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs_inner", 0);
  __Pyx_TraceCall("calc_top_level_ems_probs_inner", __pyx_f[0], 1437);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_58); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_73calc_top_level_ems_probs_inner)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1450
 *         cdef last_snp_win
 * 
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             self._inner_probs_file.write("ind1 ind2 snp admx1 admx2 admx3 admx4 node1 node2 node3 node4 ibd forward emission\n")
 * 
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":1451
 * 
 *         if self._debug:
 *             self._inner_probs_file.write("ind1 ind2 snp admx1 admx2 admx3 admx4 node1 node2 node3 node4 ibd forward emission\n")             # <<<<<<<<<<<<<<
 * 
 *         for win_idx in range(self.get_num_windows()):
 */
    __pyx_t_1 = PyObject_GetAttr(__pyx_v_self->_inner_probs_file, __pyx_n_s__write); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_k_tuple_60), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":1453
 *             self._inner_probs_file.write("ind1 ind2 snp admx1 admx2 admx3 admx4 node1 node2 node3 node4 ibd forward emission\n")
 * 
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             if self._ibs[win_idx]:
 *                 #print "calculating top level ems probs for window: " + str(win_idx)
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1454
 * 
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 #print "calculating top level ems probs for window: " + str(win_idx)
 *                 last_snp_win = self.end_snp(win_idx) - self.start_snp(win_idx)
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1456
 *             if self._ibs[win_idx]:
 *                 #print "calculating top level ems probs for window: " + str(win_idx)
 *                 last_snp_win = self.end_snp(win_idx) - self.start_snp(win_idx)             # <<<<<<<<<<<<<<
 *                 self.emission_prob_ibd_admx_mem_alloc(win_idx)
 *                 self.calc_emission_probs_ibd_admx(win_idx)
 */
      __pyx_t_2 = PyInt_FromLong((((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->end_snp(__pyx_v_self, __pyx_v_win_idx) - ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->start_snp(__pyx_v_self, __pyx_v_win_idx))); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1456; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF(__pyx_v_last_snp_win);
      __pyx_v_last_snp_win = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":1457
 *                 #print "calculating top level ems probs for window: " + str(win_idx)
 *                 last_snp_win = self.end_snp(win_idx) - self.start_snp(win_idx)
 *                 self.emission_prob_ibd_admx_mem_alloc(win_idx)             # <<<<<<<<<<<<<<
 *                 self.calc_emission_probs_ibd_admx(win_idx)
 *                 self.forward_probs_mem_alloc(win_idx)
 */
      __pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->emission_prob_ibd_admx_mem_alloc(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1457; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "LDModel.pyx":1458
 *                 last_snp_win = self.end_snp(win_idx) - self.start_snp(win_idx)
 *                 self.emission_prob_ibd_admx_mem_alloc(win_idx)
 *                 self.calc_emission_probs_ibd_admx(win_idx)             # <<<<<<<<<<<<<<
 *                 self.forward_probs_mem_alloc(win_idx)
 *                 self.calc_forward_probs_ibd_admx(win_idx)
 */
      __pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_emission_probs_ibd_admx(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1458; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "LDModel.pyx":1459
 *                 self.emission_prob_ibd_admx_mem_alloc(win_idx)
 *                 self.calc_emission_probs_ibd_admx(win_idx)
 *                 self.forward_probs_mem_alloc(win_idx)             # <<<<<<<<<<<<<<
 *                 self.calc_forward_probs_ibd_admx(win_idx)
 * 
 */
      __pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->forward_probs_mem_alloc(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1459; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "LDModel.pyx":1460
 *                 self.calc_emission_probs_ibd_admx(win_idx)
 *                 self.forward_probs_mem_alloc(win_idx)
 *                 self.calc_forward_probs_ibd_admx(win_idx)             # <<<<<<<<<<<<<<
 * 
 *                 if self._debug:
 */
      __pyx_t_2 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_forward_probs_ibd_admx(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1460; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

      /* "LDModel.pyx":1462
 *                 self.calc_forward_probs_ibd_admx(win_idx)
 * 
 *                 if self._debug:             # <<<<<<<<<<<<<<
 *                     self.print_inner_probs(win_idx)
 *                 #self.backward_probs_mem_alloc(win_idx)
 */
      if (__pyx_v_self->_debug) {

        /* "LDModel.pyx":1463
 * 
 *                 if self._debug:
 *                     self.print_inner_probs(win_idx)             # <<<<<<<<<<<<<<
 *                 #self.backward_probs_mem_alloc(win_idx)
 *                 #self.calc_backward_probs_ibd_admx(chr1,chr2,chr3,chr4,win_idx)
 */
        __pyx_t_2 = PyInt_FromLong(__pyx_v_win_idx); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->print_inner_probs(__pyx_v_self, __pyx_t_2, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1463; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
        goto __pyx_L7;
      }
      __pyx_L7:;

      /* "LDModel.pyx":1466
 *                 #self.backward_probs_mem_alloc(win_idx)
 *                 #self.calc_backward_probs_ibd_admx(chr1,chr2,chr3,chr4,win_idx)
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx1 = __pyx_t_6;

        /* "LDModel.pyx":1467
 *                 #self.calc_backward_probs_ibd_admx(chr1,chr2,chr3,chr4,win_idx)
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx2 = __pyx_t_8;

          /* "LDModel.pyx":1468
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx3 = __pyx_t_10;

            /* "LDModel.pyx":1469
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     sum = 0
 */
            __pyx_t_11 = __pyx_v_self->K;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_admx_idx4 = __pyx_t_12;

              /* "LDModel.pyx":1470
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     sum = 0
 *                                     for node_idx1 in range(self._layer_state_nums[admx_idx1][(win_idx*self._win_size)+last_snp_win-1]):
 */
              for (__pyx_t_13 = 0; __pyx_t_13 < 2; __pyx_t_13+=1) {
                __pyx_v_ibd = __pyx_t_13;

                /* "LDModel.pyx":1471
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     sum = 0             # <<<<<<<<<<<<<<
 *                                     for node_idx1 in range(self._layer_state_nums[admx_idx1][(win_idx*self._win_size)+last_snp_win-1]):
 *                                         for node_idx2 in range(self._layer_state_nums[admx_idx2][(win_idx*self._win_size)+last_snp_win-1]):
 */
                __pyx_v_sum = 0;

                /* "LDModel.pyx":1472
 *                                 for ibd in range(2):
 *                                     sum = 0
 *                                     for node_idx1 in range(self._layer_state_nums[admx_idx1][(win_idx*self._win_size)+last_snp_win-1]):             # <<<<<<<<<<<<<<
 *                                         for node_idx2 in range(self._layer_state_nums[admx_idx2][(win_idx*self._win_size)+last_snp_win-1]):
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):
 */
                __pyx_t_1 = PyInt_FromLong((__pyx_v_win_idx * __pyx_v_self->_win_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_v_last_snp_win); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1472; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_15 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx1])[__pyx_t_14]);
                for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                  __pyx_v_node_idx1 = __pyx_t_16;

                  /* "LDModel.pyx":1473
 *                                     sum = 0
 *                                     for node_idx1 in range(self._layer_state_nums[admx_idx1][(win_idx*self._win_size)+last_snp_win-1]):
 *                                         for node_idx2 in range(self._layer_state_nums[admx_idx2][(win_idx*self._win_size)+last_snp_win-1]):             # <<<<<<<<<<<<<<
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):
 */
                  __pyx_t_1 = PyInt_FromLong((__pyx_v_win_idx * __pyx_v_self->_win_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_v_last_snp_win); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                  __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1473; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __pyx_t_17 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx2])[__pyx_t_14]);
                  for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                    __pyx_v_node_idx2 = __pyx_t_18;

                    /* "LDModel.pyx":1474
 *                                     for node_idx1 in range(self._layer_state_nums[admx_idx1][(win_idx*self._win_size)+last_snp_win-1]):
 *                                         for node_idx2 in range(self._layer_state_nums[admx_idx2][(win_idx*self._win_size)+last_snp_win-1]):
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):             # <<<<<<<<<<<<<<
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 */
                    __pyx_t_1 = PyInt_FromLong((__pyx_v_win_idx * __pyx_v_self->_win_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_1);
                    __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_v_last_snp_win); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_2);
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                    __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_GOTREF(__pyx_t_1);
                    __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                    __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1474; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                    __pyx_t_19 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx3])[__pyx_t_14]);
                    for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_19; __pyx_t_20+=1) {
                      __pyx_v_node_idx3 = __pyx_t_20;

                      /* "LDModel.pyx":1475
 *                                         for node_idx2 in range(self._layer_state_nums[admx_idx2][(win_idx*self._win_size)+last_snp_win-1]):
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):             # <<<<<<<<<<<<<<
 *                                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                                     self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]
 */
                      __pyx_t_1 = PyInt_FromLong((__pyx_v_win_idx * __pyx_v_self->_win_size)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_1);
                      __pyx_t_2 = PyNumber_Add(__pyx_t_1, __pyx_v_last_snp_win); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_2);
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      __pyx_t_1 = PyNumber_Subtract(__pyx_t_2, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_GOTREF(__pyx_t_1);
                      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                      __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1475; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                      __pyx_t_21 = ((__pyx_v_self->_layer_state_nums[__pyx_v_admx_idx4])[__pyx_t_14]);
                      for (__pyx_t_22 = 0; __pyx_t_22 < __pyx_t_21; __pyx_t_22+=1) {
                        __pyx_v_node_idx4 = __pyx_t_22;

                        /* "LDModel.pyx":1476
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                     self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]
 *                                                     #print ">top level ems probs (win_idx admx_idx1 admx_idx2 admx_idx3 admx_idx4 ibd node_idx1 node_idx2 node_idx3 node_idx4)" + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + " " + str(node_idx1) + " " +  str(node_idx2) + " " +  str(node_idx3) + " " +  str(node_idx4) + " " + ": " + str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " ibd_admx_forward_probs " + str(self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 */
                        __pyx_t_23 = __pyx_v_win_idx;
                        __pyx_t_24 = __pyx_v_admx_idx1;
                        __pyx_t_25 = __pyx_v_admx_idx2;
                        __pyx_t_26 = __pyx_v_admx_idx3;
                        __pyx_t_27 = __pyx_v_admx_idx4;
                        __pyx_t_28 = __pyx_v_ibd;

                        /* "LDModel.pyx":1477
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                                     self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]             # <<<<<<<<<<<<<<
 *                                                     #print ">top level ems probs (win_idx admx_idx1 admx_idx2 admx_idx3 admx_idx4 ibd node_idx1 node_idx2 node_idx3 node_idx4)" + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + " " + str(node_idx1) + " " +  str(node_idx2) + " " +  str(node_idx3) + " " +  str(node_idx4) + " " + ": " + str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " ibd_admx_forward_probs " + str(self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 *                 self.emission_prob_ibd_admx_mem_free(win_idx)
 */
                        __pyx_t_1 = PyNumber_Subtract(__pyx_v_last_snp_win, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                        __Pyx_GOTREF(__pyx_t_1);
                        __pyx_t_14 = __Pyx_PyIndex_AsSsize_t(__pyx_t_1); if (unlikely((__pyx_t_14 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1477; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                        __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

                        /* "LDModel.pyx":1476
 *                                             for node_idx3 in range(self._layer_state_nums[admx_idx3][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                 for node_idx4 in range(self._layer_state_nums[admx_idx4][(win_idx*self._win_size)+last_snp_win-1]):
 *                                                     self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                     self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]
 *                                                     #print ">top level ems probs (win_idx admx_idx1 admx_idx2 admx_idx3 admx_idx4 ibd node_idx1 node_idx2 node_idx3 node_idx4)" + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + " " + str(node_idx1) + " " +  str(node_idx2) + " " +  str(node_idx3) + " " +  str(node_idx4) + " " + ": " + str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " ibd_admx_forward_probs " + str(self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 */
                        ((((((__pyx_v_self->_top_level_ems_prob[__pyx_t_23])[__pyx_t_24])[__pyx_t_25])[__pyx_t_26])[__pyx_t_27])[__pyx_t_28]) = (((((((__pyx_v_self->_top_level_ems_prob[__pyx_t_23])[__pyx_t_24])[__pyx_t_25])[__pyx_t_26])[__pyx_t_27])[__pyx_t_28]) + ((((((((((__pyx_v_self->_forward_probs_ibd_admx[__pyx_t_14])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_node_idx1])[__pyx_v_node_idx2])[__pyx_v_node_idx3])[__pyx_v_node_idx4])[__pyx_v_ibd]));
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }

      /* "LDModel.pyx":1479
 *                                                     self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd]
 *                                                     #print ">top level ems probs (win_idx admx_idx1 admx_idx2 admx_idx3 admx_idx4 ibd node_idx1 node_idx2 node_idx3 node_idx4)" + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + " " + str(node_idx1) + " " +  str(node_idx2) + " " +  str(node_idx3) + " " +  str(node_idx4) + " " + ": " + str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " ibd_admx_forward_probs " + str(self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 *                 self.emission_prob_ibd_admx_mem_free(win_idx)             # <<<<<<<<<<<<<<
 *                 self.forward_probs_mem_free(win_idx)
 * 
 */
      __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->emission_prob_ibd_admx_mem_free(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1479; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

      /* "LDModel.pyx":1480
 *                                                     #print ">top level ems probs (win_idx admx_idx1 admx_idx2 admx_idx3 admx_idx4 ibd node_idx1 node_idx2 node_idx3 node_idx4)" + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + " " + str(node_idx1) + " " +  str(node_idx2) + " " +  str(node_idx3) + " " +  str(node_idx4) + " " + ": " + str(self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " ibd_admx_forward_probs " + str(self._forward_probs_ibd_admx[last_snp_win-1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][node_idx1][node_idx2][node_idx3][node_idx4][ibd])
 *                 self.emission_prob_ibd_admx_mem_free(win_idx)
 *                 self.forward_probs_mem_free(win_idx)             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_top_level_ems_probs(self, int hap_idx1, int hap_idx2, int hap_idx3, int hap_idx4):
 */
      __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->forward_probs_mem_free(__pyx_v_self, __pyx_v_win_idx, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1480; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L6;
    }
    __pyx_L6:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_ems_probs_inner", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_last_snp_win);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_73calc_top_level_ems_probs_inner(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_73calc_top_level_ems_probs_inner(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs_inner (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_72calc_top_level_ems_probs_inner(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1437
 *             snp_idx_win+=1
 * 
 *     cpdef calc_top_level_ems_probs_inner(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int node_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_72calc_top_level_ems_probs_inner(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs_inner", 0);
  __Pyx_TraceCall("calc_top_level_ems_probs_inner", __pyx_f[0], 1437);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_top_level_ems_probs_inner(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1437; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_ems_probs_inner", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1482
 *                 self.forward_probs_mem_free(win_idx)
 * 
 *     cpdef calc_top_level_ems_probs(self, int hap_idx1, int hap_idx2, int hap_idx3, int hap_idx4):             # <<<<<<<<<<<<<<
 *         self.set_chrs(self._haplos[hap_idx1],self._haplos[hap_idx2],self._haplos[hap_idx3],self._haplos[hap_idx4])
 *         self.calc_top_level_ems_probs_inner()
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_75calc_top_level_ems_probs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_top_level_ems_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_hap_idx1, int __pyx_v_hap_idx2, int __pyx_v_hap_idx3, int __pyx_v_hap_idx4, int __pyx_skip_dispatch) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *__pyx_t_6 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs", 0);
  __Pyx_TraceCall("calc_top_level_ems_probs", __pyx_f[0], 1482);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_61); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_75calc_top_level_ems_probs)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyInt_FromLong(__pyx_v_hap_idx1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = PyInt_FromLong(__pyx_v_hap_idx2); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_4 = PyInt_FromLong(__pyx_v_hap_idx3); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_5 = PyInt_FromLong(__pyx_v_hap_idx4); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = PyTuple_New(4); if (unlikely(!__pyx_t_6)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_6);
      PyTuple_SET_ITEM(__pyx_t_6, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_6, 1, __pyx_t_3);
      __Pyx_GIVEREF(__pyx_t_3);
      PyTuple_SET_ITEM(__pyx_t_6, 2, __pyx_t_4);
      __Pyx_GIVEREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_6, 3, __pyx_t_5);
      __Pyx_GIVEREF(__pyx_t_5);
      __pyx_t_2 = 0;
      __pyx_t_3 = 0;
      __pyx_t_4 = 0;
      __pyx_t_5 = 0;
      __pyx_t_5 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_6), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_DECREF(((PyObject *)__pyx_t_6)); __pyx_t_6 = 0;
      __pyx_r = __pyx_t_5;
      __pyx_t_5 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1483
 * 
 *     cpdef calc_top_level_ems_probs(self, int hap_idx1, int hap_idx2, int hap_idx3, int hap_idx4):
 *         self.set_chrs(self._haplos[hap_idx1],self._haplos[hap_idx2],self._haplos[hap_idx3],self._haplos[hap_idx4])             # <<<<<<<<<<<<<<
 *         self.calc_top_level_ems_probs_inner()
 * 
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->set_chrs(__pyx_v_self, (__pyx_v_self->_haplos[__pyx_v_hap_idx1]), (__pyx_v_self->_haplos[__pyx_v_hap_idx2]), (__pyx_v_self->_haplos[__pyx_v_hap_idx3]), (__pyx_v_self->_haplos[__pyx_v_hap_idx4]), 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1483; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":1484
 *     cpdef calc_top_level_ems_probs(self, int hap_idx1, int hap_idx2, int hap_idx3, int hap_idx4):
 *         self.set_chrs(self._haplos[hap_idx1],self._haplos[hap_idx2],self._haplos[hap_idx3],self._haplos[hap_idx4])
 *         self.calc_top_level_ems_probs_inner()             # <<<<<<<<<<<<<<
 * 
 *     cpdef calc_top_level_forward_probs(self):
 */
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_top_level_ems_probs_inner(__pyx_v_self, 0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1484; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_XDECREF(__pyx_t_6);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_ems_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_75calc_top_level_ems_probs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_75calc_top_level_ems_probs(PyObject *__pyx_v_self, PyObject *__pyx_args, PyObject *__pyx_kwds) {
  int __pyx_v_hap_idx1;
  int __pyx_v_hap_idx2;
  int __pyx_v_hap_idx3;
  int __pyx_v_hap_idx4;
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs (wrapper)", 0);
  {
    static PyObject **__pyx_pyargnames[] = {&__pyx_n_s__hap_idx1,&__pyx_n_s__hap_idx2,&__pyx_n_s__hap_idx3,&__pyx_n_s__hap_idx4,0};
    PyObject* values[4] = {0,0,0,0};
    if (unlikely(__pyx_kwds)) {
      Py_ssize_t kw_args;
      const Py_ssize_t pos_args = PyTuple_GET_SIZE(__pyx_args);
      switch (pos_args) {
        case  4: values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
        case  3: values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
        case  2: values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
        case  1: values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
        case  0: break;
        default: goto __pyx_L5_argtuple_error;
      }
      kw_args = PyDict_Size(__pyx_kwds);
      switch (pos_args) {
        case  0:
        if (likely((values[0] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__hap_idx1)) != 0)) kw_args--;
        else goto __pyx_L5_argtuple_error;
        case  1:
        if (likely((values[1] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__hap_idx2)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calc_top_level_ems_probs", 1, 4, 4, 1); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  2:
        if (likely((values[2] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__hap_idx3)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calc_top_level_ems_probs", 1, 4, 4, 2); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
        case  3:
        if (likely((values[3] = PyDict_GetItem(__pyx_kwds, __pyx_n_s__hap_idx4)) != 0)) kw_args--;
        else {
          __Pyx_RaiseArgtupleInvalid("calc_top_level_ems_probs", 1, 4, 4, 3); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
        }
      }
      if (unlikely(kw_args > 0)) {
        if (unlikely(__Pyx_ParseOptionalKeywords(__pyx_kwds, __pyx_pyargnames, 0, values, pos_args, "calc_top_level_ems_probs") < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
      }
    } else if (PyTuple_GET_SIZE(__pyx_args) != 4) {
      goto __pyx_L5_argtuple_error;
    } else {
      values[0] = PyTuple_GET_ITEM(__pyx_args, 0);
      values[1] = PyTuple_GET_ITEM(__pyx_args, 1);
      values[2] = PyTuple_GET_ITEM(__pyx_args, 2);
      values[3] = PyTuple_GET_ITEM(__pyx_args, 3);
    }
    __pyx_v_hap_idx1 = __Pyx_PyInt_AsInt(values[0]); if (unlikely((__pyx_v_hap_idx1 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_hap_idx2 = __Pyx_PyInt_AsInt(values[1]); if (unlikely((__pyx_v_hap_idx2 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_hap_idx3 = __Pyx_PyInt_AsInt(values[2]); if (unlikely((__pyx_v_hap_idx3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
    __pyx_v_hap_idx4 = __Pyx_PyInt_AsInt(values[3]); if (unlikely((__pyx_v_hap_idx4 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  }
  goto __pyx_L4_argument_unpacking_done;
  __pyx_L5_argtuple_error:;
  __Pyx_RaiseArgtupleInvalid("calc_top_level_ems_probs", 1, 4, 4, PyTuple_GET_SIZE(__pyx_args)); {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L3_error;}
  __pyx_L3_error:;
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_ems_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __Pyx_RefNannyFinishContext();
  return NULL;
  __pyx_L4_argument_unpacking_done:;
  __pyx_r = __pyx_pf_7LDModel_7LDModel_74calc_top_level_ems_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self), __pyx_v_hap_idx1, __pyx_v_hap_idx2, __pyx_v_hap_idx3, __pyx_v_hap_idx4);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1482
 *                 self.forward_probs_mem_free(win_idx)
 * 
 *     cpdef calc_top_level_ems_probs(self, int hap_idx1, int hap_idx2, int hap_idx3, int hap_idx4):             # <<<<<<<<<<<<<<
 *         self.set_chrs(self._haplos[hap_idx1],self._haplos[hap_idx2],self._haplos[hap_idx3],self._haplos[hap_idx4])
 *         self.calc_top_level_ems_probs_inner()
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_74calc_top_level_ems_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_hap_idx1, int __pyx_v_hap_idx2, int __pyx_v_hap_idx3, int __pyx_v_hap_idx4) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_ems_probs", 0);
  __Pyx_TraceCall("calc_top_level_ems_probs", __pyx_f[0], 1482);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_top_level_ems_probs(__pyx_v_self, __pyx_v_hap_idx1, __pyx_v_hap_idx2, __pyx_v_hap_idx3, __pyx_v_hap_idx4, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1482; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_ems_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1486
 *         self.calc_top_level_ems_probs_inner()
 * 
 *     cpdef calc_top_level_forward_probs(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_77calc_top_level_forward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_top_level_forward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  int __pyx_v_prev_admx_idx1;
  int __pyx_v_prev_admx_idx2;
  int __pyx_v_prev_admx_idx3;
  int __pyx_v_prev_admx_idx4;
  int __pyx_v_prev_ibd;
  CYTHON_UNUSED bool __pyx_v_first_ibs_window;
  PyObject *__pyx_v_sum = NULL;
  PyObject *__pyx_v_scale = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  long __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  long __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  int __pyx_t_30;
  int __pyx_t_31;
  int __pyx_t_32;
  double __pyx_t_33;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_forward_probs", 0);
  __Pyx_TraceCall("calc_top_level_forward_probs", __pyx_f[0], 1486);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_62); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_77calc_top_level_forward_probs)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1498
 *         cdef int prev_admx_idx4
 *         cdef int prev_ibd
 *         cdef bool first_ibs_window = False             # <<<<<<<<<<<<<<
 * 
 *         for win_idx in range(self.get_num_windows()-1):
 */
  __pyx_v_first_ibs_window = 0;

  /* "LDModel.pyx":1500
 *         cdef bool first_ibs_window = False
 * 
 *         for win_idx in range(self.get_num_windows()-1):             # <<<<<<<<<<<<<<
 *             if self._ibs[win_idx]:
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 */
  __pyx_t_3 = (((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) - 1);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1501
 * 
 *         for win_idx in range(self.get_num_windows()-1):
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 * 
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1504
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 * 
 *                 if win_idx == 0 or (win_idx > 0 and self._ibs[win_idx] and not self._ibs[win_idx-1]):             # <<<<<<<<<<<<<<
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):
 */
      __pyx_t_5 = (__pyx_v_win_idx == 0);
      if (!__pyx_t_5) {
        __pyx_t_6 = (__pyx_v_win_idx > 0);
        if (__pyx_t_6) {
          if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {
            __pyx_t_7 = (!(__pyx_v_self->_ibs[(__pyx_v_win_idx - 1)]));
            __pyx_t_8 = __pyx_t_7;
          } else {
            __pyx_t_8 = (__pyx_v_self->_ibs[__pyx_v_win_idx]);
          }
          __pyx_t_7 = __pyx_t_8;
        } else {
          __pyx_t_7 = __pyx_t_6;
        }
        __pyx_t_6 = __pyx_t_7;
      } else {
        __pyx_t_6 = __pyx_t_5;
      }
      if (__pyx_t_6) {

        /* "LDModel.pyx":1505
 * 
 *                 if win_idx == 0 or (win_idx > 0 and self._ibs[win_idx] and not self._ibs[win_idx-1]):
 *                     for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):
 */
        __pyx_t_9 = __pyx_v_self->K;
        for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
          __pyx_v_admx_idx1 = __pyx_t_10;

          /* "LDModel.pyx":1506
 *                 if win_idx == 0 or (win_idx > 0 and self._ibs[win_idx] and not self._ibs[win_idx-1]):
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):
 */
          __pyx_t_11 = __pyx_v_self->K;
          for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
            __pyx_v_admx_idx2 = __pyx_t_12;

            /* "LDModel.pyx":1507
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):
 */
            __pyx_t_13 = __pyx_v_self->K;
            for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
              __pyx_v_admx_idx3 = __pyx_t_14;

              /* "LDModel.pyx":1508
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                     for ibd in range(2):
 *                                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 */
              __pyx_t_15 = __pyx_v_self->K;
              for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
                __pyx_v_admx_idx4 = __pyx_t_16;

                /* "LDModel.pyx":1509
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 */
                for (__pyx_t_17 = 0; __pyx_t_17 < 2; __pyx_t_17+=1) {
                  __pyx_v_ibd = __pyx_t_17;

                  /* "LDModel.pyx":1510
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):
 *                                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 *                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4] * self._ibd_prior[admx_idx1][ibd]
 */
                  __pyx_t_18 = __pyx_v_win_idx;
                  __pyx_t_19 = __pyx_v_admx_idx1;
                  __pyx_t_20 = __pyx_v_admx_idx2;
                  __pyx_t_21 = __pyx_v_admx_idx3;
                  __pyx_t_22 = __pyx_v_admx_idx4;
                  __pyx_t_23 = __pyx_v_ibd;

                  /* "LDModel.pyx":1512
 *                                         self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                         self._top_level_ems_prob[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 *                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4] * self._ibd_prior[admx_idx1][ibd]             # <<<<<<<<<<<<<<
 * 
 *                 sum = 0
 */
                  ((((((__pyx_v_self->_top_level_forward_probs[__pyx_t_18])[__pyx_t_19])[__pyx_t_20])[__pyx_t_21])[__pyx_t_22])[__pyx_t_23]) = (((((((__pyx_v_self->_top_level_forward_probs[__pyx_t_18])[__pyx_t_19])[__pyx_t_20])[__pyx_t_21])[__pyx_t_22])[__pyx_t_23]) + (((((((((((__pyx_v_self->_top_level_ems_prob[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) * (__pyx_v_self->_alphas[__pyx_v_admx_idx1])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx2])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx3])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx4])) * ((__pyx_v_self->_ibd_prior[__pyx_v_admx_idx1])[__pyx_v_ibd])));
                }
              }
            }
          }
        }
        goto __pyx_L6;
      }
      __pyx_L6:;

      /* "LDModel.pyx":1514
 *                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4] * self._ibd_prior[admx_idx1][ibd]
 * 
 *                 sum = 0             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF(__pyx_v_sum);
      __pyx_v_sum = __pyx_int_0;

      /* "LDModel.pyx":1515
 * 
 *                 sum = 0
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_9 = __pyx_v_self->K;
      for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
        __pyx_v_admx_idx1 = __pyx_t_10;

        /* "LDModel.pyx":1516
 *                 sum = 0
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_11 = __pyx_v_self->K;
        for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
          __pyx_v_admx_idx2 = __pyx_t_12;

          /* "LDModel.pyx":1517
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_13 = __pyx_v_self->K;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_admx_idx3 = __pyx_t_14;

            /* "LDModel.pyx":1518
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     for prev_admx_idx1 in range(self.K):
 */
            __pyx_t_15 = __pyx_v_self->K;
            for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
              __pyx_v_admx_idx4 = __pyx_t_16;

              /* "LDModel.pyx":1519
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     for prev_admx_idx1 in range(self.K):
 *                                         for prev_admx_idx2 in range(self.K):
 */
              for (__pyx_t_17 = 0; __pyx_t_17 < 2; __pyx_t_17+=1) {
                __pyx_v_ibd = __pyx_t_17;

                /* "LDModel.pyx":1520
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     for prev_admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                                         for prev_admx_idx2 in range(self.K):
 *                                             for prev_admx_idx3 in range(self.K):
 */
                __pyx_t_18 = __pyx_v_self->K;
                for (__pyx_t_19 = 0; __pyx_t_19 < __pyx_t_18; __pyx_t_19+=1) {
                  __pyx_v_prev_admx_idx1 = __pyx_t_19;

                  /* "LDModel.pyx":1521
 *                                 for ibd in range(2):
 *                                     for prev_admx_idx1 in range(self.K):
 *                                         for prev_admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                                             for prev_admx_idx3 in range(self.K):
 *                                                 for prev_admx_idx4 in range(self.K):
 */
                  __pyx_t_20 = __pyx_v_self->K;
                  for (__pyx_t_21 = 0; __pyx_t_21 < __pyx_t_20; __pyx_t_21+=1) {
                    __pyx_v_prev_admx_idx2 = __pyx_t_21;

                    /* "LDModel.pyx":1522
 *                                     for prev_admx_idx1 in range(self.K):
 *                                         for prev_admx_idx2 in range(self.K):
 *                                             for prev_admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                                 for prev_admx_idx4 in range(self.K):
 *                                                     for prev_ibd in range(2):
 */
                    __pyx_t_22 = __pyx_v_self->K;
                    for (__pyx_t_23 = 0; __pyx_t_23 < __pyx_t_22; __pyx_t_23+=1) {
                      __pyx_v_prev_admx_idx3 = __pyx_t_23;

                      /* "LDModel.pyx":1523
 *                                         for prev_admx_idx2 in range(self.K):
 *                                             for prev_admx_idx3 in range(self.K):
 *                                                 for prev_admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                                     for prev_ibd in range(2):
 *                                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 */
                      __pyx_t_24 = __pyx_v_self->K;
                      for (__pyx_t_25 = 0; __pyx_t_25 < __pyx_t_24; __pyx_t_25+=1) {
                        __pyx_v_prev_admx_idx4 = __pyx_t_25;

                        /* "LDModel.pyx":1524
 *                                             for prev_admx_idx3 in range(self.K):
 *                                                 for prev_admx_idx4 in range(self.K):
 *                                                     for prev_ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                                         self._top_level_forward_probs[win_idx][prev_admx_idx1][prev_admx_idx2][prev_admx_idx3][prev_admx_idx4][prev_ibd] * \
 */
                        for (__pyx_t_26 = 0; __pyx_t_26 < 2; __pyx_t_26+=1) {
                          __pyx_v_prev_ibd = __pyx_t_26;

                          /* "LDModel.pyx":1525
 *                                                 for prev_admx_idx4 in range(self.K):
 *                                                     for prev_ibd in range(2):
 *                                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                         self._top_level_forward_probs[win_idx][prev_admx_idx1][prev_admx_idx2][prev_admx_idx3][prev_admx_idx4][prev_ibd] * \
 *                                                         self._top_level_ems_prob[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 */
                          __pyx_t_27 = (__pyx_v_win_idx + 1);
                          __pyx_t_28 = __pyx_v_admx_idx1;
                          __pyx_t_29 = __pyx_v_admx_idx2;
                          __pyx_t_30 = __pyx_v_admx_idx3;
                          __pyx_t_31 = __pyx_v_admx_idx4;
                          __pyx_t_32 = __pyx_v_ibd;

                          /* "LDModel.pyx":1530
 *                                                         self._s[admx_idx1][win_idx][prev_ibd][ibd] * \
 *                                                         self._anc_trans[win_idx][prev_admx_idx1][prev_admx_idx2][prev_admx_idx3][prev_admx_idx4][admx_idx1][admx_idx2][admx_idx3][admx_idx4] * \
 *                                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4]             # <<<<<<<<<<<<<<
 *                                     sum += self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     if False: #ibd == 0:
 */
                          ((((((__pyx_v_self->_top_level_forward_probs[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30])[__pyx_t_31])[__pyx_t_32]) = (((((((__pyx_v_self->_top_level_forward_probs[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30])[__pyx_t_31])[__pyx_t_32]) + (((((((((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_prev_admx_idx1])[__pyx_v_prev_admx_idx2])[__pyx_v_prev_admx_idx3])[__pyx_v_prev_admx_idx4])[__pyx_v_prev_ibd]) * ((((((__pyx_v_self->_top_level_ems_prob[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])) * ((((__pyx_v_self->_s[__pyx_v_admx_idx1])[__pyx_v_win_idx])[__pyx_v_prev_ibd])[__pyx_v_ibd])) * (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_prev_admx_idx1])[__pyx_v_prev_admx_idx2])[__pyx_v_prev_admx_idx3])[__pyx_v_prev_admx_idx4])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx1])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx2])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx3])) * (__pyx_v_self->_alphas[__pyx_v_admx_idx4])));
                        }
                      }
                    }
                  }
                }

                /* "LDModel.pyx":1531
 *                                                         self._anc_trans[win_idx][prev_admx_idx1][prev_admx_idx2][prev_admx_idx3][prev_admx_idx4][admx_idx1][admx_idx2][admx_idx3][admx_idx4] * \
 *                                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4]
 *                                     sum += self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]             # <<<<<<<<<<<<<<
 *                                     if False: #ibd == 0:
 *                                         print str(win_idx) + " top level ems probs " + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_ems_prob[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd])
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_forward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_sum, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1531; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_v_sum);
                __pyx_v_sum = __pyx_t_2;
                __pyx_t_2 = 0;

                /* "LDModel.pyx":1532
 *                                                         self._alphas[admx_idx1] * self._alphas[admx_idx2] * self._alphas[admx_idx3] * self._alphas[admx_idx4]
 *                                     sum += self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 *                                     if False: #ibd == 0:             # <<<<<<<<<<<<<<
 *                                         print str(win_idx) + " top level ems probs " + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_ems_prob[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd])
 *                                         print str(win_idx) + " top level ibd prior and alphas: " + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._ibd_prior[0]) + " " + str(self._alphas[admx_idx1]) + " " + str(self._alphas[admx_idx2]) + " " + str(self._alphas[admx_idx3]) + " "  + str(self._alphas[admx_idx4])
 */
              }
            }
          }
        }
      }

      /* "LDModel.pyx":1543
 *                                         print str(win_idx) + " top level forward probs " + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd])
 * 
 *                 scale = 1.0             # <<<<<<<<<<<<<<
 *                 if sum == 0:
 *                     scale = 1.0
 */
      __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1543; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF(__pyx_v_scale);
      __pyx_v_scale = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":1544
 * 
 *                 scale = 1.0
 *                 if sum == 0:             # <<<<<<<<<<<<<<
 *                     scale = 1.0
 *                 else:
 */
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_sum, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1544; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_6) {

        /* "LDModel.pyx":1545
 *                 scale = 1.0
 *                 if sum == 0:
 *                     scale = 1.0             # <<<<<<<<<<<<<<
 *                 else:
 *                     scale = 1.0/sum
 */
        __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1545; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_v_scale);
        __pyx_v_scale = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L37;
      }
      /*else*/ {

        /* "LDModel.pyx":1547
 *                     scale = 1.0
 *                 else:
 *                     scale = 1.0/sum             # <<<<<<<<<<<<<<
 *                     if not c_isfinite(scale):
 *                         scale = 1.0
 */
        __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_v_sum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1547; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_v_scale);
        __pyx_v_scale = __pyx_t_1;
        __pyx_t_1 = 0;

        /* "LDModel.pyx":1548
 *                 else:
 *                     scale = 1.0/sum
 *                     if not c_isfinite(scale):             # <<<<<<<<<<<<<<
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):
 */
        __pyx_t_33 = __pyx_PyFloat_AsDouble(__pyx_v_scale); if (unlikely((__pyx_t_33 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1548; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_6 = (!c_isfinite(__pyx_t_33));
        if (__pyx_t_6) {

          /* "LDModel.pyx":1549
 *                     scale = 1.0/sum
 *                     if not c_isfinite(scale):
 *                         scale = 1.0             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
          __pyx_t_1 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1549; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_v_scale);
          __pyx_v_scale = __pyx_t_1;
          __pyx_t_1 = 0;
          goto __pyx_L38;
        }
        __pyx_L38:;
      }
      __pyx_L37:;

      /* "LDModel.pyx":1550
 *                     if not c_isfinite(scale):
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_9 = __pyx_v_self->K;
      for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
        __pyx_v_admx_idx1 = __pyx_t_10;

        /* "LDModel.pyx":1551
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_11 = __pyx_v_self->K;
        for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
          __pyx_v_admx_idx2 = __pyx_t_12;

          /* "LDModel.pyx":1552
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_13 = __pyx_v_self->K;
          for (__pyx_t_14 = 0; __pyx_t_14 < __pyx_t_13; __pyx_t_14+=1) {
            __pyx_v_admx_idx3 = __pyx_t_14;

            /* "LDModel.pyx":1553
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 */
            __pyx_t_15 = __pyx_v_self->K;
            for (__pyx_t_16 = 0; __pyx_t_16 < __pyx_t_15; __pyx_t_16+=1) {
              __pyx_v_admx_idx4 = __pyx_t_16;

              /* "LDModel.pyx":1554
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 */
              for (__pyx_t_17 = 0; __pyx_t_17 < 2; __pyx_t_17+=1) {
                __pyx_v_ibd = __pyx_t_17;

                /* "LDModel.pyx":1556
 *                                 for ibd in range(2):
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale             # <<<<<<<<<<<<<<
 *                                     if not c_isfinite(self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 *                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_forward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_33 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_33 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1556; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                /* "LDModel.pyx":1555
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 */
                ((((((__pyx_v_self->_top_level_forward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = __pyx_t_33;

                /* "LDModel.pyx":1557
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):             # <<<<<<<<<<<<<<
 *                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 * 
 */
                __pyx_t_6 = (!c_isfinite(((((((__pyx_v_self->_top_level_forward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])));
                if (__pyx_t_6) {

                  /* "LDModel.pyx":1558
 *                                     self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 *                                         self._top_level_forward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0             # <<<<<<<<<<<<<<
 * 
 * 
 */
                  ((((((__pyx_v_self->_top_level_forward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;
                  goto __pyx_L49;
                }
                __pyx_L49:;
              }
            }
          }
        }
      }
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_forward_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sum);
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_77calc_top_level_forward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_77calc_top_level_forward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_forward_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_76calc_top_level_forward_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1486
 *         self.calc_top_level_ems_probs_inner()
 * 
 *     cpdef calc_top_level_forward_probs(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_76calc_top_level_forward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_forward_probs", 0);
  __Pyx_TraceCall("calc_top_level_forward_probs", __pyx_f[0], 1486);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_top_level_forward_probs(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1486; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_forward_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1561
 * 
 * 
 *     cpdef calc_top_level_backward_probs(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_79calc_top_level_backward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_calc_top_level_backward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  int __pyx_v_nxt_admx_idx1;
  int __pyx_v_nxt_admx_idx2;
  int __pyx_v_nxt_admx_idx3;
  int __pyx_v_nxt_admx_idx4;
  int __pyx_v_nxt_ibd;
  PyObject *__pyx_v_sum = NULL;
  PyObject *__pyx_v_scale = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  bool __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  int __pyx_t_16;
  int __pyx_t_17;
  int __pyx_t_18;
  int __pyx_t_19;
  int __pyx_t_20;
  int __pyx_t_21;
  int __pyx_t_22;
  int __pyx_t_23;
  int __pyx_t_24;
  int __pyx_t_25;
  int __pyx_t_26;
  int __pyx_t_27;
  int __pyx_t_28;
  int __pyx_t_29;
  int __pyx_t_30;
  int __pyx_t_31;
  double __pyx_t_32;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_backward_probs", 0);
  __Pyx_TraceCall("calc_top_level_backward_probs", __pyx_f[0], 1561);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_63); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_79calc_top_level_backward_probs)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1574
 *         cdef int nxt_ibd
 * 
 *         for win_idx in reversed(range(self.get_num_windows()-1)):             # <<<<<<<<<<<<<<
 *             if self._ibs[win_idx+1]:
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 */
  for (__pyx_t_3 = (((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) - 1)-1; __pyx_t_3 >= 0; __pyx_t_3-=1) {
    __pyx_v_win_idx = __pyx_t_3;

    /* "LDModel.pyx":1575
 * 
 *         for win_idx in reversed(range(self.get_num_windows()-1)):
 *             if self._ibs[win_idx+1]:             # <<<<<<<<<<<<<<
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 * 
 */
    __pyx_t_4 = (__pyx_v_self->_ibs[(__pyx_v_win_idx + 1)]);
    if (__pyx_t_4) {

      /* "LDModel.pyx":1578
 *                 #print "calculating top level forward probs for window: " + str(win_idx)
 * 
 *                 if win_idx == self.get_num_windows()-2 or (self._ibs[win_idx+1] and not self._ibs[win_idx+2]):             # <<<<<<<<<<<<<<
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):
 */
      __pyx_t_5 = (__pyx_v_win_idx == (((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0) - 2));
      if (!__pyx_t_5) {
        if ((__pyx_v_self->_ibs[(__pyx_v_win_idx + 1)])) {
          __pyx_t_6 = (!(__pyx_v_self->_ibs[(__pyx_v_win_idx + 2)]));
          __pyx_t_7 = __pyx_t_6;
        } else {
          __pyx_t_7 = (__pyx_v_self->_ibs[(__pyx_v_win_idx + 1)]);
        }
        __pyx_t_6 = __pyx_t_7;
      } else {
        __pyx_t_6 = __pyx_t_5;
      }
      if (__pyx_t_6) {

        /* "LDModel.pyx":1579
 * 
 *                 if win_idx == self.get_num_windows()-2 or (self._ibs[win_idx+1] and not self._ibs[win_idx+2]):
 *                     for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):
 */
        __pyx_t_8 = __pyx_v_self->K;
        for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
          __pyx_v_admx_idx1 = __pyx_t_9;

          /* "LDModel.pyx":1580
 *                 if win_idx == self.get_num_windows()-2 or (self._ibs[win_idx+1] and not self._ibs[win_idx+2]):
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):
 */
          __pyx_t_10 = __pyx_v_self->K;
          for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
            __pyx_v_admx_idx2 = __pyx_t_11;

            /* "LDModel.pyx":1581
 *                     for admx_idx1 in range(self.K):
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):
 */
            __pyx_t_12 = __pyx_v_self->K;
            for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
              __pyx_v_admx_idx3 = __pyx_t_13;

              /* "LDModel.pyx":1582
 *                         for admx_idx2 in range(self.K):
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                     for ibd in range(2):
 *                                         self._top_level_backward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 1
 */
              __pyx_t_14 = __pyx_v_self->K;
              for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
                __pyx_v_admx_idx4 = __pyx_t_15;

                /* "LDModel.pyx":1583
 *                             for admx_idx3 in range(self.K):
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                         self._top_level_backward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 1
 * 
 */
                for (__pyx_t_16 = 0; __pyx_t_16 < 2; __pyx_t_16+=1) {
                  __pyx_v_ibd = __pyx_t_16;

                  /* "LDModel.pyx":1584
 *                                 for admx_idx4 in range(self.K):
 *                                     for ibd in range(2):
 *                                         self._top_level_backward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 1             # <<<<<<<<<<<<<<
 * 
 *                 sum = 0
 */
                  ((((((__pyx_v_self->_top_level_backward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 1.0;
                }
              }
            }
          }
        }
        goto __pyx_L6;
      }
      __pyx_L6:;

      /* "LDModel.pyx":1586
 *                                         self._top_level_backward_probs[win_idx+1][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 1
 * 
 *                 sum = 0             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF(__pyx_v_sum);
      __pyx_v_sum = __pyx_int_0;

      /* "LDModel.pyx":1587
 * 
 *                 sum = 0
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx1 = __pyx_t_9;

        /* "LDModel.pyx":1588
 *                 sum = 0
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx2 = __pyx_t_11;

          /* "LDModel.pyx":1589
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx3 = __pyx_t_13;

            /* "LDModel.pyx":1590
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     for nxt_admx_idx1 in range(self.K):
 */
            __pyx_t_14 = __pyx_v_self->K;
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_admx_idx4 = __pyx_t_15;

              /* "LDModel.pyx":1591
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     for nxt_admx_idx1 in range(self.K):
 *                                         for nxt_admx_idx2 in range(self.K):
 */
              for (__pyx_t_16 = 0; __pyx_t_16 < 2; __pyx_t_16+=1) {
                __pyx_v_ibd = __pyx_t_16;

                /* "LDModel.pyx":1592
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     for nxt_admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                                         for nxt_admx_idx2 in range(self.K):
 *                                             for nxt_admx_idx3 in range(self.K):
 */
                __pyx_t_17 = __pyx_v_self->K;
                for (__pyx_t_18 = 0; __pyx_t_18 < __pyx_t_17; __pyx_t_18+=1) {
                  __pyx_v_nxt_admx_idx1 = __pyx_t_18;

                  /* "LDModel.pyx":1593
 *                                 for ibd in range(2):
 *                                     for nxt_admx_idx1 in range(self.K):
 *                                         for nxt_admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                                             for nxt_admx_idx3 in range(self.K):
 *                                                 for nxt_admx_idx4 in range(self.K):
 */
                  __pyx_t_19 = __pyx_v_self->K;
                  for (__pyx_t_20 = 0; __pyx_t_20 < __pyx_t_19; __pyx_t_20+=1) {
                    __pyx_v_nxt_admx_idx2 = __pyx_t_20;

                    /* "LDModel.pyx":1594
 *                                     for nxt_admx_idx1 in range(self.K):
 *                                         for nxt_admx_idx2 in range(self.K):
 *                                             for nxt_admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                                                 for nxt_admx_idx4 in range(self.K):
 *                                                     for nxt_ibd in range(2):
 */
                    __pyx_t_21 = __pyx_v_self->K;
                    for (__pyx_t_22 = 0; __pyx_t_22 < __pyx_t_21; __pyx_t_22+=1) {
                      __pyx_v_nxt_admx_idx3 = __pyx_t_22;

                      /* "LDModel.pyx":1595
 *                                         for nxt_admx_idx2 in range(self.K):
 *                                             for nxt_admx_idx3 in range(self.K):
 *                                                 for nxt_admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                                     for nxt_ibd in range(2):
 *                                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 */
                      __pyx_t_23 = __pyx_v_self->K;
                      for (__pyx_t_24 = 0; __pyx_t_24 < __pyx_t_23; __pyx_t_24+=1) {
                        __pyx_v_nxt_admx_idx4 = __pyx_t_24;

                        /* "LDModel.pyx":1596
 *                                             for nxt_admx_idx3 in range(self.K):
 *                                                 for nxt_admx_idx4 in range(self.K):
 *                                                     for nxt_ibd in range(2):             # <<<<<<<<<<<<<<
 *                                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \
 *                                                         self._top_level_backward_probs[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd] * \
 */
                        for (__pyx_t_25 = 0; __pyx_t_25 < 2; __pyx_t_25+=1) {
                          __pyx_v_nxt_ibd = __pyx_t_25;

                          /* "LDModel.pyx":1597
 *                                                 for nxt_admx_idx4 in range(self.K):
 *                                                     for nxt_ibd in range(2):
 *                                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] += \             # <<<<<<<<<<<<<<
 *                                                         self._top_level_backward_probs[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd] * \
 *                                                         self._top_level_ems_prob[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd] * \
 */
                          __pyx_t_26 = __pyx_v_win_idx;
                          __pyx_t_27 = __pyx_v_admx_idx1;
                          __pyx_t_28 = __pyx_v_admx_idx2;
                          __pyx_t_29 = __pyx_v_admx_idx3;
                          __pyx_t_30 = __pyx_v_admx_idx4;
                          __pyx_t_31 = __pyx_v_ibd;

                          /* "LDModel.pyx":1602
 *                                                         self._s[admx_idx1][win_idx][ibd][nxt_ibd] * \
 *                                                         self._anc_trans[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4] * \
 *                                                         self._alphas[nxt_admx_idx1] * self._alphas[nxt_admx_idx2] * self._alphas[nxt_admx_idx3] * self._alphas[nxt_admx_idx4]             # <<<<<<<<<<<<<<
 *                                                         #print ">backward " + str(win_idx) + " " + str(admx_idx1) + " " + str(admx_idx2) + " " + str(admx_idx3) + " " + str(admx_idx4) + " " + str(ibd) + " " + str(nxt_admx_idx1) + " " + str(nxt_admx_idx2) + " " + str(nxt_admx_idx3) + " " + str(nxt_admx_idx4) + " " + str(nxt_ibd) + " ems_prob: " + str(self._top_level_ems_prob[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd])
 *                                                         #print ">backward " + str(win_idx) + " " + str(admx_idx1) + " " + str(admx_idx2) + " " + str(admx_idx3) + " " + str(admx_idx4) + " " + str(ibd) + " " + str(nxt_admx_idx1) + " " + str(nxt_admx_idx2) + " " + str(nxt_admx_idx3) + " " + str(nxt_admx_idx4) + " " + str(nxt_ibd) + " _s: " + str(self._s[win_idx][ibd][nxt_ibd])
 */
                          ((((((__pyx_v_self->_top_level_backward_probs[__pyx_t_26])[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30])[__pyx_t_31]) = (((((((__pyx_v_self->_top_level_backward_probs[__pyx_t_26])[__pyx_t_27])[__pyx_t_28])[__pyx_t_29])[__pyx_t_30])[__pyx_t_31]) + (((((((((((((__pyx_v_self->_top_level_backward_probs[(__pyx_v_win_idx + 1)])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])[__pyx_v_nxt_ibd]) * ((((((__pyx_v_self->_top_level_ems_prob[(__pyx_v_win_idx + 1)])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])[__pyx_v_nxt_ibd])) * ((((__pyx_v_self->_s[__pyx_v_admx_idx1])[__pyx_v_win_idx])[__pyx_v_ibd])[__pyx_v_nxt_ibd])) * (((((((((__pyx_v_self->_anc_trans[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_nxt_admx_idx1])[__pyx_v_nxt_admx_idx2])[__pyx_v_nxt_admx_idx3])[__pyx_v_nxt_admx_idx4])) * (__pyx_v_self->_alphas[__pyx_v_nxt_admx_idx1])) * (__pyx_v_self->_alphas[__pyx_v_nxt_admx_idx2])) * (__pyx_v_self->_alphas[__pyx_v_nxt_admx_idx3])) * (__pyx_v_self->_alphas[__pyx_v_nxt_admx_idx4])));
                        }
                      }
                    }
                  }
                }

                /* "LDModel.pyx":1608
 *                                                         #print ">backward " + str(win_idx) + " " + str(admx_idx1) + " " + str(admx_idx2) + " " + str(admx_idx3) + " " + str(admx_idx4) + " " + str(ibd) + " " + str(nxt_admx_idx1) + " " + str(nxt_admx_idx2) + " " + str(nxt_admx_idx3) + " " + str(nxt_admx_idx4) + " " + str(nxt_ibd) + " _backward prob i+1: " + str(self._top_level_backward_probs[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd])
 *                                                         #print "yyyyyyyyyyyyyyyyyyyy " + str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + str(self._top_level_backward_probs[win_idx+1][nxt_admx_idx1][nxt_admx_idx2][nxt_admx_idx3][nxt_admx_idx4][nxt_ibd])
 *                                     sum += self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]             # <<<<<<<<<<<<<<
 *                                     #if ibd == 0:
 *                                     #    print "back top level params: " + str(self._ibd_prior[ibd]) + " " + str(self._alphas[admx_idx1]) + " " + str(self._alphas[admx_idx2]) + " " + str(self._alphas[admx_idx3]) + " "  + str(self._alphas[admx_idx4])
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_sum, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1608; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __Pyx_DECREF(__pyx_v_sum);
                __pyx_v_sum = __pyx_t_2;
                __pyx_t_2 = 0;
              }
            }
          }
        }
      }

      /* "LDModel.pyx":1613
 *                                     #    print "back top level forward probs " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd])
 * 
 *                 scale = 1.0             # <<<<<<<<<<<<<<
 *                 if sum == 0:
 *                     scale = 1.0
 */
      __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1613; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_XDECREF(__pyx_v_scale);
      __pyx_v_scale = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":1614
 * 
 *                 scale = 1.0
 *                 if sum == 0:             # <<<<<<<<<<<<<<
 *                     scale = 1.0
 *                 else:
 */
      __pyx_t_2 = PyObject_RichCompare(__pyx_v_sum, __pyx_int_0, Py_EQ); __Pyx_XGOTREF(__pyx_t_2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_6 = __Pyx_PyObject_IsTrue(__pyx_t_2); if (unlikely(__pyx_t_6 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1614; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      if (__pyx_t_6) {

        /* "LDModel.pyx":1615
 *                 scale = 1.0
 *                 if sum == 0:
 *                     scale = 1.0             # <<<<<<<<<<<<<<
 *                 else:
 *                     scale = 1.0/sum
 */
        __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1615; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __Pyx_DECREF(__pyx_v_scale);
        __pyx_v_scale = __pyx_t_2;
        __pyx_t_2 = 0;
        goto __pyx_L37;
      }
      /*else*/ {

        /* "LDModel.pyx":1617
 *                     scale = 1.0
 *                 else:
 *                     scale = 1.0/sum             # <<<<<<<<<<<<<<
 *                     if not c_isfinite(scale):
 *                         scale = 1.0
 */
        __pyx_t_2 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_2);
        __pyx_t_1 = __Pyx_PyNumber_Divide(__pyx_t_2, __pyx_v_sum); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1617; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
        __Pyx_DECREF(__pyx_v_scale);
        __pyx_v_scale = __pyx_t_1;
        __pyx_t_1 = 0;

        /* "LDModel.pyx":1618
 *                 else:
 *                     scale = 1.0/sum
 *                     if not c_isfinite(scale):             # <<<<<<<<<<<<<<
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):
 */
        __pyx_t_32 = __pyx_PyFloat_AsDouble(__pyx_v_scale); if (unlikely((__pyx_t_32 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1618; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __pyx_t_6 = (!c_isfinite(__pyx_t_32));
        if (__pyx_t_6) {

          /* "LDModel.pyx":1619
 *                     scale = 1.0/sum
 *                     if not c_isfinite(scale):
 *                         scale = 1.0             # <<<<<<<<<<<<<<
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 */
          __pyx_t_1 = PyFloat_FromDouble(1.0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          __Pyx_GOTREF(__pyx_t_1);
          __Pyx_DECREF(__pyx_v_scale);
          __pyx_v_scale = __pyx_t_1;
          __pyx_t_1 = 0;
          goto __pyx_L38;
        }
        __pyx_L38:;
      }
      __pyx_L37:;

      /* "LDModel.pyx":1620
 *                     if not c_isfinite(scale):
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_8 = __pyx_v_self->K;
      for (__pyx_t_9 = 0; __pyx_t_9 < __pyx_t_8; __pyx_t_9+=1) {
        __pyx_v_admx_idx1 = __pyx_t_9;

        /* "LDModel.pyx":1621
 *                         scale = 1.0
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_10 = __pyx_v_self->K;
        for (__pyx_t_11 = 0; __pyx_t_11 < __pyx_t_10; __pyx_t_11+=1) {
          __pyx_v_admx_idx2 = __pyx_t_11;

          /* "LDModel.pyx":1622
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_12 = __pyx_v_self->K;
          for (__pyx_t_13 = 0; __pyx_t_13 < __pyx_t_12; __pyx_t_13+=1) {
            __pyx_v_admx_idx3 = __pyx_t_13;

            /* "LDModel.pyx":1623
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 */
            __pyx_t_14 = __pyx_v_self->K;
            for (__pyx_t_15 = 0; __pyx_t_15 < __pyx_t_14; __pyx_t_15+=1) {
              __pyx_v_admx_idx4 = __pyx_t_15;

              /* "LDModel.pyx":1624
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 */
              for (__pyx_t_16 = 0; __pyx_t_16 < 2; __pyx_t_16+=1) {
                __pyx_v_ibd = __pyx_t_16;

                /* "LDModel.pyx":1626
 *                                 for ibd in range(2):
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale             # <<<<<<<<<<<<<<
 *                                     if not c_isfinite(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 *                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 */
                __pyx_t_1 = PyFloat_FromDouble(((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_1);
                __pyx_t_2 = PyNumber_Multiply(__pyx_t_1, __pyx_v_scale); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_GOTREF(__pyx_t_2);
                __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                __pyx_t_32 = __pyx_PyFloat_AsDouble(__pyx_t_2); if (unlikely((__pyx_t_32 == (double)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1626; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

                /* "LDModel.pyx":1625
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \             # <<<<<<<<<<<<<<
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 */
                ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = __pyx_t_32;

                /* "LDModel.pyx":1627
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = \
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):             # <<<<<<<<<<<<<<
 *                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 * 
 */
                __pyx_t_6 = (!c_isfinite(((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd])));
                if (__pyx_t_6) {

                  /* "LDModel.pyx":1628
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * scale
 *                                     if not c_isfinite(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]):
 *                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0             # <<<<<<<<<<<<<<
 * 
 *     cpdef posterior_top_level_decoding(self):
 */
                  ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) = 0.0;
                  goto __pyx_L49;
                }
                __pyx_L49:;
              }
            }
          }
        }
      }
      goto __pyx_L5;
    }
    __pyx_L5:;
  }

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_backward_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_sum);
  __Pyx_XDECREF(__pyx_v_scale);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_79calc_top_level_backward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_79calc_top_level_backward_probs(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_backward_probs (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_78calc_top_level_backward_probs(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1561
 * 
 * 
 *     cpdef calc_top_level_backward_probs(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_78calc_top_level_backward_probs(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("calc_top_level_backward_probs", 0);
  __Pyx_TraceCall("calc_top_level_backward_probs", __pyx_f[0], 1561);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->calc_top_level_backward_probs(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1561; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.calc_top_level_backward_probs", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1630
 *                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 * 
 *     cpdef posterior_top_level_decoding(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_81posterior_top_level_decoding(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_f_7LDModel_7LDModel_posterior_top_level_decoding(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_win_idx;
  int __pyx_v_admx_idx1;
  int __pyx_v_admx_idx2;
  int __pyx_v_admx_idx3;
  int __pyx_v_admx_idx4;
  int __pyx_v_ibd;
  int __pyx_v_max_admx_idx1;
  int __pyx_v_max_admx_idx2;
  int __pyx_v_max_admx_idx3;
  int __pyx_v_max_admx_idx4;
  CYTHON_UNUSED int __pyx_v_max_ibd;
  double __pyx_v_max_gamma;
  double __pyx_v_curr_gamma;
  PyObject *__pyx_v_a1 = NULL;
  PyObject *__pyx_v_a2 = NULL;
  PyObject *__pyx_v_a3 = NULL;
  PyObject *__pyx_v_a4 = NULL;
  PyObject *__pyx_v_i = NULL;
  PyObject *__pyx_v_ibd_probs = NULL;
  PyObject *__pyx_v_non_ibd_probs = NULL;
  PyObject *__pyx_v_curr_ibd_prob = NULL;
  PyObject *__pyx_v_curr_non_ibd_prob = NULL;
  PyObject *__pyx_v_a1_filt = NULL;
  PyObject *__pyx_v_a2_filt = NULL;
  PyObject *__pyx_v_a3_filt = NULL;
  PyObject *__pyx_v_a4_filt = NULL;
  PyObject *__pyx_v_i_filt = NULL;
  PyObject *__pyx_v_ind = NULL;
  PyObject *__pyx_v_start = NULL;
  PyObject *__pyx_v_end = NULL;
  PyObject *__pyx_v_pairIBD = NULL;
  PyObject *__pyx_v_win_i = NULL;
  PyObject *__pyx_v_x = NULL;
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  int __pyx_t_11;
  int __pyx_t_12;
  int __pyx_t_13;
  int __pyx_t_14;
  int __pyx_t_15;
  Py_ssize_t __pyx_t_16;
  PyObject *(*__pyx_t_17)(PyObject *);
  long __pyx_t_18;
  PyObject *__pyx_t_19 = NULL;
  PyObject *__pyx_t_20 = NULL;
  PyObject *__pyx_t_21 = NULL;
  Py_ssize_t __pyx_t_22;
  Py_ssize_t __pyx_t_23;
  PyObject *(*__pyx_t_24)(PyObject *);
  PyObject *__pyx_t_25 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("posterior_top_level_decoding", 0);
  __Pyx_TraceCall("posterior_top_level_decoding", __pyx_f[0], 1630);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s_64); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_81posterior_top_level_decoding)) {
      __Pyx_XDECREF(__pyx_r);
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_r = __pyx_t_2;
      __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1644
 *         cdef double max_gamma
 *         cdef double curr_gamma
 *         a1 = ""             # <<<<<<<<<<<<<<
 *         a2 = ""
 *         a3 = ""
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a1 = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1645
 *         cdef double curr_gamma
 *         a1 = ""
 *         a2 = ""             # <<<<<<<<<<<<<<
 *         a3 = ""
 *         a4 = ""
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a2 = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1646
 *         a1 = ""
 *         a2 = ""
 *         a3 = ""             # <<<<<<<<<<<<<<
 *         a4 = ""
 *         i = ""
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a3 = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1647
 *         a2 = ""
 *         a3 = ""
 *         a4 = ""             # <<<<<<<<<<<<<<
 *         i = ""
 *         ibd_probs = []
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a4 = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1648
 *         a3 = ""
 *         a4 = ""
 *         i = ""             # <<<<<<<<<<<<<<
 *         ibd_probs = []
 *         non_ibd_probs = []
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_i = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1649
 *         a4 = ""
 *         i = ""
 *         ibd_probs = []             # <<<<<<<<<<<<<<
 *         non_ibd_probs = []
 * 
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1649; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_ibd_probs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":1650
 *         i = ""
 *         ibd_probs = []
 *         non_ibd_probs = []             # <<<<<<<<<<<<<<
 * 
 *         for win_idx in range(self.get_num_windows()):
 */
  __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1650; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_v_non_ibd_probs = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":1652
 *         non_ibd_probs = []
 * 
 *         for win_idx in range(self.get_num_windows()):             # <<<<<<<<<<<<<<
 *             if self._ibs[win_idx]:
 *                 max_admx_idx1 = -1
 */
  __pyx_t_3 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 0);
  for (__pyx_t_4 = 0; __pyx_t_4 < __pyx_t_3; __pyx_t_4+=1) {
    __pyx_v_win_idx = __pyx_t_4;

    /* "LDModel.pyx":1653
 * 
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:             # <<<<<<<<<<<<<<
 *                 max_admx_idx1 = -1
 *                 max_admx_idx2 = -1
 */
    if ((__pyx_v_self->_ibs[__pyx_v_win_idx])) {

      /* "LDModel.pyx":1654
 *         for win_idx in range(self.get_num_windows()):
 *             if self._ibs[win_idx]:
 *                 max_admx_idx1 = -1             # <<<<<<<<<<<<<<
 *                 max_admx_idx2 = -1
 *                 max_admx_idx3 = -1
 */
      __pyx_v_max_admx_idx1 = -1;

      /* "LDModel.pyx":1655
 *             if self._ibs[win_idx]:
 *                 max_admx_idx1 = -1
 *                 max_admx_idx2 = -1             # <<<<<<<<<<<<<<
 *                 max_admx_idx3 = -1
 *                 max_admx_idx4 = -1
 */
      __pyx_v_max_admx_idx2 = -1;

      /* "LDModel.pyx":1656
 *                 max_admx_idx1 = -1
 *                 max_admx_idx2 = -1
 *                 max_admx_idx3 = -1             # <<<<<<<<<<<<<<
 *                 max_admx_idx4 = -1
 *                 max_ibd = -1
 */
      __pyx_v_max_admx_idx3 = -1;

      /* "LDModel.pyx":1657
 *                 max_admx_idx2 = -1
 *                 max_admx_idx3 = -1
 *                 max_admx_idx4 = -1             # <<<<<<<<<<<<<<
 *                 max_ibd = -1
 *                 max_gamma = -DBL_MAX
 */
      __pyx_v_max_admx_idx4 = -1;

      /* "LDModel.pyx":1658
 *                 max_admx_idx3 = -1
 *                 max_admx_idx4 = -1
 *                 max_ibd = -1             # <<<<<<<<<<<<<<
 *                 max_gamma = -DBL_MAX
 *                 curr_ibd_prob = 0
 */
      __pyx_v_max_ibd = -1;

      /* "LDModel.pyx":1659
 *                 max_admx_idx4 = -1
 *                 max_ibd = -1
 *                 max_gamma = -DBL_MAX             # <<<<<<<<<<<<<<
 *                 curr_ibd_prob = 0
 *                 curr_non_ibd_prob = 0
 */
      __pyx_v_max_gamma = (-DBL_MAX);

      /* "LDModel.pyx":1660
 *                 max_ibd = -1
 *                 max_gamma = -DBL_MAX
 *                 curr_ibd_prob = 0             # <<<<<<<<<<<<<<
 *                 curr_non_ibd_prob = 0
 *                 #print "top level decoding in window %d" % win_idx
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF(__pyx_v_curr_ibd_prob);
      __pyx_v_curr_ibd_prob = __pyx_int_0;

      /* "LDModel.pyx":1661
 *                 max_gamma = -DBL_MAX
 *                 curr_ibd_prob = 0
 *                 curr_non_ibd_prob = 0             # <<<<<<<<<<<<<<
 *                 #print "top level decoding in window %d" % win_idx
 *                 for admx_idx1 in range(self.K):
 */
      __Pyx_INCREF(__pyx_int_0);
      __Pyx_XDECREF(__pyx_v_curr_non_ibd_prob);
      __pyx_v_curr_non_ibd_prob = __pyx_int_0;

      /* "LDModel.pyx":1663
 *                 curr_non_ibd_prob = 0
 *                 #print "top level decoding in window %d" % win_idx
 *                 for admx_idx1 in range(self.K):             # <<<<<<<<<<<<<<
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 */
      __pyx_t_5 = __pyx_v_self->K;
      for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
        __pyx_v_admx_idx1 = __pyx_t_6;

        /* "LDModel.pyx":1664
 *                 #print "top level decoding in window %d" % win_idx
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):             # <<<<<<<<<<<<<<
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 */
        __pyx_t_7 = __pyx_v_self->K;
        for (__pyx_t_8 = 0; __pyx_t_8 < __pyx_t_7; __pyx_t_8+=1) {
          __pyx_v_admx_idx2 = __pyx_t_8;

          /* "LDModel.pyx":1665
 *                 for admx_idx1 in range(self.K):
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):             # <<<<<<<<<<<<<<
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):
 */
          __pyx_t_9 = __pyx_v_self->K;
          for (__pyx_t_10 = 0; __pyx_t_10 < __pyx_t_9; __pyx_t_10+=1) {
            __pyx_v_admx_idx3 = __pyx_t_10;

            /* "LDModel.pyx":1666
 *                     for admx_idx2 in range(self.K):
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):             # <<<<<<<<<<<<<<
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 */
            __pyx_t_11 = __pyx_v_self->K;
            for (__pyx_t_12 = 0; __pyx_t_12 < __pyx_t_11; __pyx_t_12+=1) {
              __pyx_v_admx_idx4 = __pyx_t_12;

              /* "LDModel.pyx":1667
 *                         for admx_idx3 in range(self.K):
 *                             for admx_idx4 in range(self.K):
 *                                 for ibd in range(2):             # <<<<<<<<<<<<<<
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]
 */
              for (__pyx_t_13 = 0; __pyx_t_13 < 2; __pyx_t_13+=1) {
                __pyx_v_ibd = __pyx_t_13;

                /* "LDModel.pyx":1669
 *                                 for ibd in range(2):
 *                                     curr_gamma = self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] * \
 *                                     self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]             # <<<<<<<<<<<<<<
 *                                     #print str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " + str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " + str(curr_gamma)
 * 
 */
                __pyx_v_curr_gamma = (((((((__pyx_v_self->_top_level_forward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]) * ((((((__pyx_v_self->_top_level_backward_probs[__pyx_v_win_idx])[__pyx_v_admx_idx1])[__pyx_v_admx_idx2])[__pyx_v_admx_idx3])[__pyx_v_admx_idx4])[__pyx_v_ibd]));

                /* "LDModel.pyx":1672
 *                                     #print str(win_idx) + " " + str(admx_idx1) + " " +  str(admx_idx2) + " " +  str(admx_idx3) + " " +  str(admx_idx4) + " " +  str(ibd) + ": " + str(self._top_level_forward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " + str(self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd]) + " " + str(curr_gamma)
 * 
 *                                     if ibd == 0:             # <<<<<<<<<<<<<<
 *                                         curr_non_ibd_prob += curr_gamma
 *                                     else:
 */
                __pyx_t_14 = (__pyx_v_ibd == 0);
                if (__pyx_t_14) {

                  /* "LDModel.pyx":1673
 * 
 *                                     if ibd == 0:
 *                                         curr_non_ibd_prob += curr_gamma             # <<<<<<<<<<<<<<
 *                                     else:
 *                                         curr_ibd_prob += curr_gamma
 */
                  __pyx_t_1 = PyFloat_FromDouble(__pyx_v_curr_gamma); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_curr_non_ibd_prob, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1673; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
                  __Pyx_DECREF(__pyx_v_curr_non_ibd_prob);
                  __pyx_v_curr_non_ibd_prob = __pyx_t_2;
                  __pyx_t_2 = 0;
                  goto __pyx_L16;
                }
                /*else*/ {

                  /* "LDModel.pyx":1675
 *                                         curr_non_ibd_prob += curr_gamma
 *                                     else:
 *                                         curr_ibd_prob += curr_gamma             # <<<<<<<<<<<<<<
 * 
 *                                     if curr_gamma  > max_gamma:
 */
                  __pyx_t_2 = PyFloat_FromDouble(__pyx_v_curr_gamma); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_2);
                  __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_curr_ibd_prob, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1675; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
                  __Pyx_GOTREF(__pyx_t_1);
                  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
                  __Pyx_DECREF(__pyx_v_curr_ibd_prob);
                  __pyx_v_curr_ibd_prob = __pyx_t_1;
                  __pyx_t_1 = 0;
                }
                __pyx_L16:;

                /* "LDModel.pyx":1677
 *                                         curr_ibd_prob += curr_gamma
 * 
 *                                     if curr_gamma  > max_gamma:             # <<<<<<<<<<<<<<
 *                                         max_gamma = curr_gamma
 *                                         max_admx_idx1 = admx_idx1
 */
                __pyx_t_14 = (__pyx_v_curr_gamma > __pyx_v_max_gamma);
                if (__pyx_t_14) {

                  /* "LDModel.pyx":1678
 * 
 *                                     if curr_gamma  > max_gamma:
 *                                         max_gamma = curr_gamma             # <<<<<<<<<<<<<<
 *                                         max_admx_idx1 = admx_idx1
 *                                         max_admx_idx2 = admx_idx2
 */
                  __pyx_v_max_gamma = __pyx_v_curr_gamma;

                  /* "LDModel.pyx":1679
 *                                     if curr_gamma  > max_gamma:
 *                                         max_gamma = curr_gamma
 *                                         max_admx_idx1 = admx_idx1             # <<<<<<<<<<<<<<
 *                                         max_admx_idx2 = admx_idx2
 *                                         max_admx_idx3 = admx_idx3
 */
                  __pyx_v_max_admx_idx1 = __pyx_v_admx_idx1;

                  /* "LDModel.pyx":1680
 *                                         max_gamma = curr_gamma
 *                                         max_admx_idx1 = admx_idx1
 *                                         max_admx_idx2 = admx_idx2             # <<<<<<<<<<<<<<
 *                                         max_admx_idx3 = admx_idx3
 *                                         max_admx_idx4 = admx_idx4
 */
                  __pyx_v_max_admx_idx2 = __pyx_v_admx_idx2;

                  /* "LDModel.pyx":1681
 *                                         max_admx_idx1 = admx_idx1
 *                                         max_admx_idx2 = admx_idx2
 *                                         max_admx_idx3 = admx_idx3             # <<<<<<<<<<<<<<
 *                                         max_admx_idx4 = admx_idx4
 *                                         max_ibd = ibd
 */
                  __pyx_v_max_admx_idx3 = __pyx_v_admx_idx3;

                  /* "LDModel.pyx":1682
 *                                         max_admx_idx2 = admx_idx2
 *                                         max_admx_idx3 = admx_idx3
 *                                         max_admx_idx4 = admx_idx4             # <<<<<<<<<<<<<<
 *                                         max_ibd = ibd
 *                 a1 += str(max_admx_idx1)
 */
                  __pyx_v_max_admx_idx4 = __pyx_v_admx_idx4;

                  /* "LDModel.pyx":1683
 *                                         max_admx_idx3 = admx_idx3
 *                                         max_admx_idx4 = admx_idx4
 *                                         max_ibd = ibd             # <<<<<<<<<<<<<<
 *                 a1 += str(max_admx_idx1)
 *                 a2 += str(max_admx_idx2)
 */
                  __pyx_v_max_ibd = __pyx_v_ibd;
                  goto __pyx_L17;
                }
                __pyx_L17:;
              }
            }
          }
        }
      }

      /* "LDModel.pyx":1684
 *                                         max_admx_idx4 = admx_idx4
 *                                         max_ibd = ibd
 *                 a1 += str(max_admx_idx1)             # <<<<<<<<<<<<<<
 *                 a2 += str(max_admx_idx2)
 *                 a3 += str(max_admx_idx3)
 */
      __pyx_t_1 = PyInt_FromLong(__pyx_v_max_admx_idx1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_a1, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1684; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_a1);
      __pyx_v_a1 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":1685
 *                                         max_ibd = ibd
 *                 a1 += str(max_admx_idx1)
 *                 a2 += str(max_admx_idx2)             # <<<<<<<<<<<<<<
 *                 a3 += str(max_admx_idx3)
 *                 a4 += str(max_admx_idx4)
 */
      __pyx_t_2 = PyInt_FromLong(__pyx_v_max_admx_idx2); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a2, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1685; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_v_a2);
      __pyx_v_a2 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1686
 *                 a1 += str(max_admx_idx1)
 *                 a2 += str(max_admx_idx2)
 *                 a3 += str(max_admx_idx3)             # <<<<<<<<<<<<<<
 *                 a4 += str(max_admx_idx4)
 *                 #i += str(max_ibd)
 */
      __pyx_t_1 = PyInt_FromLong(__pyx_v_max_admx_idx3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
      __Pyx_GIVEREF(__pyx_t_1);
      __pyx_t_1 = 0;
      __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
      __pyx_t_2 = PyNumber_InPlaceAdd(__pyx_v_a3, __pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1686; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_v_a3);
      __pyx_v_a3 = __pyx_t_2;
      __pyx_t_2 = 0;

      /* "LDModel.pyx":1687
 *                 a2 += str(max_admx_idx2)
 *                 a3 += str(max_admx_idx3)
 *                 a4 += str(max_admx_idx4)             # <<<<<<<<<<<<<<
 *                 #i += str(max_ibd)
 * 
 */
      __pyx_t_2 = PyInt_FromLong(__pyx_v_max_admx_idx4); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_2);
      __Pyx_GIVEREF(__pyx_t_2);
      __pyx_t_2 = 0;
      __pyx_t_2 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a4, __pyx_t_2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1687; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __Pyx_DECREF(__pyx_v_a4);
      __pyx_v_a4 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1691
 * 
 *                 #print "win idx: " + str(win_idx) + " ibd_prob: " + str(curr_ibd_prob) +  " no ibd_prob: " + str(curr_non_ibd_prob)
 *                 if curr_ibd_prob > curr_non_ibd_prob:             # <<<<<<<<<<<<<<
 *                     #print "win idx: " + str(win_idx) + " ibd"
 *                     i += '1'
 */
      __pyx_t_1 = PyObject_RichCompare(__pyx_v_curr_ibd_prob, __pyx_v_curr_non_ibd_prob, Py_GT); __Pyx_XGOTREF(__pyx_t_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_1); if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1691; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      if (__pyx_t_14) {

        /* "LDModel.pyx":1693
 *                 if curr_ibd_prob > curr_non_ibd_prob:
 *                     #print "win idx: " + str(win_idx) + " ibd"
 *                     i += '1'             # <<<<<<<<<<<<<<
 *                 else:
 *                     #print "win idx: " + str(win_idx) + " no ibd"
 */
        __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_i, ((PyObject *)__pyx_kp_s__1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1693; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_1;
        __pyx_t_1 = 0;
        goto __pyx_L18;
      }
      /*else*/ {

        /* "LDModel.pyx":1696
 *                 else:
 *                     #print "win idx: " + str(win_idx) + " no ibd"
 *                     i += '0'             # <<<<<<<<<<<<<<
 * 
 *                 ibd_probs.append(curr_ibd_prob)
 */
        __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_i, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1696; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_1);
        __Pyx_DECREF(__pyx_v_i);
        __pyx_v_i = __pyx_t_1;
        __pyx_t_1 = 0;
      }
      __pyx_L18:;

      /* "LDModel.pyx":1698
 *                     i += '0'
 * 
 *                 ibd_probs.append(curr_ibd_prob)             # <<<<<<<<<<<<<<
 *                 non_ibd_probs.append(curr_non_ibd_prob)
 *             else:
 */
      __pyx_t_15 = PyList_Append(__pyx_v_ibd_probs, __pyx_v_curr_ibd_prob); if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1698; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "LDModel.pyx":1699
 * 
 *                 ibd_probs.append(curr_ibd_prob)
 *                 non_ibd_probs.append(curr_non_ibd_prob)             # <<<<<<<<<<<<<<
 *             else:
 *                 a1+='0'
 */
      __pyx_t_15 = PyList_Append(__pyx_v_non_ibd_probs, __pyx_v_curr_non_ibd_prob); if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1699; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L5;
    }
    /*else*/ {

      /* "LDModel.pyx":1701
 *                 non_ibd_probs.append(curr_non_ibd_prob)
 *             else:
 *                 a1+='0'             # <<<<<<<<<<<<<<
 *                 a2+='0'
 *                 a3+='0'
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a1, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1701; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_a1);
      __pyx_v_a1 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1702
 *             else:
 *                 a1+='0'
 *                 a2+='0'             # <<<<<<<<<<<<<<
 *                 a3+='0'
 *                 a4+='0'
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a2, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1702; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_a2);
      __pyx_v_a2 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1703
 *                 a1+='0'
 *                 a2+='0'
 *                 a3+='0'             # <<<<<<<<<<<<<<
 *                 a4+='0'
 *                 i+='0'
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a3, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1703; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_a3);
      __pyx_v_a3 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1704
 *                 a2+='0'
 *                 a3+='0'
 *                 a4+='0'             # <<<<<<<<<<<<<<
 *                 i+='0'
 *                 ibd_probs.append(0)
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_a4, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1704; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_a4);
      __pyx_v_a4 = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1705
 *                 a3+='0'
 *                 a4+='0'
 *                 i+='0'             # <<<<<<<<<<<<<<
 *                 ibd_probs.append(0)
 *                 non_ibd_probs.append(0)
 */
      __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_i, ((PyObject *)__pyx_kp_s__0)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1705; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(__pyx_v_i);
      __pyx_v_i = __pyx_t_1;
      __pyx_t_1 = 0;

      /* "LDModel.pyx":1706
 *                 a4+='0'
 *                 i+='0'
 *                 ibd_probs.append(0)             # <<<<<<<<<<<<<<
 *                 non_ibd_probs.append(0)
 * 
 */
      __pyx_t_15 = PyList_Append(__pyx_v_ibd_probs, __pyx_int_0); if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1706; __pyx_clineno = __LINE__; goto __pyx_L1_error;}

      /* "LDModel.pyx":1707
 *                 i+='0'
 *                 ibd_probs.append(0)
 *                 non_ibd_probs.append(0)             # <<<<<<<<<<<<<<
 * 
 *         a1_filt = ''
 */
      __pyx_t_15 = PyList_Append(__pyx_v_non_ibd_probs, __pyx_int_0); if (unlikely(__pyx_t_15 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1707; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L5:;
  }

  /* "LDModel.pyx":1709
 *                 non_ibd_probs.append(0)
 * 
 *         a1_filt = ''             # <<<<<<<<<<<<<<
 *         a2_filt = ''
 *         a3_filt = ''
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a1_filt = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1710
 * 
 *         a1_filt = ''
 *         a2_filt = ''             # <<<<<<<<<<<<<<
 *         a3_filt = ''
 *         a4_filt = ''
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a2_filt = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1711
 *         a1_filt = ''
 *         a2_filt = ''
 *         a3_filt = ''             # <<<<<<<<<<<<<<
 *         a4_filt = ''
 *         i_filt = ''
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a3_filt = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1712
 *         a2_filt = ''
 *         a3_filt = ''
 *         a4_filt = ''             # <<<<<<<<<<<<<<
 *         i_filt = ''
 *         for ind in range(len(a1)):
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_a4_filt = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1713
 *         a3_filt = ''
 *         a4_filt = ''
 *         i_filt = ''             # <<<<<<<<<<<<<<
 *         for ind in range(len(a1)):
 *             start = max(0,ind-3)
 */
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_44));
  __pyx_v_i_filt = ((PyObject *)__pyx_kp_s_44);

  /* "LDModel.pyx":1714
 *         a4_filt = ''
 *         i_filt = ''
 *         for ind in range(len(a1)):             # <<<<<<<<<<<<<<
 *             start = max(0,ind-3)
 *             end = min(ind+4,len(a1))
 */
  __pyx_t_16 = PyObject_Length(__pyx_v_a1); if (unlikely(__pyx_t_16 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_16); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_16 = 0;
    __pyx_t_17 = NULL;
  } else {
    __pyx_t_16 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_17 = Py_TYPE(__pyx_t_2)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (!__pyx_t_17 && PyList_CheckExact(__pyx_t_2)) {
      if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_16); __Pyx_INCREF(__pyx_t_1); __pyx_t_16++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_17 && PyTuple_CheckExact(__pyx_t_2)) {
      if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_16); __Pyx_INCREF(__pyx_t_1); __pyx_t_16++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_1 = __pyx_t_17(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1714; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF(__pyx_v_ind);
    __pyx_v_ind = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":1715
 *         i_filt = ''
 *         for ind in range(len(a1)):
 *             start = max(0,ind-3)             # <<<<<<<<<<<<<<
 *             end = min(ind+4,len(a1))
 *             a1_filt += str(int(np.median([int(x) for x in a1[start:end]])))
 */
    __pyx_t_1 = PyNumber_Subtract(__pyx_v_ind, __pyx_int_3); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_18 = 0;
    __pyx_t_20 = PyInt_FromLong(__pyx_t_18); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __pyx_t_21 = PyObject_RichCompare(__pyx_t_1, __pyx_t_20, Py_GT); __Pyx_XGOTREF(__pyx_t_21); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_21); if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    if (__pyx_t_14) {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_19 = __pyx_t_1;
    } else {
      __pyx_t_21 = PyInt_FromLong(__pyx_t_18); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1715; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_19 = __pyx_t_21;
      __pyx_t_21 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __pyx_t_19;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_v_start);
    __pyx_v_start = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":1716
 *         for ind in range(len(a1)):
 *             start = max(0,ind-3)
 *             end = min(ind+4,len(a1))             # <<<<<<<<<<<<<<
 *             a1_filt += str(int(np.median([int(x) for x in a1[start:end]])))
 *             a2_filt += str(int(np.median([int(x) for x in a2[start:end]])))
 */
    __pyx_t_22 = PyObject_Length(__pyx_v_a1); if (unlikely(__pyx_t_22 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = PyNumber_Add(__pyx_v_ind, __pyx_int_4); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_21 = PyInt_FromSsize_t(__pyx_t_22); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_20 = PyObject_RichCompare(__pyx_t_21, __pyx_t_1, Py_LT); __Pyx_XGOTREF(__pyx_t_20); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_20); if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    if (__pyx_t_14) {
      __pyx_t_20 = PyInt_FromSsize_t(__pyx_t_22); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1716; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_19 = __pyx_t_20;
      __pyx_t_20 = 0;
    } else {
      __Pyx_INCREF(__pyx_t_1);
      __pyx_t_19 = __pyx_t_1;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = __pyx_t_19;
    __Pyx_INCREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_XDECREF(__pyx_v_end);
    __pyx_v_end = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":1717
 *             start = max(0,ind-3)
 *             end = min(ind+4,len(a1))
 *             a1_filt += str(int(np.median([int(x) for x in a1[start:end]])))             # <<<<<<<<<<<<<<
 *             a2_filt += str(int(np.median([int(x) for x in a2[start:end]])))
 *             a3_filt += str(int(np.median([int(x) for x in a3[start:end]])))
 */
    __pyx_t_1 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_19 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__median); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyList_New(0); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_22 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_22 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_23 = __Pyx_PyIndex_AsSsize_t(__pyx_v_end); if (unlikely((__pyx_t_23 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_20 = __Pyx_PySequence_GetSlice(__pyx_v_a1, __pyx_t_22, __pyx_t_23); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    if (PyList_CheckExact(__pyx_t_20) || PyTuple_CheckExact(__pyx_t_20)) {
      __pyx_t_21 = __pyx_t_20; __Pyx_INCREF(__pyx_t_21); __pyx_t_23 = 0;
      __pyx_t_24 = NULL;
    } else {
      __pyx_t_23 = -1; __pyx_t_21 = PyObject_GetIter(__pyx_t_20); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_24 = Py_TYPE(__pyx_t_21)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    for (;;) {
      if (!__pyx_t_24 && PyList_CheckExact(__pyx_t_21)) {
        if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_21)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_20 = PyList_GET_ITEM(__pyx_t_21, __pyx_t_23); __Pyx_INCREF(__pyx_t_20); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_20 = PySequence_ITEM(__pyx_t_21, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_24 && PyTuple_CheckExact(__pyx_t_21)) {
        if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_21)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_20 = PyTuple_GET_ITEM(__pyx_t_21, __pyx_t_23); __Pyx_INCREF(__pyx_t_20); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_20 = PySequence_ITEM(__pyx_t_21, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_20 = __pyx_t_24(__pyx_t_21);
        if (unlikely(!__pyx_t_20)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_20);
      }
      __Pyx_XDECREF(__pyx_v_x);
      __pyx_v_x = __pyx_t_20;
      __pyx_t_20 = 0;
      __pyx_t_20 = PyTuple_New(1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_INCREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      __pyx_t_25 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_20), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_25);
      __Pyx_DECREF(((PyObject *)__pyx_t_20)); __pyx_t_20 = 0;
      if (unlikely(__Pyx_PyList_Append(__pyx_t_1, (PyObject*)__pyx_t_25))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __pyx_t_21 = PyTuple_New(1); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_INCREF(((PyObject *)__pyx_t_1));
    PyTuple_SET_ITEM(__pyx_t_21, 0, ((PyObject *)__pyx_t_1));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_1));
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(__pyx_t_19, ((PyObject *)__pyx_t_21), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
    __pyx_t_21 = PyTuple_New(1); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_21), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
    __pyx_t_21 = PyTuple_New(1); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_1);
    __Pyx_GIVEREF(__pyx_t_1);
    __pyx_t_1 = 0;
    __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_21), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
    __pyx_t_21 = PyNumber_InPlaceAdd(__pyx_v_a1_filt, __pyx_t_1); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1717; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(__pyx_v_a1_filt);
    __pyx_v_a1_filt = __pyx_t_21;
    __pyx_t_21 = 0;

    /* "LDModel.pyx":1718
 *             end = min(ind+4,len(a1))
 *             a1_filt += str(int(np.median([int(x) for x in a1[start:end]])))
 *             a2_filt += str(int(np.median([int(x) for x in a2[start:end]])))             # <<<<<<<<<<<<<<
 *             a3_filt += str(int(np.median([int(x) for x in a3[start:end]])))
 *             a4_filt += str(int(np.median([int(x) for x in a4[start:end]])))
 */
    __pyx_t_21 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_1 = PyObject_GetAttr(__pyx_t_21, __pyx_n_s__median); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __pyx_t_21 = PyList_New(0); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __pyx_t_23 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_23 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_22 = __Pyx_PyIndex_AsSsize_t(__pyx_v_end); if (unlikely((__pyx_t_22 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_19 = __Pyx_PySequence_GetSlice(__pyx_v_a2, __pyx_t_23, __pyx_t_22); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    if (PyList_CheckExact(__pyx_t_19) || PyTuple_CheckExact(__pyx_t_19)) {
      __pyx_t_25 = __pyx_t_19; __Pyx_INCREF(__pyx_t_25); __pyx_t_22 = 0;
      __pyx_t_24 = NULL;
    } else {
      __pyx_t_22 = -1; __pyx_t_25 = PyObject_GetIter(__pyx_t_19); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_25);
      __pyx_t_24 = Py_TYPE(__pyx_t_25)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    for (;;) {
      if (!__pyx_t_24 && PyList_CheckExact(__pyx_t_25)) {
        if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_25)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_19 = PyList_GET_ITEM(__pyx_t_25, __pyx_t_22); __Pyx_INCREF(__pyx_t_19); __pyx_t_22++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_19 = PySequence_ITEM(__pyx_t_25, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_24 && PyTuple_CheckExact(__pyx_t_25)) {
        if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_25)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_19 = PyTuple_GET_ITEM(__pyx_t_25, __pyx_t_22); __Pyx_INCREF(__pyx_t_19); __pyx_t_22++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_19 = PySequence_ITEM(__pyx_t_25, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_19 = __pyx_t_24(__pyx_t_25);
        if (unlikely(!__pyx_t_19)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_19);
      }
      __Pyx_XDECREF(__pyx_v_x);
      __pyx_v_x = __pyx_t_19;
      __pyx_t_19 = 0;
      __pyx_t_19 = PyTuple_New(1); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_INCREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      __pyx_t_20 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_19), NULL); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_DECREF(((PyObject *)__pyx_t_19)); __pyx_t_19 = 0;
      if (unlikely(__Pyx_PyList_Append(__pyx_t_21, (PyObject*)__pyx_t_20))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    }
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    __pyx_t_25 = PyTuple_New(1); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_INCREF(((PyObject *)__pyx_t_21));
    PyTuple_SET_ITEM(__pyx_t_25, 0, ((PyObject *)__pyx_t_21));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_21));
    __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
    __pyx_t_21 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_t_25), NULL); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_25)); __pyx_t_25 = 0;
    __pyx_t_25 = PyTuple_New(1); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    PyTuple_SET_ITEM(__pyx_t_25, 0, __pyx_t_21);
    __Pyx_GIVEREF(__pyx_t_21);
    __pyx_t_21 = 0;
    __pyx_t_21 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_25), NULL); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(((PyObject *)__pyx_t_25)); __pyx_t_25 = 0;
    __pyx_t_25 = PyTuple_New(1); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    PyTuple_SET_ITEM(__pyx_t_25, 0, __pyx_t_21);
    __Pyx_GIVEREF(__pyx_t_21);
    __pyx_t_21 = 0;
    __pyx_t_21 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_25), NULL); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(((PyObject *)__pyx_t_25)); __pyx_t_25 = 0;
    __pyx_t_25 = PyNumber_InPlaceAdd(__pyx_v_a2_filt, __pyx_t_21); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1718; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __Pyx_DECREF(__pyx_v_a2_filt);
    __pyx_v_a2_filt = __pyx_t_25;
    __pyx_t_25 = 0;

    /* "LDModel.pyx":1719
 *             a1_filt += str(int(np.median([int(x) for x in a1[start:end]])))
 *             a2_filt += str(int(np.median([int(x) for x in a2[start:end]])))
 *             a3_filt += str(int(np.median([int(x) for x in a3[start:end]])))             # <<<<<<<<<<<<<<
 *             a4_filt += str(int(np.median([int(x) for x in a4[start:end]])))
 *             i_filt += str(int(np.median([int(x) for x in i[start:end]])))
 */
    __pyx_t_25 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __pyx_t_21 = PyObject_GetAttr(__pyx_t_25, __pyx_n_s__median); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    __pyx_t_25 = PyList_New(0); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __pyx_t_22 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_22 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_23 = __Pyx_PyIndex_AsSsize_t(__pyx_v_end); if (unlikely((__pyx_t_23 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_1 = __Pyx_PySequence_GetSlice(__pyx_v_a3, __pyx_t_22, __pyx_t_23); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
      __pyx_t_20 = __pyx_t_1; __Pyx_INCREF(__pyx_t_20); __pyx_t_23 = 0;
      __pyx_t_24 = NULL;
    } else {
      __pyx_t_23 = -1; __pyx_t_20 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_20);
      __pyx_t_24 = Py_TYPE(__pyx_t_20)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    for (;;) {
      if (!__pyx_t_24 && PyList_CheckExact(__pyx_t_20)) {
        if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_20)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyList_GET_ITEM(__pyx_t_20, __pyx_t_23); __Pyx_INCREF(__pyx_t_1); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_20, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_24 && PyTuple_CheckExact(__pyx_t_20)) {
        if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_20)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_20, __pyx_t_23); __Pyx_INCREF(__pyx_t_1); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_1 = PySequence_ITEM(__pyx_t_20, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_1 = __pyx_t_24(__pyx_t_20);
        if (unlikely(!__pyx_t_1)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_1);
      }
      __Pyx_XDECREF(__pyx_v_x);
      __pyx_v_x = __pyx_t_1;
      __pyx_t_1 = 0;
      __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_INCREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      __pyx_t_19 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_19);
      __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
      if (unlikely(__Pyx_PyList_Append(__pyx_t_25, (PyObject*)__pyx_t_19))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    }
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __pyx_t_20 = PyTuple_New(1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_INCREF(((PyObject *)__pyx_t_25));
    PyTuple_SET_ITEM(__pyx_t_20, 0, ((PyObject *)__pyx_t_25));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_25));
    __Pyx_DECREF(((PyObject *)__pyx_t_25)); __pyx_t_25 = 0;
    __pyx_t_25 = PyObject_Call(__pyx_t_21, ((PyObject *)__pyx_t_20), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_20)); __pyx_t_20 = 0;
    __pyx_t_20 = PyTuple_New(1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_25);
    __Pyx_GIVEREF(__pyx_t_25);
    __pyx_t_25 = 0;
    __pyx_t_25 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_20), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(((PyObject *)__pyx_t_20)); __pyx_t_20 = 0;
    __pyx_t_20 = PyTuple_New(1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    PyTuple_SET_ITEM(__pyx_t_20, 0, __pyx_t_25);
    __Pyx_GIVEREF(__pyx_t_25);
    __pyx_t_25 = 0;
    __pyx_t_25 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_20), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(((PyObject *)__pyx_t_20)); __pyx_t_20 = 0;
    __pyx_t_20 = PyNumber_InPlaceAdd(__pyx_v_a3_filt, __pyx_t_25); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1719; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    __Pyx_DECREF(__pyx_v_a3_filt);
    __pyx_v_a3_filt = __pyx_t_20;
    __pyx_t_20 = 0;

    /* "LDModel.pyx":1720
 *             a2_filt += str(int(np.median([int(x) for x in a2[start:end]])))
 *             a3_filt += str(int(np.median([int(x) for x in a3[start:end]])))
 *             a4_filt += str(int(np.median([int(x) for x in a4[start:end]])))             # <<<<<<<<<<<<<<
 *             i_filt += str(int(np.median([int(x) for x in i[start:end]])))
 * 
 */
    __pyx_t_20 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __pyx_t_25 = PyObject_GetAttr(__pyx_t_20, __pyx_n_s__median); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __pyx_t_20 = PyList_New(0); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __pyx_t_23 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_23 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_22 = __Pyx_PyIndex_AsSsize_t(__pyx_v_end); if (unlikely((__pyx_t_22 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_21 = __Pyx_PySequence_GetSlice(__pyx_v_a4, __pyx_t_23, __pyx_t_22); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_21);
    if (PyList_CheckExact(__pyx_t_21) || PyTuple_CheckExact(__pyx_t_21)) {
      __pyx_t_19 = __pyx_t_21; __Pyx_INCREF(__pyx_t_19); __pyx_t_22 = 0;
      __pyx_t_24 = NULL;
    } else {
      __pyx_t_22 = -1; __pyx_t_19 = PyObject_GetIter(__pyx_t_21); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_24 = Py_TYPE(__pyx_t_19)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    for (;;) {
      if (!__pyx_t_24 && PyList_CheckExact(__pyx_t_19)) {
        if (__pyx_t_22 >= PyList_GET_SIZE(__pyx_t_19)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_21 = PyList_GET_ITEM(__pyx_t_19, __pyx_t_22); __Pyx_INCREF(__pyx_t_21); __pyx_t_22++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_19, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_24 && PyTuple_CheckExact(__pyx_t_19)) {
        if (__pyx_t_22 >= PyTuple_GET_SIZE(__pyx_t_19)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_21 = PyTuple_GET_ITEM(__pyx_t_19, __pyx_t_22); __Pyx_INCREF(__pyx_t_21); __pyx_t_22++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_21 = PySequence_ITEM(__pyx_t_19, __pyx_t_22); __pyx_t_22++; if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_21 = __pyx_t_24(__pyx_t_19);
        if (unlikely(!__pyx_t_21)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_21);
      }
      __Pyx_XDECREF(__pyx_v_x);
      __pyx_v_x = __pyx_t_21;
      __pyx_t_21 = 0;
      __pyx_t_21 = PyTuple_New(1); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      __Pyx_INCREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      __pyx_t_1 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_21), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
      if (unlikely(__Pyx_PyList_Append(__pyx_t_20, (PyObject*)__pyx_t_1))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    }
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __pyx_t_19 = PyTuple_New(1); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_INCREF(((PyObject *)__pyx_t_20));
    PyTuple_SET_ITEM(__pyx_t_19, 0, ((PyObject *)__pyx_t_20));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_20));
    __Pyx_DECREF(((PyObject *)__pyx_t_20)); __pyx_t_20 = 0;
    __pyx_t_20 = PyObject_Call(__pyx_t_25, ((PyObject *)__pyx_t_19), NULL); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_19)); __pyx_t_19 = 0;
    __pyx_t_19 = PyTuple_New(1); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_20);
    __Pyx_GIVEREF(__pyx_t_20);
    __pyx_t_20 = 0;
    __pyx_t_20 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_19), NULL); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_DECREF(((PyObject *)__pyx_t_19)); __pyx_t_19 = 0;
    __pyx_t_19 = PyTuple_New(1); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    PyTuple_SET_ITEM(__pyx_t_19, 0, __pyx_t_20);
    __Pyx_GIVEREF(__pyx_t_20);
    __pyx_t_20 = 0;
    __pyx_t_20 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_19), NULL); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_DECREF(((PyObject *)__pyx_t_19)); __pyx_t_19 = 0;
    __pyx_t_19 = PyNumber_InPlaceAdd(__pyx_v_a4_filt, __pyx_t_20); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1720; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_DECREF(__pyx_v_a4_filt);
    __pyx_v_a4_filt = __pyx_t_19;
    __pyx_t_19 = 0;

    /* "LDModel.pyx":1721
 *             a3_filt += str(int(np.median([int(x) for x in a3[start:end]])))
 *             a4_filt += str(int(np.median([int(x) for x in a4[start:end]])))
 *             i_filt += str(int(np.median([int(x) for x in i[start:end]])))             # <<<<<<<<<<<<<<
 * 
 *         pairIBD=cPairIBD()
 */
    __pyx_t_19 = __Pyx_GetName(__pyx_m, __pyx_n_s__np); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __pyx_t_20 = PyObject_GetAttr(__pyx_t_19, __pyx_n_s__median); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_20);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __pyx_t_19 = PyList_New(0); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __pyx_t_22 = __Pyx_PyIndex_AsSsize_t(__pyx_v_start); if (unlikely((__pyx_t_22 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_23 = __Pyx_PyIndex_AsSsize_t(__pyx_v_end); if (unlikely((__pyx_t_23 == (Py_ssize_t)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_t_25 = __Pyx_PySequence_GetSlice(__pyx_v_i, __pyx_t_22, __pyx_t_23); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    if (PyList_CheckExact(__pyx_t_25) || PyTuple_CheckExact(__pyx_t_25)) {
      __pyx_t_1 = __pyx_t_25; __Pyx_INCREF(__pyx_t_1); __pyx_t_23 = 0;
      __pyx_t_24 = NULL;
    } else {
      __pyx_t_23 = -1; __pyx_t_1 = PyObject_GetIter(__pyx_t_25); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_24 = Py_TYPE(__pyx_t_1)->tp_iternext;
    }
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    for (;;) {
      if (!__pyx_t_24 && PyList_CheckExact(__pyx_t_1)) {
        if (__pyx_t_23 >= PyList_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_25 = PyList_GET_ITEM(__pyx_t_1, __pyx_t_23); __Pyx_INCREF(__pyx_t_25); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_25 = PySequence_ITEM(__pyx_t_1, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else if (!__pyx_t_24 && PyTuple_CheckExact(__pyx_t_1)) {
        if (__pyx_t_23 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
        #if CYTHON_COMPILING_IN_CPYTHON
        __pyx_t_25 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_23); __Pyx_INCREF(__pyx_t_25); __pyx_t_23++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #else
        __pyx_t_25 = PySequence_ITEM(__pyx_t_1, __pyx_t_23); __pyx_t_23++; if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        #endif
      } else {
        __pyx_t_25 = __pyx_t_24(__pyx_t_1);
        if (unlikely(!__pyx_t_25)) {
          if (PyErr_Occurred()) {
            if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
            else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
          }
          break;
        }
        __Pyx_GOTREF(__pyx_t_25);
      }
      __Pyx_XDECREF(__pyx_v_x);
      __pyx_v_x = __pyx_t_25;
      __pyx_t_25 = 0;
      __pyx_t_25 = PyTuple_New(1); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_25);
      __Pyx_INCREF(__pyx_v_x);
      PyTuple_SET_ITEM(__pyx_t_25, 0, __pyx_v_x);
      __Pyx_GIVEREF(__pyx_v_x);
      __pyx_t_21 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_25), NULL); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      __Pyx_DECREF(((PyObject *)__pyx_t_25)); __pyx_t_25 = 0;
      if (unlikely(__Pyx_PyList_Append(__pyx_t_19, (PyObject*)__pyx_t_21))) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_INCREF(((PyObject *)__pyx_t_19));
    PyTuple_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_t_19));
    __Pyx_GIVEREF(((PyObject *)__pyx_t_19));
    __Pyx_DECREF(((PyObject *)__pyx_t_19)); __pyx_t_19 = 0;
    __pyx_t_19 = PyObject_Call(__pyx_t_20, ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(__pyx_t_20); __pyx_t_20 = 0;
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_19);
    __Pyx_GIVEREF(__pyx_t_19);
    __pyx_t_19 = 0;
    __pyx_t_19 = PyObject_Call(((PyObject *)((PyObject*)(&PyInt_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyTuple_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    PyTuple_SET_ITEM(__pyx_t_1, 0, __pyx_t_19);
    __Pyx_GIVEREF(__pyx_t_19);
    __pyx_t_19 = 0;
    __pyx_t_19 = PyObject_Call(((PyObject *)((PyObject*)(&PyString_Type))), ((PyObject *)__pyx_t_1), NULL); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_19);
    __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
    __pyx_t_1 = PyNumber_InPlaceAdd(__pyx_v_i_filt, __pyx_t_19); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1721; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    __Pyx_DECREF(__pyx_v_i_filt);
    __pyx_v_i_filt = __pyx_t_1;
    __pyx_t_1 = 0;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":1723
 *             i_filt += str(int(np.median([int(x) for x in i[start:end]])))
 * 
 *         pairIBD=cPairIBD()             # <<<<<<<<<<<<<<
 *         for win_i in range(len(i_filt)):
 *             if i[win_i] == '1':
 */
  __pyx_t_2 = __Pyx_GetName(__pyx_m, __pyx_n_s__cPairIBD); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_1 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1723; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __pyx_v_pairIBD = __pyx_t_1;
  __pyx_t_1 = 0;

  /* "LDModel.pyx":1724
 * 
 *         pairIBD=cPairIBD()
 *         for win_i in range(len(i_filt)):             # <<<<<<<<<<<<<<
 *             if i[win_i] == '1':
 *                 pairIBD.add_interval(win_i*self._win_size,(win_i+1)*self._win_size)
 */
  __pyx_t_16 = PyObject_Length(__pyx_v_i_filt); if (unlikely(__pyx_t_16 == -1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_t_1 = PyInt_FromSsize_t(__pyx_t_16); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_t_2 = PyTuple_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  PyTuple_SET_ITEM(__pyx_t_2, 0, __pyx_t_1);
  __Pyx_GIVEREF(__pyx_t_1);
  __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_Call(__pyx_builtin_range, ((PyObject *)__pyx_t_2), NULL); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  if (PyList_CheckExact(__pyx_t_1) || PyTuple_CheckExact(__pyx_t_1)) {
    __pyx_t_2 = __pyx_t_1; __Pyx_INCREF(__pyx_t_2); __pyx_t_16 = 0;
    __pyx_t_17 = NULL;
  } else {
    __pyx_t_16 = -1; __pyx_t_2 = PyObject_GetIter(__pyx_t_1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_2);
    __pyx_t_17 = Py_TYPE(__pyx_t_2)->tp_iternext;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  for (;;) {
    if (!__pyx_t_17 && PyList_CheckExact(__pyx_t_2)) {
      if (__pyx_t_16 >= PyList_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyList_GET_ITEM(__pyx_t_2, __pyx_t_16); __Pyx_INCREF(__pyx_t_1); __pyx_t_16++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (!__pyx_t_17 && PyTuple_CheckExact(__pyx_t_2)) {
      if (__pyx_t_16 >= PyTuple_GET_SIZE(__pyx_t_2)) break;
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_1 = PyTuple_GET_ITEM(__pyx_t_2, __pyx_t_16); __Pyx_INCREF(__pyx_t_1); __pyx_t_16++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #else
      __pyx_t_1 = PySequence_ITEM(__pyx_t_2, __pyx_t_16); __pyx_t_16++; if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else {
      __pyx_t_1 = __pyx_t_17(__pyx_t_2);
      if (unlikely(!__pyx_t_1)) {
        if (PyErr_Occurred()) {
          if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) PyErr_Clear();
          else {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1724; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        }
        break;
      }
      __Pyx_GOTREF(__pyx_t_1);
    }
    __Pyx_XDECREF(__pyx_v_win_i);
    __pyx_v_win_i = __pyx_t_1;
    __pyx_t_1 = 0;

    /* "LDModel.pyx":1725
 *         pairIBD=cPairIBD()
 *         for win_i in range(len(i_filt)):
 *             if i[win_i] == '1':             # <<<<<<<<<<<<<<
 *                 pairIBD.add_interval(win_i*self._win_size,(win_i+1)*self._win_size)
 *         pairIBD.merge_intervals()
 */
    __pyx_t_1 = PyObject_GetItem(__pyx_v_i, __pyx_v_win_i); if (!__pyx_t_1) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    __pyx_t_19 = PyObject_RichCompare(__pyx_t_1, ((PyObject *)__pyx_kp_s__1), Py_EQ); __Pyx_XGOTREF(__pyx_t_19); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
    __pyx_t_14 = __Pyx_PyObject_IsTrue(__pyx_t_19); if (unlikely(__pyx_t_14 < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1725; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
    if (__pyx_t_14) {

      /* "LDModel.pyx":1726
 *         for win_i in range(len(i_filt)):
 *             if i[win_i] == '1':
 *                 pairIBD.add_interval(win_i*self._win_size,(win_i+1)*self._win_size)             # <<<<<<<<<<<<<<
 *         pairIBD.merge_intervals()
 *         if self._debug:
 */
      __pyx_t_19 = PyObject_GetAttr(__pyx_v_pairIBD, __pyx_n_s__add_interval); if (unlikely(!__pyx_t_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_19);
      __pyx_t_1 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_20 = PyNumber_Multiply(__pyx_v_win_i, __pyx_t_1); if (unlikely(!__pyx_t_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_20);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __pyx_t_1 = PyNumber_Add(__pyx_v_win_i, __pyx_int_1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_1);
      __pyx_t_21 = PyInt_FromLong(__pyx_v_self->_win_size); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      __pyx_t_25 = PyNumber_Multiply(__pyx_t_1, __pyx_t_21); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_25);
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      __Pyx_DECREF(__pyx_t_21); __pyx_t_21 = 0;
      __pyx_t_21 = PyTuple_New(2); if (unlikely(!__pyx_t_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_21);
      PyTuple_SET_ITEM(__pyx_t_21, 0, __pyx_t_20);
      __Pyx_GIVEREF(__pyx_t_20);
      PyTuple_SET_ITEM(__pyx_t_21, 1, __pyx_t_25);
      __Pyx_GIVEREF(__pyx_t_25);
      __pyx_t_20 = 0;
      __pyx_t_25 = 0;
      __pyx_t_25 = PyObject_Call(__pyx_t_19, ((PyObject *)__pyx_t_21), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1726; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_25);
      __Pyx_DECREF(__pyx_t_19); __pyx_t_19 = 0;
      __Pyx_DECREF(((PyObject *)__pyx_t_21)); __pyx_t_21 = 0;
      __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
      goto __pyx_L33;
    }
    __pyx_L33:;
  }
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":1727
 *             if i[win_i] == '1':
 *                 pairIBD.add_interval(win_i*self._win_size,(win_i+1)*self._win_size)
 *         pairIBD.merge_intervals()             # <<<<<<<<<<<<<<
 *         if self._debug:
 *             self.top_level_print()
 */
  __pyx_t_2 = PyObject_GetAttr(__pyx_v_pairIBD, __pyx_n_s__merge_intervals); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __pyx_t_25 = PyObject_Call(__pyx_t_2, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1727; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_25);
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;

  /* "LDModel.pyx":1728
 *                 pairIBD.add_interval(win_i*self._win_size,(win_i+1)*self._win_size)
 *         pairIBD.merge_intervals()
 *         if self._debug:             # <<<<<<<<<<<<<<
 *             self.top_level_print()
 * 
 */
  if (__pyx_v_self->_debug) {

    /* "LDModel.pyx":1729
 *         pairIBD.merge_intervals()
 *         if self._debug:
 *             self.top_level_print()             # <<<<<<<<<<<<<<
 * 
 *         return (a1_filt,a2_filt,a3_filt,a4_filt,i_filt,pairIBD,ibd_probs,non_ibd_probs)
 */
    __pyx_t_25 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->top_level_print(__pyx_v_self, 0); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1729; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_25);
    __Pyx_DECREF(__pyx_t_25); __pyx_t_25 = 0;
    goto __pyx_L34;
  }
  __pyx_L34:;

  /* "LDModel.pyx":1731
 *             self.top_level_print()
 * 
 *         return (a1_filt,a2_filt,a3_filt,a4_filt,i_filt,pairIBD,ibd_probs,non_ibd_probs)             # <<<<<<<<<<<<<<
 * 
 *     cdef int start_snp(self, int win_idx):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_25 = PyTuple_New(8); if (unlikely(!__pyx_t_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1731; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_25);
  __Pyx_INCREF(__pyx_v_a1_filt);
  PyTuple_SET_ITEM(__pyx_t_25, 0, __pyx_v_a1_filt);
  __Pyx_GIVEREF(__pyx_v_a1_filt);
  __Pyx_INCREF(__pyx_v_a2_filt);
  PyTuple_SET_ITEM(__pyx_t_25, 1, __pyx_v_a2_filt);
  __Pyx_GIVEREF(__pyx_v_a2_filt);
  __Pyx_INCREF(__pyx_v_a3_filt);
  PyTuple_SET_ITEM(__pyx_t_25, 2, __pyx_v_a3_filt);
  __Pyx_GIVEREF(__pyx_v_a3_filt);
  __Pyx_INCREF(__pyx_v_a4_filt);
  PyTuple_SET_ITEM(__pyx_t_25, 3, __pyx_v_a4_filt);
  __Pyx_GIVEREF(__pyx_v_a4_filt);
  __Pyx_INCREF(__pyx_v_i_filt);
  PyTuple_SET_ITEM(__pyx_t_25, 4, __pyx_v_i_filt);
  __Pyx_GIVEREF(__pyx_v_i_filt);
  __Pyx_INCREF(__pyx_v_pairIBD);
  PyTuple_SET_ITEM(__pyx_t_25, 5, __pyx_v_pairIBD);
  __Pyx_GIVEREF(__pyx_v_pairIBD);
  __Pyx_INCREF(((PyObject *)__pyx_v_ibd_probs));
  PyTuple_SET_ITEM(__pyx_t_25, 6, ((PyObject *)__pyx_v_ibd_probs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_ibd_probs));
  __Pyx_INCREF(((PyObject *)__pyx_v_non_ibd_probs));
  PyTuple_SET_ITEM(__pyx_t_25, 7, ((PyObject *)__pyx_v_non_ibd_probs));
  __Pyx_GIVEREF(((PyObject *)__pyx_v_non_ibd_probs));
  __pyx_r = ((PyObject *)__pyx_t_25);
  __pyx_t_25 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_XDECREF(__pyx_t_19);
  __Pyx_XDECREF(__pyx_t_20);
  __Pyx_XDECREF(__pyx_t_21);
  __Pyx_XDECREF(__pyx_t_25);
  __Pyx_AddTraceback("LDModel.LDModel.posterior_top_level_decoding", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XDECREF(__pyx_v_a1);
  __Pyx_XDECREF(__pyx_v_a2);
  __Pyx_XDECREF(__pyx_v_a3);
  __Pyx_XDECREF(__pyx_v_a4);
  __Pyx_XDECREF(__pyx_v_i);
  __Pyx_XDECREF(__pyx_v_ibd_probs);
  __Pyx_XDECREF(__pyx_v_non_ibd_probs);
  __Pyx_XDECREF(__pyx_v_curr_ibd_prob);
  __Pyx_XDECREF(__pyx_v_curr_non_ibd_prob);
  __Pyx_XDECREF(__pyx_v_a1_filt);
  __Pyx_XDECREF(__pyx_v_a2_filt);
  __Pyx_XDECREF(__pyx_v_a3_filt);
  __Pyx_XDECREF(__pyx_v_a4_filt);
  __Pyx_XDECREF(__pyx_v_i_filt);
  __Pyx_XDECREF(__pyx_v_ind);
  __Pyx_XDECREF(__pyx_v_start);
  __Pyx_XDECREF(__pyx_v_end);
  __Pyx_XDECREF(__pyx_v_pairIBD);
  __Pyx_XDECREF(__pyx_v_win_i);
  __Pyx_XDECREF(__pyx_v_x);
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_81posterior_top_level_decoding(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_81posterior_top_level_decoding(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("posterior_top_level_decoding (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_80posterior_top_level_decoding(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1630
 *                                         self._top_level_backward_probs[win_idx][admx_idx1][admx_idx2][admx_idx3][admx_idx4][ibd] = 0.0
 * 
 *     cpdef posterior_top_level_decoding(self):             # <<<<<<<<<<<<<<
 *         cdef int win_idx
 *         cdef int admx_idx1
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_80posterior_top_level_decoding(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("posterior_top_level_decoding", 0);
  __Pyx_TraceCall("posterior_top_level_decoding", __pyx_f[0], 1630);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = ((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->posterior_top_level_decoding(__pyx_v_self, 1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1630; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.posterior_top_level_decoding", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1733
 *         return (a1_filt,a2_filt,a3_filt,a4_filt,i_filt,pairIBD,ibd_probs,non_ibd_probs)
 * 
 *     cdef int start_snp(self, int win_idx):             # <<<<<<<<<<<<<<
 *         return win_idx * self._win_size
 * 
 */

static int __pyx_f_7LDModel_7LDModel_start_snp(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("start_snp", 0);
  __Pyx_TraceCall("start_snp", __pyx_f[0], 1733);

  /* "LDModel.pyx":1734
 * 
 *     cdef int start_snp(self, int win_idx):
 *         return win_idx * self._win_size             # <<<<<<<<<<<<<<
 * 
 *     cdef int end_snp(self, int win_idx):
 */
  __pyx_r = (__pyx_v_win_idx * __pyx_v_self->_win_size);
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1736
 *         return win_idx * self._win_size
 * 
 *     cdef int end_snp(self, int win_idx):             # <<<<<<<<<<<<<<
 *         return min((win_idx + 1) * self._win_size, self._snp_num)
 * 
 */

static int __pyx_f_7LDModel_7LDModel_end_snp(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_v_win_idx) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  long __pyx_t_2;
  long __pyx_t_3;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("end_snp", 0);
  __Pyx_TraceCall("end_snp", __pyx_f[0], 1736);

  /* "LDModel.pyx":1737
 * 
 *     cdef int end_snp(self, int win_idx):
 *         return min((win_idx + 1) * self._win_size, self._snp_num)             # <<<<<<<<<<<<<<
 * 
 *     cpdef int get_num_windows(self):
 */
  __pyx_t_1 = __pyx_v_self->_snp_num;
  __pyx_t_2 = ((__pyx_v_win_idx + 1) * __pyx_v_self->_win_size);
  if ((__pyx_t_1 < __pyx_t_2)) {
    __pyx_t_3 = __pyx_t_1;
  } else {
    __pyx_t_3 = __pyx_t_2;
  }
  __pyx_r = __pyx_t_3;
  goto __pyx_L0;

  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1739
 *         return min((win_idx + 1) * self._win_size, self._snp_num)
 * 
 *     cpdef int get_num_windows(self):             # <<<<<<<<<<<<<<
 *         cdef int num_win
 *         num_win = int(self._snp_num / self._win_size)
 */

static PyObject *__pyx_pw_7LDModel_7LDModel_83get_num_windows(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static int __pyx_f_7LDModel_7LDModel_get_num_windows(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self, int __pyx_skip_dispatch) {
  int __pyx_v_num_win;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  int __pyx_t_3;
  int __pyx_t_4;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_num_windows", 0);
  __Pyx_TraceCall("get_num_windows", __pyx_f[0], 1739);
  /* Check if called by wrapper */
  if (unlikely(__pyx_skip_dispatch)) ;
  /* Check if overriden in Python */
  else if (unlikely(Py_TYPE(((PyObject *)__pyx_v_self))->tp_dictoffset != 0)) {
    __pyx_t_1 = PyObject_GetAttr(((PyObject *)__pyx_v_self), __pyx_n_s__get_num_windows); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_1);
    if (!PyCFunction_Check(__pyx_t_1) || (PyCFunction_GET_FUNCTION(__pyx_t_1) != (PyCFunction)__pyx_pw_7LDModel_7LDModel_83get_num_windows)) {
      __pyx_t_2 = PyObject_Call(__pyx_t_1, ((PyObject *)__pyx_empty_tuple), NULL); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_2);
      __pyx_t_3 = __Pyx_PyInt_AsInt(__pyx_t_2); if (unlikely((__pyx_t_3 == (int)-1) && PyErr_Occurred())) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
      __pyx_r = __pyx_t_3;
      __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
      goto __pyx_L0;
    }
    __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  }

  /* "LDModel.pyx":1741
 *     cpdef int get_num_windows(self):
 *         cdef int num_win
 *         num_win = int(self._snp_num / self._win_size)             # <<<<<<<<<<<<<<
 *         if self._snp_num % self._win_size > 0:
 *             num_win += 1
 */
  if (unlikely(__pyx_v_self->_win_size == 0)) {
    PyErr_Format(PyExc_ZeroDivisionError, "float division");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1741; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_v_num_win = ((int)(((double)__pyx_v_self->_snp_num) / ((double)__pyx_v_self->_win_size)));

  /* "LDModel.pyx":1742
 *         cdef int num_win
 *         num_win = int(self._snp_num / self._win_size)
 *         if self._snp_num % self._win_size > 0:             # <<<<<<<<<<<<<<
 *             num_win += 1
 *         return num_win
 */
  if (unlikely(__pyx_v_self->_win_size == 0)) {
    PyErr_Format(PyExc_ZeroDivisionError, "integer division or modulo by zero");
    {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1742; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_4 = (__Pyx_mod_int(__pyx_v_self->_snp_num, __pyx_v_self->_win_size) > 0);
  if (__pyx_t_4) {

    /* "LDModel.pyx":1743
 *         num_win = int(self._snp_num / self._win_size)
 *         if self._snp_num % self._win_size > 0:
 *             num_win += 1             # <<<<<<<<<<<<<<
 *         return num_win
 * 
 */
    __pyx_v_num_win = (__pyx_v_num_win + 1);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "LDModel.pyx":1744
 *         if self._snp_num % self._win_size > 0:
 *             num_win += 1
 *         return num_win             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_num_win;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  __Pyx_WriteUnraisable("LDModel.LDModel.get_num_windows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static PyObject *__pyx_pw_7LDModel_7LDModel_83get_num_windows(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused); /*proto*/
static PyObject *__pyx_pw_7LDModel_7LDModel_83get_num_windows(PyObject *__pyx_v_self, CYTHON_UNUSED PyObject *unused) {
  PyObject *__pyx_r = 0;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("get_num_windows (wrapper)", 0);
  __pyx_r = __pyx_pf_7LDModel_7LDModel_82get_num_windows(((struct __pyx_obj_7LDModel_LDModel *)__pyx_v_self));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "LDModel.pyx":1739
 *         return min((win_idx + 1) * self._win_size, self._snp_num)
 * 
 *     cpdef int get_num_windows(self):             # <<<<<<<<<<<<<<
 *         cdef int num_win
 *         num_win = int(self._snp_num / self._win_size)
 */

static PyObject *__pyx_pf_7LDModel_7LDModel_82get_num_windows(struct __pyx_obj_7LDModel_LDModel *__pyx_v_self) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_num_windows", 0);
  __Pyx_TraceCall("get_num_windows", __pyx_f[0], 1739);
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyInt_FromLong(((struct __pyx_vtabstruct_7LDModel_LDModel *)__pyx_v_self->__pyx_vtab)->get_num_windows(__pyx_v_self, 1)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1739; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("LDModel.LDModel.get_num_windows", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags); /*proto*/
static CYTHON_UNUSED int __pyx_pw_5numpy_7ndarray_1__getbuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__ (wrapper)", 0);
  __pyx_r = __pyx_pf_5numpy_7ndarray___getbuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info), ((int)__pyx_v_flags));
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":194
 *         # experimental exception made for __getbuffer__ and __releasebuffer__
 *         # -- the details of this may change.
 *         def __getbuffer__(ndarray self, Py_buffer* info, int flags):             # <<<<<<<<<<<<<<
 *             # This implementation of getbuffer is geared towards Cython
 *             # requirements, and does not yet fullfill the PEP.
 */

static int __pyx_pf_5numpy_7ndarray___getbuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info, int __pyx_v_flags) {
  int __pyx_v_copy_shape;
  int __pyx_v_i;
  int __pyx_v_ndim;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  int __pyx_v_t;
  char *__pyx_v_f;
  PyArray_Descr *__pyx_v_descr = 0;
  int __pyx_v_offset;
  int __pyx_v_hasfields;
  int __pyx_r;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  int __pyx_t_2;
  int __pyx_t_3;
  PyObject *__pyx_t_4 = NULL;
  int __pyx_t_5;
  int __pyx_t_6;
  int __pyx_t_7;
  PyObject *__pyx_t_8 = NULL;
  char *__pyx_t_9;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("__getbuffer__", 0);
  if (__pyx_v_info != NULL) {
    __pyx_v_info->obj = Py_None; __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(__pyx_v_info->obj);
  }
  __Pyx_TraceCall("__getbuffer__", __pyx_f[1], 194);

  /* "numpy.pxd":200
 *             # of flags
 * 
 *             if info == NULL: return             # <<<<<<<<<<<<<<
 * 
 *             cdef int copy_shape, i, ndim
 */
  __pyx_t_1 = (__pyx_v_info == NULL);
  if (__pyx_t_1) {
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "numpy.pxd":203
 * 
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 */
  __pyx_v_endian_detector = 1;

  /* "numpy.pxd":204
 *             cdef int copy_shape, i, ndim
 *             cdef int endian_detector = 1
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 * 
 *             ndim = PyArray_NDIM(self)
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "numpy.pxd":206
 *             cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 * 
 *             ndim = PyArray_NDIM(self)             # <<<<<<<<<<<<<<
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_v_ndim = PyArray_NDIM(__pyx_v_self);

  /* "numpy.pxd":208
 *             ndim = PyArray_NDIM(self)
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 copy_shape = 1
 *             else:
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "numpy.pxd":209
 * 
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 copy_shape = 1             # <<<<<<<<<<<<<<
 *             else:
 *                 copy_shape = 0
 */
    __pyx_v_copy_shape = 1;
    goto __pyx_L4;
  }
  /*else*/ {

    /* "numpy.pxd":211
 *                 copy_shape = 1
 *             else:
 *                 copy_shape = 0             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 */
    __pyx_v_copy_shape = 0;
  }
  __pyx_L4:;

  /* "numpy.pxd":213
 *                 copy_shape = 0
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")
 */
  __pyx_t_1 = ((__pyx_v_flags & PyBUF_C_CONTIGUOUS) == PyBUF_C_CONTIGUOUS);
  if (__pyx_t_1) {

    /* "numpy.pxd":214
 * 
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 */
    __pyx_t_2 = (!PyArray_CHKFLAGS(__pyx_v_self, NPY_C_CONTIGUOUS));
    __pyx_t_3 = __pyx_t_2;
  } else {
    __pyx_t_3 = __pyx_t_1;
  }
  if (__pyx_t_3) {

    /* "numpy.pxd":215
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_66), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L5;
  }
  __pyx_L5:;

  /* "numpy.pxd":217
 *                 raise ValueError(u"ndarray is not C contiguous")
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)             # <<<<<<<<<<<<<<
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 */
  __pyx_t_3 = ((__pyx_v_flags & PyBUF_F_CONTIGUOUS) == PyBUF_F_CONTIGUOUS);
  if (__pyx_t_3) {

    /* "numpy.pxd":218
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):             # <<<<<<<<<<<<<<
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 */
    __pyx_t_1 = (!PyArray_CHKFLAGS(__pyx_v_self, NPY_F_CONTIGUOUS));
    __pyx_t_2 = __pyx_t_1;
  } else {
    __pyx_t_2 = __pyx_t_3;
  }
  if (__pyx_t_2) {

    /* "numpy.pxd":219
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
    __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_68), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __Pyx_Raise(__pyx_t_4, 0, 0, 0);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    goto __pyx_L6;
  }
  __pyx_L6:;

  /* "numpy.pxd":221
 *                 raise ValueError(u"ndarray is not Fortran contiguous")
 * 
 *             info.buf = PyArray_DATA(self)             # <<<<<<<<<<<<<<
 *             info.ndim = ndim
 *             if copy_shape:
 */
  __pyx_v_info->buf = PyArray_DATA(__pyx_v_self);

  /* "numpy.pxd":222
 * 
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim             # <<<<<<<<<<<<<<
 *             if copy_shape:
 *                 # Allocate new buffer for strides and shape info.
 */
  __pyx_v_info->ndim = __pyx_v_ndim;

  /* "numpy.pxd":223
 *             info.buf = PyArray_DATA(self)
 *             info.ndim = ndim
 *             if copy_shape:             # <<<<<<<<<<<<<<
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 */
  if (__pyx_v_copy_shape) {

    /* "numpy.pxd":226
 *                 # Allocate new buffer for strides and shape info.
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)             # <<<<<<<<<<<<<<
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 */
    __pyx_v_info->strides = ((Py_ssize_t *)malloc((((sizeof(Py_ssize_t)) * ((size_t)__pyx_v_ndim)) * 2)));

    /* "numpy.pxd":227
 *                 # This is allocated as one block, strides first.
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim             # <<<<<<<<<<<<<<
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 */
    __pyx_v_info->shape = (__pyx_v_info->strides + __pyx_v_ndim);

    /* "numpy.pxd":228
 *                 info.strides = <Py_ssize_t*>stdlib.malloc(sizeof(Py_ssize_t) * <size_t>ndim * 2)
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):             # <<<<<<<<<<<<<<
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 */
    __pyx_t_5 = __pyx_v_ndim;
    for (__pyx_t_6 = 0; __pyx_t_6 < __pyx_t_5; __pyx_t_6+=1) {
      __pyx_v_i = __pyx_t_6;

      /* "numpy.pxd":229
 *                 info.shape = info.strides + ndim
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]             # <<<<<<<<<<<<<<
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 */
      (__pyx_v_info->strides[__pyx_v_i]) = (PyArray_STRIDES(__pyx_v_self)[__pyx_v_i]);

      /* "numpy.pxd":230
 *                 for i in range(ndim):
 *                     info.strides[i] = PyArray_STRIDES(self)[i]
 *                     info.shape[i] = PyArray_DIMS(self)[i]             # <<<<<<<<<<<<<<
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 */
      (__pyx_v_info->shape[__pyx_v_i]) = (PyArray_DIMS(__pyx_v_self)[__pyx_v_i]);
    }
    goto __pyx_L7;
  }
  /*else*/ {

    /* "numpy.pxd":232
 *                     info.shape[i] = PyArray_DIMS(self)[i]
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)             # <<<<<<<<<<<<<<
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 */
    __pyx_v_info->strides = ((Py_ssize_t *)PyArray_STRIDES(__pyx_v_self));

    /* "numpy.pxd":233
 *             else:
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)             # <<<<<<<<<<<<<<
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 */
    __pyx_v_info->shape = ((Py_ssize_t *)PyArray_DIMS(__pyx_v_self));
  }
  __pyx_L7:;

  /* "numpy.pxd":234
 *                 info.strides = <Py_ssize_t*>PyArray_STRIDES(self)
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL             # <<<<<<<<<<<<<<
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 */
  __pyx_v_info->suboffsets = NULL;

  /* "numpy.pxd":235
 *                 info.shape = <Py_ssize_t*>PyArray_DIMS(self)
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)             # <<<<<<<<<<<<<<
 *             info.readonly = not PyArray_ISWRITEABLE(self)
 * 
 */
  __pyx_v_info->itemsize = PyArray_ITEMSIZE(__pyx_v_self);

  /* "numpy.pxd":236
 *             info.suboffsets = NULL
 *             info.itemsize = PyArray_ITEMSIZE(self)
 *             info.readonly = not PyArray_ISWRITEABLE(self)             # <<<<<<<<<<<<<<
 * 
 *             cdef int t
 */
  __pyx_v_info->readonly = (!PyArray_ISWRITEABLE(__pyx_v_self));

  /* "numpy.pxd":239
 * 
 *             cdef int t
 *             cdef char* f = NULL             # <<<<<<<<<<<<<<
 *             cdef dtype descr = self.descr
 *             cdef list stack
 */
  __pyx_v_f = NULL;

  /* "numpy.pxd":240
 *             cdef int t
 *             cdef char* f = NULL
 *             cdef dtype descr = self.descr             # <<<<<<<<<<<<<<
 *             cdef list stack
 *             cdef int offset
 */
  __pyx_t_4 = ((PyObject *)__pyx_v_self->descr);
  __Pyx_INCREF(__pyx_t_4);
  __pyx_v_descr = ((PyArray_Descr *)__pyx_t_4);
  __pyx_t_4 = 0;

  /* "numpy.pxd":244
 *             cdef int offset
 * 
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields and not copy_shape:
 */
  __pyx_v_hasfields = PyDataType_HASFIELDS(__pyx_v_descr);

  /* "numpy.pxd":246
 *             cdef bint hasfields = PyDataType_HASFIELDS(descr)
 * 
 *             if not hasfields and not copy_shape:             # <<<<<<<<<<<<<<
 *                 # do not call releasebuffer
 *                 info.obj = None
 */
  __pyx_t_2 = (!__pyx_v_hasfields);
  if (__pyx_t_2) {
    __pyx_t_3 = (!__pyx_v_copy_shape);
    __pyx_t_1 = __pyx_t_3;
  } else {
    __pyx_t_1 = __pyx_t_2;
  }
  if (__pyx_t_1) {

    /* "numpy.pxd":248
 *             if not hasfields and not copy_shape:
 *                 # do not call releasebuffer
 *                 info.obj = None             # <<<<<<<<<<<<<<
 *             else:
 *                 # need to call releasebuffer
 */
    __Pyx_INCREF(Py_None);
    __Pyx_GIVEREF(Py_None);
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = Py_None;
    goto __pyx_L10;
  }
  /*else*/ {

    /* "numpy.pxd":251
 *             else:
 *                 # need to call releasebuffer
 *                 info.obj = self             # <<<<<<<<<<<<<<
 * 
 *             if not hasfields:
 */
    __Pyx_INCREF(((PyObject *)__pyx_v_self));
    __Pyx_GIVEREF(((PyObject *)__pyx_v_self));
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj);
    __pyx_v_info->obj = ((PyObject *)__pyx_v_self);
  }
  __pyx_L10:;

  /* "numpy.pxd":253
 *                 info.obj = self
 * 
 *             if not hasfields:             # <<<<<<<<<<<<<<
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 */
  __pyx_t_1 = (!__pyx_v_hasfields);
  if (__pyx_t_1) {

    /* "numpy.pxd":254
 * 
 *             if not hasfields:
 *                 t = descr.type_num             # <<<<<<<<<<<<<<
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 */
    __pyx_t_5 = __pyx_v_descr->type_num;
    __pyx_v_t = __pyx_t_5;

    /* "numpy.pxd":255
 *             if not hasfields:
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_1 = (__pyx_v_descr->byteorder == '>');
    if (__pyx_t_1) {
      __pyx_t_2 = __pyx_v_little_endian;
    } else {
      __pyx_t_2 = __pyx_t_1;
    }
    if (!__pyx_t_2) {

      /* "numpy.pxd":256
 *                 t = descr.type_num
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 */
      __pyx_t_1 = (__pyx_v_descr->byteorder == '<');
      if (__pyx_t_1) {
        __pyx_t_3 = (!__pyx_v_little_endian);
        __pyx_t_7 = __pyx_t_3;
      } else {
        __pyx_t_7 = __pyx_t_1;
      }
      __pyx_t_1 = __pyx_t_7;
    } else {
      __pyx_t_1 = __pyx_t_2;
    }
    if (__pyx_t_1) {

      /* "numpy.pxd":257
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
      __pyx_t_4 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_70), NULL); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __Pyx_Raise(__pyx_t_4, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L12;
    }
    __pyx_L12:;

    /* "numpy.pxd":258
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_BYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__b;
      goto __pyx_L13;
    }

    /* "numpy.pxd":259
 *                     raise ValueError(u"Non-native byte order not supported")
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UBYTE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__B;
      goto __pyx_L13;
    }

    /* "numpy.pxd":260
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_SHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__h;
      goto __pyx_L13;
    }

    /* "numpy.pxd":261
 *                 elif t == NPY_UBYTE:       f = "B"
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_USHORT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__H;
      goto __pyx_L13;
    }

    /* "numpy.pxd":262
 *                 elif t == NPY_SHORT:       f = "h"
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_INT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__i;
      goto __pyx_L13;
    }

    /* "numpy.pxd":263
 *                 elif t == NPY_USHORT:      f = "H"
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_UINT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__I;
      goto __pyx_L13;
    }

    /* "numpy.pxd":264
 *                 elif t == NPY_INT:         f = "i"
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__l;
      goto __pyx_L13;
    }

    /* "numpy.pxd":265
 *                 elif t == NPY_UINT:        f = "I"
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__L;
      goto __pyx_L13;
    }

    /* "numpy.pxd":266
 *                 elif t == NPY_LONG:        f = "l"
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__q;
      goto __pyx_L13;
    }

    /* "numpy.pxd":267
 *                 elif t == NPY_ULONG:       f = "L"
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_ULONGLONG);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Q;
      goto __pyx_L13;
    }

    /* "numpy.pxd":268
 *                 elif t == NPY_LONGLONG:    f = "q"
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_FLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__f;
      goto __pyx_L13;
    }

    /* "numpy.pxd":269
 *                 elif t == NPY_ULONGLONG:   f = "Q"
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_DOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__d;
      goto __pyx_L13;
    }

    /* "numpy.pxd":270
 *                 elif t == NPY_FLOAT:       f = "f"
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_LONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__g;
      goto __pyx_L13;
    }

    /* "numpy.pxd":271
 *                 elif t == NPY_DOUBLE:      f = "d"
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CFLOAT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zf;
      goto __pyx_L13;
    }

    /* "numpy.pxd":272
 *                 elif t == NPY_LONGDOUBLE:  f = "g"
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zd;
      goto __pyx_L13;
    }

    /* "numpy.pxd":273
 *                 elif t == NPY_CFLOAT:      f = "Zf"
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"             # <<<<<<<<<<<<<<
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 */
    __pyx_t_1 = (__pyx_v_t == NPY_CLONGDOUBLE);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__Zg;
      goto __pyx_L13;
    }

    /* "numpy.pxd":274
 *                 elif t == NPY_CDOUBLE:     f = "Zd"
 *                 elif t == NPY_CLONGDOUBLE: f = "Zg"
 *                 elif t == NPY_OBJECT:      f = "O"             # <<<<<<<<<<<<<<
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
    __pyx_t_1 = (__pyx_v_t == NPY_OBJECT);
    if (__pyx_t_1) {
      __pyx_v_f = __pyx_k__O;
      goto __pyx_L13;
    }
    /*else*/ {

      /* "numpy.pxd":276
 *                 elif t == NPY_OBJECT:      f = "O"
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *                 info.format = f
 *                 return
 */
      __pyx_t_4 = PyInt_FromLong(__pyx_v_t); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      __pyx_t_8 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_71), __pyx_t_4); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(((PyObject *)__pyx_t_8));
      __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
      __pyx_t_4 = PyTuple_New(1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_4);
      PyTuple_SET_ITEM(__pyx_t_4, 0, ((PyObject *)__pyx_t_8));
      __Pyx_GIVEREF(((PyObject *)__pyx_t_8));
      __pyx_t_8 = 0;
      __pyx_t_8 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_4), NULL); if (unlikely(!__pyx_t_8)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_8);
      __Pyx_DECREF(((PyObject *)__pyx_t_4)); __pyx_t_4 = 0;
      __Pyx_Raise(__pyx_t_8, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_8); __pyx_t_8 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 276; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
    __pyx_L13:;

    /* "numpy.pxd":277
 *                 else:
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f             # <<<<<<<<<<<<<<
 *                 return
 *             else:
 */
    __pyx_v_info->format = __pyx_v_f;

    /* "numpy.pxd":278
 *                     raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *                 info.format = f
 *                 return             # <<<<<<<<<<<<<<
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 */
    __pyx_r = 0;
    goto __pyx_L0;
    goto __pyx_L11;
  }
  /*else*/ {

    /* "numpy.pxd":280
 *                 return
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)             # <<<<<<<<<<<<<<
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0
 */
    __pyx_v_info->format = ((char *)malloc(255));

    /* "numpy.pxd":281
 *             else:
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment             # <<<<<<<<<<<<<<
 *                 offset = 0
 *                 f = _util_dtypestring(descr, info.format + 1,
 */
    (__pyx_v_info->format[0]) = '^';

    /* "numpy.pxd":282
 *                 info.format = <char*>stdlib.malloc(_buffer_format_string_len)
 *                 info.format[0] = c'^' # Native data types, manual alignment
 *                 offset = 0             # <<<<<<<<<<<<<<
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 */
    __pyx_v_offset = 0;

    /* "numpy.pxd":285
 *                 f = _util_dtypestring(descr, info.format + 1,
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)             # <<<<<<<<<<<<<<
 *                 f[0] = c'\0' # Terminate format string
 * 
 */
    __pyx_t_9 = __pyx_f_5numpy__util_dtypestring(__pyx_v_descr, (__pyx_v_info->format + 1), (__pyx_v_info->format + 255), (&__pyx_v_offset)); if (unlikely(__pyx_t_9 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 283; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __pyx_v_f = __pyx_t_9;

    /* "numpy.pxd":286
 *                                       info.format + _buffer_format_string_len,
 *                                       &offset)
 *                 f[0] = c'\0' # Terminate format string             # <<<<<<<<<<<<<<
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 */
    (__pyx_v_f[0]) = '\x00';
  }
  __pyx_L11:;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_8);
  __Pyx_AddTraceback("numpy.ndarray.__getbuffer__", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = -1;
  if (__pyx_v_info != NULL && __pyx_v_info->obj != NULL) {
    __Pyx_GOTREF(__pyx_v_info->obj);
    __Pyx_DECREF(__pyx_v_info->obj); __pyx_v_info->obj = NULL;
  }
  goto __pyx_L2;
  __pyx_L0:;
  if (__pyx_v_info != NULL && __pyx_v_info->obj == Py_None) {
    __Pyx_GOTREF(Py_None);
    __Pyx_DECREF(Py_None); __pyx_v_info->obj = NULL;
  }
  __pyx_L2:;
  __Pyx_XDECREF((PyObject *)__pyx_v_descr);
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* Python wrapper */
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info); /*proto*/
static CYTHON_UNUSED void __pyx_pw_5numpy_7ndarray_3__releasebuffer__(PyObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__ (wrapper)", 0);
  __pyx_pf_5numpy_7ndarray_2__releasebuffer__(((PyArrayObject *)__pyx_v_self), ((Py_buffer *)__pyx_v_info));
  __Pyx_RefNannyFinishContext();
}

/* "numpy.pxd":288
 *                 f[0] = c'\0' # Terminate format string
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):             # <<<<<<<<<<<<<<
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 */

static void __pyx_pf_5numpy_7ndarray_2__releasebuffer__(PyArrayObject *__pyx_v_self, Py_buffer *__pyx_v_info) {
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("__releasebuffer__", 0);
  __Pyx_TraceCall("__releasebuffer__", __pyx_f[1], 288);

  /* "numpy.pxd":289
 * 
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 */
  __pyx_t_1 = PyArray_HASFIELDS(__pyx_v_self);
  if (__pyx_t_1) {

    /* "numpy.pxd":290
 *         def __releasebuffer__(ndarray self, Py_buffer* info):
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)             # <<<<<<<<<<<<<<
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)
 */
    free(__pyx_v_info->format);
    goto __pyx_L3;
  }
  __pyx_L3:;

  /* "numpy.pxd":291
 *             if PyArray_HASFIELDS(self):
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):             # <<<<<<<<<<<<<<
 *                 stdlib.free(info.strides)
 *                 # info.shape was stored after info.strides in the same block
 */
  __pyx_t_1 = ((sizeof(npy_intp)) != (sizeof(Py_ssize_t)));
  if (__pyx_t_1) {

    /* "numpy.pxd":292
 *                 stdlib.free(info.format)
 *             if sizeof(npy_intp) != sizeof(Py_ssize_t):
 *                 stdlib.free(info.strides)             # <<<<<<<<<<<<<<
 *                 # info.shape was stored after info.strides in the same block
 * 
 */
    free(__pyx_v_info->strides);
    goto __pyx_L4;
  }
  __pyx_L4:;

  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
}

/* "numpy.pxd":768
 * ctypedef npy_cdouble     complex_t
 * 
 * cdef inline object PyArray_MultiIterNew1(a):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew1(PyObject *__pyx_v_a) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew1", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew1", __pyx_f[1], 768);

  /* "numpy.pxd":769
 * 
 * cdef inline object PyArray_MultiIterNew1(a):
 *     return PyArray_MultiIterNew(1, <void*>a)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(1, ((void *)__pyx_v_a)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 769; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew1", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":771
 *     return PyArray_MultiIterNew(1, <void*>a)
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew2(PyObject *__pyx_v_a, PyObject *__pyx_v_b) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew2", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew2", __pyx_f[1], 771);

  /* "numpy.pxd":772
 * 
 * cdef inline object PyArray_MultiIterNew2(a, b):
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(2, ((void *)__pyx_v_a), ((void *)__pyx_v_b)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 772; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew2", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":774
 *     return PyArray_MultiIterNew(2, <void*>a, <void*>b)
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew3(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew3", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew3", __pyx_f[1], 774);

  /* "numpy.pxd":775
 * 
 * cdef inline object PyArray_MultiIterNew3(a, b, c):
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(3, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 775; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew3", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":777
 *     return PyArray_MultiIterNew(3, <void*>a, <void*>b, <void*> c)
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew4(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew4", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew4", __pyx_f[1], 777);

  /* "numpy.pxd":778
 * 
 * cdef inline object PyArray_MultiIterNew4(a, b, c, d):
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)             # <<<<<<<<<<<<<<
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(4, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 778; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew4", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":780
 *     return PyArray_MultiIterNew(4, <void*>a, <void*>b, <void*>c, <void*> d)
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):             # <<<<<<<<<<<<<<
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_PyArray_MultiIterNew5(PyObject *__pyx_v_a, PyObject *__pyx_v_b, PyObject *__pyx_v_c, PyObject *__pyx_v_d, PyObject *__pyx_v_e) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("PyArray_MultiIterNew5", 0);
  __Pyx_TraceCall("PyArray_MultiIterNew5", __pyx_f[1], 780);

  /* "numpy.pxd":781
 * 
 * cdef inline object PyArray_MultiIterNew5(a, b, c, d, e):
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)             # <<<<<<<<<<<<<<
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:
 */
  __Pyx_XDECREF(__pyx_r);
  __pyx_t_1 = PyArray_MultiIterNew(5, ((void *)__pyx_v_a), ((void *)__pyx_v_b), ((void *)__pyx_v_c), ((void *)__pyx_v_d), ((void *)__pyx_v_e)); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 781; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __pyx_r = __pyx_t_1;
  __pyx_t_1 = 0;
  goto __pyx_L0;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_AddTraceback("numpy.PyArray_MultiIterNew5", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = 0;
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":783
 *     return PyArray_MultiIterNew(5, <void*>a, <void*>b, <void*>c, <void*> d, <void*> e)
 * 
 * cdef inline char* _util_dtypestring(dtype descr, char* f, char* end, int* offset) except NULL:             # <<<<<<<<<<<<<<
 *     # Recursive utility function used in __getbuffer__ to get format
 *     # string. The new location in the format string is returned.
 */

static CYTHON_INLINE char *__pyx_f_5numpy__util_dtypestring(PyArray_Descr *__pyx_v_descr, char *__pyx_v_f, char *__pyx_v_end, int *__pyx_v_offset) {
  PyArray_Descr *__pyx_v_child = 0;
  int __pyx_v_endian_detector;
  int __pyx_v_little_endian;
  PyObject *__pyx_v_fields = 0;
  PyObject *__pyx_v_childname = NULL;
  PyObject *__pyx_v_new_offset = NULL;
  PyObject *__pyx_v_t = NULL;
  char *__pyx_r;
  __Pyx_RefNannyDeclarations
  PyObject *__pyx_t_1 = NULL;
  Py_ssize_t __pyx_t_2;
  PyObject *__pyx_t_3 = NULL;
  PyObject *__pyx_t_4 = NULL;
  PyObject *__pyx_t_5 = NULL;
  PyObject *(*__pyx_t_6)(PyObject *);
  int __pyx_t_7;
  int __pyx_t_8;
  int __pyx_t_9;
  int __pyx_t_10;
  long __pyx_t_11;
  char *__pyx_t_12;
  int __pyx_lineno = 0;
  const char *__pyx_filename = NULL;
  int __pyx_clineno = 0;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("_util_dtypestring", 0);
  __Pyx_TraceCall("_util_dtypestring", __pyx_f[1], 783);

  /* "numpy.pxd":790
 *     cdef int delta_offset
 *     cdef tuple i
 *     cdef int endian_detector = 1             # <<<<<<<<<<<<<<
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)
 *     cdef tuple fields
 */
  __pyx_v_endian_detector = 1;

  /* "numpy.pxd":791
 *     cdef tuple i
 *     cdef int endian_detector = 1
 *     cdef bint little_endian = ((<char*>&endian_detector)[0] != 0)             # <<<<<<<<<<<<<<
 *     cdef tuple fields
 * 
 */
  __pyx_v_little_endian = ((((char *)(&__pyx_v_endian_detector))[0]) != 0);

  /* "numpy.pxd":794
 *     cdef tuple fields
 * 
 *     for childname in descr.names:             # <<<<<<<<<<<<<<
 *         fields = descr.fields[childname]
 *         child, new_offset = fields
 */
  if (unlikely(((PyObject *)__pyx_v_descr->names) == Py_None)) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
    {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __pyx_t_1 = ((PyObject *)__pyx_v_descr->names); __Pyx_INCREF(__pyx_t_1); __pyx_t_2 = 0;
  for (;;) {
    if (__pyx_t_2 >= PyTuple_GET_SIZE(__pyx_t_1)) break;
    #if CYTHON_COMPILING_IN_CPYTHON
    __pyx_t_3 = PyTuple_GET_ITEM(__pyx_t_1, __pyx_t_2); __Pyx_INCREF(__pyx_t_3); __pyx_t_2++; if (unlikely(0 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #else
    __pyx_t_3 = PySequence_ITEM(__pyx_t_1, __pyx_t_2); __pyx_t_2++; if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 794; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    #endif
    __Pyx_XDECREF(__pyx_v_childname);
    __pyx_v_childname = __pyx_t_3;
    __pyx_t_3 = 0;

    /* "numpy.pxd":795
 * 
 *     for childname in descr.names:
 *         fields = descr.fields[childname]             # <<<<<<<<<<<<<<
 *         child, new_offset = fields
 * 
 */
    __pyx_t_3 = PyObject_GetItem(__pyx_v_descr->fields, __pyx_v_childname); if (!__pyx_t_3) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    if (!(likely(PyTuple_CheckExact(__pyx_t_3))||((__pyx_t_3) == Py_None)||(PyErr_Format(PyExc_TypeError, "Expected tuple, got %.200s", Py_TYPE(__pyx_t_3)->tp_name), 0))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 795; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF(((PyObject *)__pyx_v_fields));
    __pyx_v_fields = ((PyObject*)__pyx_t_3);
    __pyx_t_3 = 0;

    /* "numpy.pxd":796
 *     for childname in descr.names:
 *         fields = descr.fields[childname]
 *         child, new_offset = fields             # <<<<<<<<<<<<<<
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 */
    if (likely(PyTuple_CheckExact(((PyObject *)__pyx_v_fields)))) {
      PyObject* sequence = ((PyObject *)__pyx_v_fields);
      #if CYTHON_COMPILING_IN_CPYTHON
      Py_ssize_t size = Py_SIZE(sequence);
      #else
      Py_ssize_t size = PySequence_Size(sequence);
      #endif
      if (unlikely(size != 2)) {
        if (size > 2) __Pyx_RaiseTooManyValuesError(2);
        else if (size >= 0) __Pyx_RaiseNeedMoreValuesError(size);
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      #if CYTHON_COMPILING_IN_CPYTHON
      __pyx_t_3 = PyTuple_GET_ITEM(sequence, 0); 
      __pyx_t_4 = PyTuple_GET_ITEM(sequence, 1); 
      __Pyx_INCREF(__pyx_t_3);
      __Pyx_INCREF(__pyx_t_4);
      #else
      __pyx_t_3 = PySequence_ITEM(sequence, 0); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_4 = PySequence_ITEM(sequence, 1); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      #endif
    } else if (1) {
      __Pyx_RaiseNoneNotIterableError(); {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    } else
    {
      Py_ssize_t index = -1;
      __pyx_t_5 = PyObject_GetIter(((PyObject *)__pyx_v_fields)); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_6 = Py_TYPE(__pyx_t_5)->tp_iternext;
      index = 0; __pyx_t_3 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_3)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_3);
      index = 1; __pyx_t_4 = __pyx_t_6(__pyx_t_5); if (unlikely(!__pyx_t_4)) goto __pyx_L5_unpacking_failed;
      __Pyx_GOTREF(__pyx_t_4);
      if (__Pyx_IternextUnpackEndCheck(__pyx_t_6(__pyx_t_5), 2) < 0) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_t_6 = NULL;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      goto __pyx_L6_unpacking_done;
      __pyx_L5_unpacking_failed:;
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_6 = NULL;
      if (__Pyx_IterFinish() == 0) __Pyx_RaiseNeedMoreValuesError(index);
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_L6_unpacking_done:;
    }
    if (!(likely(((__pyx_t_3) == Py_None) || likely(__Pyx_TypeTest(__pyx_t_3, __pyx_ptype_5numpy_dtype))))) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 796; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_XDECREF(((PyObject *)__pyx_v_child));
    __pyx_v_child = ((PyArray_Descr *)__pyx_t_3);
    __pyx_t_3 = 0;
    __Pyx_XDECREF(__pyx_v_new_offset);
    __pyx_v_new_offset = __pyx_t_4;
    __pyx_t_4 = 0;

    /* "numpy.pxd":798
 *         child, new_offset = fields
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:             # <<<<<<<<<<<<<<
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 */
    __pyx_t_4 = PyInt_FromLong((__pyx_v_end - __pyx_v_f)); if (unlikely(!__pyx_t_4)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_4);
    __pyx_t_3 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __pyx_t_5 = PyNumber_Subtract(__pyx_v_new_offset, __pyx_t_3); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_5);
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_3 = PyNumber_Subtract(__pyx_t_4, __pyx_t_5); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_GOTREF(__pyx_t_3);
    __Pyx_DECREF(__pyx_t_4); __pyx_t_4 = 0;
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    __pyx_t_5 = PyObject_RichCompare(__pyx_t_3, __pyx_int_15, Py_LT); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
    __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 798; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
    if (__pyx_t_7) {

      /* "numpy.pxd":799
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_73), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L7;
    }
    __pyx_L7:;

    /* "numpy.pxd":801
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")
 * 
 *         if ((child.byteorder == c'>' and little_endian) or             # <<<<<<<<<<<<<<
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")
 */
    __pyx_t_7 = (__pyx_v_child->byteorder == '>');
    if (__pyx_t_7) {
      __pyx_t_8 = __pyx_v_little_endian;
    } else {
      __pyx_t_8 = __pyx_t_7;
    }
    if (!__pyx_t_8) {

      /* "numpy.pxd":802
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):             # <<<<<<<<<<<<<<
 *             raise ValueError(u"Non-native byte order not supported")
 *             # One could encode it in the format string and have Cython
 */
      __pyx_t_7 = (__pyx_v_child->byteorder == '<');
      if (__pyx_t_7) {
        __pyx_t_9 = (!__pyx_v_little_endian);
        __pyx_t_10 = __pyx_t_9;
      } else {
        __pyx_t_10 = __pyx_t_7;
      }
      __pyx_t_7 = __pyx_t_10;
    } else {
      __pyx_t_7 = __pyx_t_8;
    }
    if (__pyx_t_7) {

      /* "numpy.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
      __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_k_tuple_74), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __Pyx_Raise(__pyx_t_5, 0, 0, 0);
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      goto __pyx_L8;
    }
    __pyx_L8:;

    /* "numpy.pxd":813
 * 
 *         # Output padding bytes
 *         while offset[0] < new_offset:             # <<<<<<<<<<<<<<
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 */
    while (1) {
      __pyx_t_5 = PyInt_FromLong((__pyx_v_offset[0])); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_t_5, __pyx_v_new_offset, Py_LT); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 813; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (!__pyx_t_7) break;

      /* "numpy.pxd":814
 *         # Output padding bytes
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte             # <<<<<<<<<<<<<<
 *             f += 1
 *             offset[0] += 1
 */
      (__pyx_v_f[0]) = 120;

      /* "numpy.pxd":815
 *         while offset[0] < new_offset:
 *             f[0] = 120 # "x"; pad byte
 *             f += 1             # <<<<<<<<<<<<<<
 *             offset[0] += 1
 * 
 */
      __pyx_v_f = (__pyx_v_f + 1);

      /* "numpy.pxd":816
 *             f[0] = 120 # "x"; pad byte
 *             f += 1
 *             offset[0] += 1             # <<<<<<<<<<<<<<
 * 
 *         offset[0] += child.itemsize
 */
      __pyx_t_11 = 0;
      (__pyx_v_offset[__pyx_t_11]) = ((__pyx_v_offset[__pyx_t_11]) + 1);
    }

    /* "numpy.pxd":818
 *             offset[0] += 1
 * 
 *         offset[0] += child.itemsize             # <<<<<<<<<<<<<<
 * 
 *         if not PyDataType_HASFIELDS(child):
 */
    __pyx_t_11 = 0;
    (__pyx_v_offset[__pyx_t_11]) = ((__pyx_v_offset[__pyx_t_11]) + __pyx_v_child->elsize);

    /* "numpy.pxd":820
 *         offset[0] += child.itemsize
 * 
 *         if not PyDataType_HASFIELDS(child):             # <<<<<<<<<<<<<<
 *             t = child.type_num
 *             if end - f < 5:
 */
    __pyx_t_7 = (!PyDataType_HASFIELDS(__pyx_v_child));
    if (__pyx_t_7) {

      /* "numpy.pxd":821
 * 
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num             # <<<<<<<<<<<<<<
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")
 */
      __pyx_t_3 = PyInt_FromLong(__pyx_v_child->type_num); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 821; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __Pyx_XDECREF(__pyx_v_t);
      __pyx_v_t = __pyx_t_3;
      __pyx_t_3 = 0;

      /* "numpy.pxd":822
 *         if not PyDataType_HASFIELDS(child):
 *             t = child.type_num
 *             if end - f < 5:             # <<<<<<<<<<<<<<
 *                 raise RuntimeError(u"Format string allocated too short.")
 * 
 */
      __pyx_t_7 = ((__pyx_v_end - __pyx_v_f) < 5);
      if (__pyx_t_7) {

        /* "numpy.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
        __pyx_t_3 = PyObject_Call(__pyx_builtin_RuntimeError, ((PyObject *)__pyx_k_tuple_76), NULL); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        __Pyx_Raise(__pyx_t_3, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        goto __pyx_L12;
      }
      __pyx_L12:;

      /* "numpy.pxd":826
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_BYTE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 826; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 98;
        goto __pyx_L13;
      }

      /* "numpy.pxd":827
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"             # <<<<<<<<<<<<<<
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UBYTE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 827; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 66;
        goto __pyx_L13;
      }

      /* "numpy.pxd":828
 *             if   t == NPY_BYTE:        f[0] =  98 #"b"
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"             # <<<<<<<<<<<<<<
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_SHORT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 828; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 104;
        goto __pyx_L13;
      }

      /* "numpy.pxd":829
 *             elif t == NPY_UBYTE:       f[0] =  66 #"B"
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"             # <<<<<<<<<<<<<<
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_USHORT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 829; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 72;
        goto __pyx_L13;
      }

      /* "numpy.pxd":830
 *             elif t == NPY_SHORT:       f[0] = 104 #"h"
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"             # <<<<<<<<<<<<<<
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_INT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 830; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 105;
        goto __pyx_L13;
      }

      /* "numpy.pxd":831
 *             elif t == NPY_USHORT:      f[0] =  72 #"H"
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_UINT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 831; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 73;
        goto __pyx_L13;
      }

      /* "numpy.pxd":832
 *             elif t == NPY_INT:         f[0] = 105 #"i"
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 832; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 108;
        goto __pyx_L13;
      }

      /* "numpy.pxd":833
 *             elif t == NPY_UINT:        f[0] =  73 #"I"
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 833; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 76;
        goto __pyx_L13;
      }

      /* "numpy.pxd":834
 *             elif t == NPY_LONG:        f[0] = 108 #"l"
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGLONG); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 834; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 113;
        goto __pyx_L13;
      }

      /* "numpy.pxd":835
 *             elif t == NPY_ULONG:       f[0] = 76  #"L"
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"             # <<<<<<<<<<<<<<
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 */
      __pyx_t_5 = PyInt_FromLong(NPY_ULONGLONG); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 835; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 81;
        goto __pyx_L13;
      }

      /* "numpy.pxd":836
 *             elif t == NPY_LONGLONG:    f[0] = 113 #"q"
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"             # <<<<<<<<<<<<<<
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_FLOAT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 836; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 102;
        goto __pyx_L13;
      }

      /* "numpy.pxd":837
 *             elif t == NPY_ULONGLONG:   f[0] = 81  #"Q"
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"             # <<<<<<<<<<<<<<
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 */
      __pyx_t_5 = PyInt_FromLong(NPY_DOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 837; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 100;
        goto __pyx_L13;
      }

      /* "numpy.pxd":838
 *             elif t == NPY_FLOAT:       f[0] = 102 #"f"
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"             # <<<<<<<<<<<<<<
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 */
      __pyx_t_3 = PyInt_FromLong(NPY_LONGDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 838; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 103;
        goto __pyx_L13;
      }

      /* "numpy.pxd":839
 *             elif t == NPY_DOUBLE:      f[0] = 100 #"d"
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf             # <<<<<<<<<<<<<<
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CFLOAT); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 839; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 102;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "numpy.pxd":840
 *             elif t == NPY_LONGDOUBLE:  f[0] = 103 #"g"
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd             # <<<<<<<<<<<<<<
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 */
      __pyx_t_3 = PyInt_FromLong(NPY_CDOUBLE); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 840; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 100;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "numpy.pxd":841
 *             elif t == NPY_CFLOAT:      f[0] = 90; f[1] = 102; f += 1 # Zf
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg             # <<<<<<<<<<<<<<
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 */
      __pyx_t_5 = PyInt_FromLong(NPY_CLONGDOUBLE); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_5);
      __pyx_t_3 = PyObject_RichCompare(__pyx_v_t, __pyx_t_5, Py_EQ); __Pyx_XGOTREF(__pyx_t_3); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_3); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 841; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 90;
        (__pyx_v_f[1]) = 103;
        __pyx_v_f = (__pyx_v_f + 1);
        goto __pyx_L13;
      }

      /* "numpy.pxd":842
 *             elif t == NPY_CDOUBLE:     f[0] = 90; f[1] = 100; f += 1 # Zd
 *             elif t == NPY_CLONGDOUBLE: f[0] = 90; f[1] = 103; f += 1 # Zg
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"             # <<<<<<<<<<<<<<
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 */
      __pyx_t_3 = PyInt_FromLong(NPY_OBJECT); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_GOTREF(__pyx_t_3);
      __pyx_t_5 = PyObject_RichCompare(__pyx_v_t, __pyx_t_3, Py_EQ); __Pyx_XGOTREF(__pyx_t_5); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_3); __pyx_t_3 = 0;
      __pyx_t_7 = __Pyx_PyObject_IsTrue(__pyx_t_5); if (unlikely(__pyx_t_7 < 0)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 842; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
      if (__pyx_t_7) {
        (__pyx_v_f[0]) = 79;
        goto __pyx_L13;
      }
      /*else*/ {

        /* "numpy.pxd":844
 *             elif t == NPY_OBJECT:      f[0] = 79 #"O"
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)             # <<<<<<<<<<<<<<
 *             f += 1
 *         else:
 */
        __pyx_t_5 = PyNumber_Remainder(((PyObject *)__pyx_kp_u_71), __pyx_v_t); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(((PyObject *)__pyx_t_5));
        __pyx_t_3 = PyTuple_New(1); if (unlikely(!__pyx_t_3)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_3);
        PyTuple_SET_ITEM(__pyx_t_3, 0, ((PyObject *)__pyx_t_5));
        __Pyx_GIVEREF(((PyObject *)__pyx_t_5));
        __pyx_t_5 = 0;
        __pyx_t_5 = PyObject_Call(__pyx_builtin_ValueError, ((PyObject *)__pyx_t_3), NULL); if (unlikely(!__pyx_t_5)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
        __Pyx_GOTREF(__pyx_t_5);
        __Pyx_DECREF(((PyObject *)__pyx_t_3)); __pyx_t_3 = 0;
        __Pyx_Raise(__pyx_t_5, 0, 0, 0);
        __Pyx_DECREF(__pyx_t_5); __pyx_t_5 = 0;
        {__pyx_filename = __pyx_f[1]; __pyx_lineno = 844; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      }
      __pyx_L13:;

      /* "numpy.pxd":845
 *             else:
 *                 raise ValueError(u"unknown dtype code in numpy.pxd (%d)" % t)
 *             f += 1             # <<<<<<<<<<<<<<
 *         else:
 *             # Cython ignores struct boundary information ("T{...}"),
 */
      __pyx_v_f = (__pyx_v_f + 1);
      goto __pyx_L11;
    }
    /*else*/ {

      /* "numpy.pxd":849
 *             # Cython ignores struct boundary information ("T{...}"),
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)             # <<<<<<<<<<<<<<
 *     return f
 * 
 */
      __pyx_t_12 = __pyx_f_5numpy__util_dtypestring(__pyx_v_child, __pyx_v_f, __pyx_v_end, __pyx_v_offset); if (unlikely(__pyx_t_12 == NULL)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 849; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
      __pyx_v_f = __pyx_t_12;
    }
    __pyx_L11:;
  }
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "numpy.pxd":850
 *             # so don't output it
 *             f = _util_dtypestring(child, f, end, offset)
 *     return f             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_r = __pyx_v_f;
  goto __pyx_L0;

  __pyx_r = 0;
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_3);
  __Pyx_XDECREF(__pyx_t_4);
  __Pyx_XDECREF(__pyx_t_5);
  __Pyx_AddTraceback("numpy._util_dtypestring", __pyx_clineno, __pyx_lineno, __pyx_filename);
  __pyx_r = NULL;
  __pyx_L0:;
  __Pyx_XDECREF((PyObject *)__pyx_v_child);
  __Pyx_XDECREF(__pyx_v_fields);
  __Pyx_XDECREF(__pyx_v_childname);
  __Pyx_XDECREF(__pyx_v_new_offset);
  __Pyx_XDECREF(__pyx_v_t);
  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}

/* "numpy.pxd":965
 * 
 * 
 * cdef inline void set_array_base(ndarray arr, object base):             # <<<<<<<<<<<<<<
 *      cdef PyObject* baseptr
 *      if base is None:
 */

static CYTHON_INLINE void __pyx_f_5numpy_set_array_base(PyArrayObject *__pyx_v_arr, PyObject *__pyx_v_base) {
  PyObject *__pyx_v_baseptr;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("set_array_base", 0);
  __Pyx_TraceCall("set_array_base", __pyx_f[1], 965);

  /* "numpy.pxd":967
 * cdef inline void set_array_base(ndarray arr, object base):
 *      cdef PyObject* baseptr
 *      if base is None:             # <<<<<<<<<<<<<<
 *          baseptr = NULL
 *      else:
 */
  __pyx_t_1 = (__pyx_v_base == Py_None);
  if (__pyx_t_1) {

    /* "numpy.pxd":968
 *      cdef PyObject* baseptr
 *      if base is None:
 *          baseptr = NULL             # <<<<<<<<<<<<<<
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 */
    __pyx_v_baseptr = NULL;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "numpy.pxd":970
 *          baseptr = NULL
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!             # <<<<<<<<<<<<<<
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 */
    Py_INCREF(__pyx_v_base);

    /* "numpy.pxd":971
 *      else:
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base             # <<<<<<<<<<<<<<
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr
 */
    __pyx_v_baseptr = ((PyObject *)__pyx_v_base);
  }
  __pyx_L3:;

  /* "numpy.pxd":972
 *          Py_INCREF(base) # important to do this before decref below!
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)             # <<<<<<<<<<<<<<
 *      arr.base = baseptr
 * 
 */
  Py_XDECREF(__pyx_v_arr->base);

  /* "numpy.pxd":973
 *          baseptr = <PyObject*>base
 *      Py_XDECREF(arr.base)
 *      arr.base = baseptr             # <<<<<<<<<<<<<<
 * 
 * cdef inline object get_array_base(ndarray arr):
 */
  __pyx_v_arr->base = __pyx_v_baseptr;

  __Pyx_TraceReturn(Py_None);
  __Pyx_RefNannyFinishContext();
}

/* "numpy.pxd":975
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */

static CYTHON_INLINE PyObject *__pyx_f_5numpy_get_array_base(PyArrayObject *__pyx_v_arr) {
  PyObject *__pyx_r = NULL;
  __Pyx_RefNannyDeclarations
  int __pyx_t_1;
  __Pyx_TraceDeclarations
  __Pyx_RefNannySetupContext("get_array_base", 0);
  __Pyx_TraceCall("get_array_base", __pyx_f[1], 975);

  /* "numpy.pxd":976
 * 
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:             # <<<<<<<<<<<<<<
 *         return None
 *     else:
 */
  __pyx_t_1 = (__pyx_v_arr->base == NULL);
  if (__pyx_t_1) {

    /* "numpy.pxd":977
 * cdef inline object get_array_base(ndarray arr):
 *     if arr.base is NULL:
 *         return None             # <<<<<<<<<<<<<<
 *     else:
 *         return <object>arr.base
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(Py_None);
    __pyx_r = Py_None;
    goto __pyx_L0;
    goto __pyx_L3;
  }
  /*else*/ {

    /* "numpy.pxd":979
 *         return None
 *     else:
 *         return <object>arr.base             # <<<<<<<<<<<<<<
 */
    __Pyx_XDECREF(__pyx_r);
    __Pyx_INCREF(((PyObject *)__pyx_v_arr->base));
    __pyx_r = ((PyObject *)__pyx_v_arr->base);
    goto __pyx_L0;
  }
  __pyx_L3:;

  __pyx_r = Py_None; __Pyx_INCREF(Py_None);
  __pyx_L0:;
  __Pyx_XGIVEREF(__pyx_r);
  __Pyx_TraceReturn(__pyx_r);
  __Pyx_RefNannyFinishContext();
  return __pyx_r;
}
static struct __pyx_vtabstruct_7LDModel_LDModel __pyx_vtable_7LDModel_LDModel;

static PyObject *__pyx_tp_new_7LDModel_LDModel(PyTypeObject *t, PyObject *a, PyObject *k) {
  struct __pyx_obj_7LDModel_LDModel *p;
  PyObject *o = (*t->tp_alloc)(t, 0);
  if (!o) return 0;
  p = ((struct __pyx_obj_7LDModel_LDModel *)o);
  p->__pyx_vtab = __pyx_vtabptr_7LDModel_LDModel;
  p->_inner_probs_file = Py_None; Py_INCREF(Py_None);
  p->_probs_file = Py_None; Py_INCREF(Py_None);
  p->_trans_file = Py_None; Py_INCREF(Py_None);
  p->_ibs_file = Py_None; Py_INCREF(Py_None);
  if (__pyx_pw_7LDModel_7LDModel_1__cinit__(o, a, k) < 0) {
    Py_DECREF(o); o = 0;
  }
  return o;
}

static void __pyx_tp_dealloc_7LDModel_LDModel(PyObject *o) {
  struct __pyx_obj_7LDModel_LDModel *p = (struct __pyx_obj_7LDModel_LDModel *)o;
  PyObject_GC_UnTrack(o);
  {
    PyObject *etype, *eval, *etb;
    PyErr_Fetch(&etype, &eval, &etb);
    ++Py_REFCNT(o);
    __pyx_pw_7LDModel_7LDModel_3__dealloc__(o);
    if (PyErr_Occurred()) PyErr_WriteUnraisable(o);
    --Py_REFCNT(o);
    PyErr_Restore(etype, eval, etb);
  }
  Py_CLEAR(p->_inner_probs_file);
  Py_CLEAR(p->_probs_file);
  Py_CLEAR(p->_trans_file);
  Py_CLEAR(p->_ibs_file);
  PyObject_GC_Track(o);
  (*Py_TYPE(o)->tp_free)(o);
}

static int __pyx_tp_traverse_7LDModel_LDModel(PyObject *o, visitproc v, void *a) {
  int e;
  struct __pyx_obj_7LDModel_LDModel *p = (struct __pyx_obj_7LDModel_LDModel *)o;
  if (p->_inner_probs_file) {
    e = (*v)(p->_inner_probs_file, a); if (e) return e;
  }
  if (p->_probs_file) {
    e = (*v)(p->_probs_file, a); if (e) return e;
  }
  if (p->_trans_file) {
    e = (*v)(p->_trans_file, a); if (e) return e;
  }
  if (p->_ibs_file) {
    e = (*v)(p->_ibs_file, a); if (e) return e;
  }
  return 0;
}

static int __pyx_tp_clear_7LDModel_LDModel(PyObject *o) {
  struct __pyx_obj_7LDModel_LDModel *p = (struct __pyx_obj_7LDModel_LDModel *)o;
  PyObject* tmp;
  tmp = ((PyObject*)p->_inner_probs_file);
  p->_inner_probs_file = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_probs_file);
  p->_probs_file = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_trans_file);
  p->_trans_file = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  tmp = ((PyObject*)p->_ibs_file);
  p->_ibs_file = Py_None; Py_INCREF(Py_None);
  Py_XDECREF(tmp);
  return 0;
}

static PyMethodDef __pyx_methods_7LDModel_LDModel[] = {
  {__Pyx_NAMESTR("set_ibd_trans_rate"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_5set_ibd_trans_rate, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_alphas"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_7set_alphas, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_chrs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_9set_chrs, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("set_prefix_string"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_11set_prefix_string, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("read_map"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_13read_map, METH_O, __Pyx_DOCSTR(__pyx_doc_7LDModel_7LDModel_12read_map)},
  {__Pyx_NAMESTR("read_genetic_map"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_15read_genetic_map, METH_O, __Pyx_DOCSTR(__pyx_doc_7LDModel_7LDModel_14read_genetic_map)},
  {__Pyx_NAMESTR("read_haplos"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_17read_haplos, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("read_from_bgl_file"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_19read_from_bgl_file, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(__pyx_doc_7LDModel_7LDModel_18read_from_bgl_file)},
  {__Pyx_NAMESTR("set_ibs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_21set_ibs, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_haplo_num"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_23get_haplo_num, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_snp_num"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_25get_snp_num, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_haplo"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_27get_haplo, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_layer_node_nums"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_29get_layer_node_nums, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_node_edges"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_31get_node_edges, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_node_edges_back"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_33get_node_edges_back, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_node_ems_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_35get_node_ems_probs, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_trans_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_37get_trans_probs, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_forward_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_39get_forward_probs, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("print_transitions"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_41print_transitions, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("generate_random_hap"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_43generate_random_hap, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_ibd_prior"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_45calc_ibd_prior, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_anc_trans"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_47calc_anc_trans, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("emission_prob_ibd_admx_mem_alloc"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_49emission_prob_ibd_admx_mem_alloc, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("emission_prob_ibd_admx_mem_free"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_51emission_prob_ibd_admx_mem_free, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_emission_probs_ibd_admx"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_53calc_emission_probs_ibd_admx, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("forward_probs_mem_alloc"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_55forward_probs_mem_alloc, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("forward_probs_mem_free"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_57forward_probs_mem_free, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_forward_probs_ibd_admx"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_59calc_forward_probs_ibd_admx, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("backward_probs_mem_alloc"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_61backward_probs_mem_alloc, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_backward_probs_ibd_admx"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_63calc_backward_probs_ibd_admx, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("top_level_alloc_mem"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_65top_level_alloc_mem, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("top_level_init"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_67top_level_init, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("top_level_print"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_69top_level_print, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("print_inner_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_71print_inner_probs, METH_O, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_top_level_ems_probs_inner"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_73calc_top_level_ems_probs_inner, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_top_level_ems_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_75calc_top_level_ems_probs, METH_VARARGS|METH_KEYWORDS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_top_level_forward_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_77calc_top_level_forward_probs, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("calc_top_level_backward_probs"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_79calc_top_level_backward_probs, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("posterior_top_level_decoding"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_81posterior_top_level_decoding, METH_NOARGS, __Pyx_DOCSTR(0)},
  {__Pyx_NAMESTR("get_num_windows"), (PyCFunction)__pyx_pw_7LDModel_7LDModel_83get_num_windows, METH_NOARGS, __Pyx_DOCSTR(0)},
  {0, 0, 0, 0}
};

static PyNumberMethods __pyx_tp_as_number_LDModel = {
  0, /*nb_add*/
  0, /*nb_subtract*/
  0, /*nb_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_divide*/
  #endif
  0, /*nb_remainder*/
  0, /*nb_divmod*/
  0, /*nb_power*/
  0, /*nb_negative*/
  0, /*nb_positive*/
  0, /*nb_absolute*/
  0, /*nb_nonzero*/
  0, /*nb_invert*/
  0, /*nb_lshift*/
  0, /*nb_rshift*/
  0, /*nb_and*/
  0, /*nb_xor*/
  0, /*nb_or*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_coerce*/
  #endif
  0, /*nb_int*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_long*/
  #else
  0, /*reserved*/
  #endif
  0, /*nb_float*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_oct*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*nb_hex*/
  #endif
  0, /*nb_inplace_add*/
  0, /*nb_inplace_subtract*/
  0, /*nb_inplace_multiply*/
  #if PY_MAJOR_VERSION < 3
  0, /*nb_inplace_divide*/
  #endif
  0, /*nb_inplace_remainder*/
  0, /*nb_inplace_power*/
  0, /*nb_inplace_lshift*/
  0, /*nb_inplace_rshift*/
  0, /*nb_inplace_and*/
  0, /*nb_inplace_xor*/
  0, /*nb_inplace_or*/
  0, /*nb_floor_divide*/
  0, /*nb_true_divide*/
  0, /*nb_inplace_floor_divide*/
  0, /*nb_inplace_true_divide*/
  #if PY_VERSION_HEX >= 0x02050000
  0, /*nb_index*/
  #endif
};

static PySequenceMethods __pyx_tp_as_sequence_LDModel = {
  0, /*sq_length*/
  0, /*sq_concat*/
  0, /*sq_repeat*/
  0, /*sq_item*/
  0, /*sq_slice*/
  0, /*sq_ass_item*/
  0, /*sq_ass_slice*/
  0, /*sq_contains*/
  0, /*sq_inplace_concat*/
  0, /*sq_inplace_repeat*/
};

static PyMappingMethods __pyx_tp_as_mapping_LDModel = {
  0, /*mp_length*/
  0, /*mp_subscript*/
  0, /*mp_ass_subscript*/
};

static PyBufferProcs __pyx_tp_as_buffer_LDModel = {
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getreadbuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getwritebuffer*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getsegcount*/
  #endif
  #if PY_MAJOR_VERSION < 3
  0, /*bf_getcharbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_getbuffer*/
  #endif
  #if PY_VERSION_HEX >= 0x02060000
  0, /*bf_releasebuffer*/
  #endif
};

static PyTypeObject __pyx_type_7LDModel_LDModel = {
  PyVarObject_HEAD_INIT(0, 0)
  __Pyx_NAMESTR("LDModel.LDModel"), /*tp_name*/
  sizeof(struct __pyx_obj_7LDModel_LDModel), /*tp_basicsize*/
  0, /*tp_itemsize*/
  __pyx_tp_dealloc_7LDModel_LDModel, /*tp_dealloc*/
  0, /*tp_print*/
  0, /*tp_getattr*/
  0, /*tp_setattr*/
  #if PY_MAJOR_VERSION < 3
  0, /*tp_compare*/
  #else
  0, /*reserved*/
  #endif
  0, /*tp_repr*/
  &__pyx_tp_as_number_LDModel, /*tp_as_number*/
  &__pyx_tp_as_sequence_LDModel, /*tp_as_sequence*/
  &__pyx_tp_as_mapping_LDModel, /*tp_as_mapping*/
  0, /*tp_hash*/
  0, /*tp_call*/
  0, /*tp_str*/
  0, /*tp_getattro*/
  0, /*tp_setattro*/
  &__pyx_tp_as_buffer_LDModel, /*tp_as_buffer*/
  Py_TPFLAGS_DEFAULT|Py_TPFLAGS_CHECKTYPES|Py_TPFLAGS_HAVE_NEWBUFFER|Py_TPFLAGS_BASETYPE|Py_TPFLAGS_HAVE_GC, /*tp_flags*/
  __Pyx_DOCSTR("\n    Hidden Markov Model for a single ancestral population\n    "), /*tp_doc*/
  __pyx_tp_traverse_7LDModel_LDModel, /*tp_traverse*/
  __pyx_tp_clear_7LDModel_LDModel, /*tp_clear*/
  0, /*tp_richcompare*/
  0, /*tp_weaklistoffset*/
  0, /*tp_iter*/
  0, /*tp_iternext*/
  __pyx_methods_7LDModel_LDModel, /*tp_methods*/
  0, /*tp_members*/
  0, /*tp_getset*/
  0, /*tp_base*/
  0, /*tp_dict*/
  0, /*tp_descr_get*/
  0, /*tp_descr_set*/
  0, /*tp_dictoffset*/
  0, /*tp_init*/
  0, /*tp_alloc*/
  __pyx_tp_new_7LDModel_LDModel, /*tp_new*/
  0, /*tp_free*/
  0, /*tp_is_gc*/
  0, /*tp_bases*/
  0, /*tp_mro*/
  0, /*tp_cache*/
  0, /*tp_subclasses*/
  0, /*tp_weaklist*/
  0, /*tp_del*/
  #if PY_VERSION_HEX >= 0x02060000
  0, /*tp_version_tag*/
  #endif
};

static PyMethodDef __pyx_methods[] = {
  {0, 0, 0, 0}
};

#if PY_MAJOR_VERSION >= 3
static struct PyModuleDef __pyx_moduledef = {
    PyModuleDef_HEAD_INIT,
    __Pyx_NAMESTR("LDModel"),
    0, /* m_doc */
    -1, /* m_size */
    __pyx_methods /* m_methods */,
    NULL, /* m_reload */
    NULL, /* m_traverse */
    NULL, /* m_clear */
    NULL /* m_free */
};
#endif

static __Pyx_StringTabEntry __pyx_string_tab[] = {
  {&__pyx_kp_s_1, __pyx_k_1, sizeof(__pyx_k_1), 0, 0, 1, 0},
  {&__pyx_kp_s_14, __pyx_k_14, sizeof(__pyx_k_14), 0, 0, 1, 0},
  {&__pyx_kp_s_15, __pyx_k_15, sizeof(__pyx_k_15), 0, 0, 1, 0},
  {&__pyx_kp_s_17, __pyx_k_17, sizeof(__pyx_k_17), 0, 0, 1, 0},
  {&__pyx_kp_s_18, __pyx_k_18, sizeof(__pyx_k_18), 0, 0, 1, 0},
  {&__pyx_kp_s_2, __pyx_k_2, sizeof(__pyx_k_2), 0, 0, 1, 0},
  {&__pyx_kp_s_22, __pyx_k_22, sizeof(__pyx_k_22), 0, 0, 1, 0},
  {&__pyx_kp_s_27, __pyx_k_27, sizeof(__pyx_k_27), 0, 0, 1, 0},
  {&__pyx_kp_s_29, __pyx_k_29, sizeof(__pyx_k_29), 0, 0, 1, 0},
  {&__pyx_kp_s_3, __pyx_k_3, sizeof(__pyx_k_3), 0, 0, 1, 0},
  {&__pyx_kp_s_31, __pyx_k_31, sizeof(__pyx_k_31), 0, 0, 1, 0},
  {&__pyx_kp_s_32, __pyx_k_32, sizeof(__pyx_k_32), 0, 0, 1, 0},
  {&__pyx_kp_s_38, __pyx_k_38, sizeof(__pyx_k_38), 0, 0, 1, 0},
  {&__pyx_kp_s_4, __pyx_k_4, sizeof(__pyx_k_4), 0, 0, 1, 0},
  {&__pyx_kp_s_40, __pyx_k_40, sizeof(__pyx_k_40), 0, 0, 1, 0},
  {&__pyx_kp_s_41, __pyx_k_41, sizeof(__pyx_k_41), 0, 0, 1, 0},
  {&__pyx_kp_s_42, __pyx_k_42, sizeof(__pyx_k_42), 0, 0, 1, 0},
  {&__pyx_kp_s_44, __pyx_k_44, sizeof(__pyx_k_44), 0, 0, 1, 0},
  {&__pyx_kp_s_46, __pyx_k_46, sizeof(__pyx_k_46), 0, 0, 1, 0},
  {&__pyx_n_s_48, __pyx_k_48, sizeof(__pyx_k_48), 0, 0, 1, 1},
  {&__pyx_n_s_49, __pyx_k_49, sizeof(__pyx_k_49), 0, 0, 1, 1},
  {&__pyx_kp_s_5, __pyx_k_5, sizeof(__pyx_k_5), 0, 0, 1, 0},
  {&__pyx_n_s_50, __pyx_k_50, sizeof(__pyx_k_50), 0, 0, 1, 1},
  {&__pyx_n_s_51, __pyx_k_51, sizeof(__pyx_k_51), 0, 0, 1, 1},
  {&__pyx_n_s_52, __pyx_k_52, sizeof(__pyx_k_52), 0, 0, 1, 1},
  {&__pyx_n_s_53, __pyx_k_53, sizeof(__pyx_k_53), 0, 0, 1, 1},
  {&__pyx_n_s_54, __pyx_k_54, sizeof(__pyx_k_54), 0, 0, 1, 1},
  {&__pyx_n_s_55, __pyx_k_55, sizeof(__pyx_k_55), 0, 0, 1, 1},
  {&__pyx_kp_s_56, __pyx_k_56, sizeof(__pyx_k_56), 0, 0, 1, 0},
  {&__pyx_n_s_58, __pyx_k_58, sizeof(__pyx_k_58), 0, 0, 1, 1},
  {&__pyx_kp_s_59, __pyx_k_59, sizeof(__pyx_k_59), 0, 0, 1, 0},
  {&__pyx_kp_s_6, __pyx_k_6, sizeof(__pyx_k_6), 0, 0, 1, 0},
  {&__pyx_n_s_61, __pyx_k_61, sizeof(__pyx_k_61), 0, 0, 1, 1},
  {&__pyx_n_s_62, __pyx_k_62, sizeof(__pyx_k_62), 0, 0, 1, 1},
  {&__pyx_n_s_63, __pyx_k_63, sizeof(__pyx_k_63), 0, 0, 1, 1},
  {&__pyx_n_s_64, __pyx_k_64, sizeof(__pyx_k_64), 0, 0, 1, 1},
  {&__pyx_kp_u_65, __pyx_k_65, sizeof(__pyx_k_65), 0, 1, 0, 0},
  {&__pyx_kp_u_67, __pyx_k_67, sizeof(__pyx_k_67), 0, 1, 0, 0},
  {&__pyx_kp_u_69, __pyx_k_69, sizeof(__pyx_k_69), 0, 1, 0, 0},
  {&__pyx_kp_s_7, __pyx_k_7, sizeof(__pyx_k_7), 0, 0, 1, 0},
  {&__pyx_kp_u_71, __pyx_k_71, sizeof(__pyx_k_71), 0, 1, 0, 0},
  {&__pyx_kp_u_72, __pyx_k_72, sizeof(__pyx_k_72), 0, 1, 0, 0},
  {&__pyx_kp_u_75, __pyx_k_75, sizeof(__pyx_k_75), 0, 1, 0, 0},
  {&__pyx_n_s_77, __pyx_k_77, sizeof(__pyx_k_77), 0, 0, 1, 1},
  {&__pyx_n_s_78, __pyx_k_78, sizeof(__pyx_k_78), 0, 0, 1, 1},
  {&__pyx_kp_s_8, __pyx_k_8, sizeof(__pyx_k_8), 0, 0, 1, 0},
  {&__pyx_kp_s_9, __pyx_k_9, sizeof(__pyx_k_9), 0, 0, 1, 0},
  {&__pyx_kp_s__0, __pyx_k__0, sizeof(__pyx_k__0), 0, 0, 1, 0},
  {&__pyx_kp_s__1, __pyx_k__1, sizeof(__pyx_k__1), 0, 0, 1, 0},
  {&__pyx_n_s__Interval, __pyx_k__Interval, sizeof(__pyx_k__Interval), 0, 0, 1, 1},
  {&__pyx_n_s__IntervalTree, __pyx_k__IntervalTree, sizeof(__pyx_k__IntervalTree), 0, 0, 1, 1},
  {&__pyx_n_s__RuntimeError, __pyx_k__RuntimeError, sizeof(__pyx_k__RuntimeError), 0, 0, 1, 1},
  {&__pyx_n_s__ValueError, __pyx_k__ValueError, sizeof(__pyx_k__ValueError), 0, 0, 1, 1},
  {&__pyx_n_s____enter__, __pyx_k____enter__, sizeof(__pyx_k____enter__), 0, 0, 1, 1},
  {&__pyx_n_s____exit__, __pyx_k____exit__, sizeof(__pyx_k____exit__), 0, 0, 1, 1},
  {&__pyx_n_s____main__, __pyx_k____main__, sizeof(__pyx_k____main__), 0, 0, 1, 1},
  {&__pyx_n_s____test__, __pyx_k____test__, sizeof(__pyx_k____test__), 0, 0, 1, 1},
  {&__pyx_n_s___forward_probs, __pyx_k___forward_probs, sizeof(__pyx_k___forward_probs), 0, 0, 1, 1},
  {&__pyx_n_s__add_interval, __pyx_k__add_interval, sizeof(__pyx_k__add_interval), 0, 0, 1, 1},
  {&__pyx_n_s__anc, __pyx_k__anc, sizeof(__pyx_k__anc), 0, 0, 1, 1},
  {&__pyx_n_s__array, __pyx_k__array, sizeof(__pyx_k__array), 0, 0, 1, 1},
  {&__pyx_n_s__cPairIBD, __pyx_k__cPairIBD, sizeof(__pyx_k__cPairIBD), 0, 0, 1, 1},
  {&__pyx_n_s__calc_anc_trans, __pyx_k__calc_anc_trans, sizeof(__pyx_k__calc_anc_trans), 0, 0, 1, 1},
  {&__pyx_n_s__calc_ibd_prior, __pyx_k__calc_ibd_prior, sizeof(__pyx_k__calc_ibd_prior), 0, 0, 1, 1},
  {&__pyx_n_s__chr, __pyx_k__chr, sizeof(__pyx_k__chr), 0, 0, 1, 1},
  {&__pyx_n_s__chr1, __pyx_k__chr1, sizeof(__pyx_k__chr1), 0, 0, 1, 1},
  {&__pyx_n_s__chr2, __pyx_k__chr2, sizeof(__pyx_k__chr2), 0, 0, 1, 1},
  {&__pyx_n_s__chr3, __pyx_k__chr3, sizeof(__pyx_k__chr3), 0, 0, 1, 1},
  {&__pyx_n_s__chr4, __pyx_k__chr4, sizeof(__pyx_k__chr4), 0, 0, 1, 1},
  {&__pyx_n_s__close, __pyx_k__close, sizeof(__pyx_k__close), 0, 0, 1, 1},
  {&__pyx_n_s__cumsum, __pyx_k__cumsum, sizeof(__pyx_k__cumsum), 0, 0, 1, 1},
  {&__pyx_n_s__debug, __pyx_k__debug, sizeof(__pyx_k__debug), 0, 0, 1, 1},
  {&__pyx_n_s__exists, __pyx_k__exists, sizeof(__pyx_k__exists), 0, 0, 1, 1},
  {&__pyx_n_s__exit, __pyx_k__exit, sizeof(__pyx_k__exit), 0, 0, 1, 1},
  {&__pyx_n_s__file_name, __pyx_k__file_name, sizeof(__pyx_k__file_name), 0, 0, 1, 1},
  {&__pyx_n_s__find, __pyx_k__find, sizeof(__pyx_k__find), 0, 0, 1, 1},
  {&__pyx_n_s__g, __pyx_k__g, sizeof(__pyx_k__g), 0, 0, 1, 1},
  {&__pyx_n_s__generate_random_hap, __pyx_k__generate_random_hap, sizeof(__pyx_k__generate_random_hap), 0, 0, 1, 1},
  {&__pyx_n_s__get_num_windows, __pyx_k__get_num_windows, sizeof(__pyx_k__get_num_windows), 0, 0, 1, 1},
  {&__pyx_n_s__hap_idx1, __pyx_k__hap_idx1, sizeof(__pyx_k__hap_idx1), 0, 0, 1, 1},
  {&__pyx_n_s__hap_idx2, __pyx_k__hap_idx2, sizeof(__pyx_k__hap_idx2), 0, 0, 1, 1},
  {&__pyx_n_s__hap_idx3, __pyx_k__hap_idx3, sizeof(__pyx_k__hap_idx3), 0, 0, 1, 1},
  {&__pyx_n_s__hap_idx4, __pyx_k__hap_idx4, sizeof(__pyx_k__hap_idx4), 0, 0, 1, 1},
  {&__pyx_n_s__islice, __pyx_k__islice, sizeof(__pyx_k__islice), 0, 0, 1, 1},
  {&__pyx_n_s__itertools, __pyx_k__itertools, sizeof(__pyx_k__itertools), 0, 0, 1, 1},
  {&__pyx_n_s__k, __pyx_k__k, sizeof(__pyx_k__k), 0, 0, 1, 1},
  {&__pyx_n_s__log_dir, __pyx_k__log_dir, sizeof(__pyx_k__log_dir), 0, 0, 1, 1},
  {&__pyx_n_s__math, __pyx_k__math, sizeof(__pyx_k__math), 0, 0, 1, 1},
  {&__pyx_n_s__median, __pyx_k__median, sizeof(__pyx_k__median), 0, 0, 1, 1},
  {&__pyx_n_s__merge_intervals, __pyx_k__merge_intervals, sizeof(__pyx_k__merge_intervals), 0, 0, 1, 1},
  {&__pyx_n_s__np, __pyx_k__np, sizeof(__pyx_k__np), 0, 0, 1, 1},
  {&__pyx_n_s__numpy, __pyx_k__numpy, sizeof(__pyx_k__numpy), 0, 0, 1, 1},
  {&__pyx_n_s__open, __pyx_k__open, sizeof(__pyx_k__open), 0, 0, 1, 1},
  {&__pyx_n_s__os, __pyx_k__os, sizeof(__pyx_k__os), 0, 0, 1, 1},
  {&__pyx_n_s__path, __pyx_k__path, sizeof(__pyx_k__path), 0, 0, 1, 1},
  {&__pyx_n_s__print_inner_probs, __pyx_k__print_inner_probs, sizeof(__pyx_k__print_inner_probs), 0, 0, 1, 1},
  {&__pyx_n_s__random, __pyx_k__random, sizeof(__pyx_k__random), 0, 0, 1, 1},
  {&__pyx_n_s__range, __pyx_k__range, sizeof(__pyx_k__range), 0, 0, 1, 1},
  {&__pyx_n_s__readline, __pyx_k__readline, sizeof(__pyx_k__readline), 0, 0, 1, 1},
  {&__pyx_n_s__reversed, __pyx_k__reversed, sizeof(__pyx_k__reversed), 0, 0, 1, 1},
  {&__pyx_n_s__sample, __pyx_k__sample, sizeof(__pyx_k__sample), 0, 0, 1, 1},
  {&__pyx_n_s__searchsorted, __pyx_k__searchsorted, sizeof(__pyx_k__searchsorted), 0, 0, 1, 1},
  {&__pyx_n_s__set_alphas, __pyx_k__set_alphas, sizeof(__pyx_k__set_alphas), 0, 0, 1, 1},
  {&__pyx_n_s__set_chrs, __pyx_k__set_chrs, sizeof(__pyx_k__set_chrs), 0, 0, 1, 1},
  {&__pyx_n_s__set_ibd_trans_rate, __pyx_k__set_ibd_trans_rate, sizeof(__pyx_k__set_ibd_trans_rate), 0, 0, 1, 1},
  {&__pyx_n_s__snp_num, __pyx_k__snp_num, sizeof(__pyx_k__snp_num), 0, 0, 1, 1},
  {&__pyx_n_s__split, __pyx_k__split, sizeof(__pyx_k__split), 0, 0, 1, 1},
  {&__pyx_n_s__sum, __pyx_k__sum, sizeof(__pyx_k__sum), 0, 0, 1, 1},
  {&__pyx_n_s__t_0_1, __pyx_k__t_0_1, sizeof(__pyx_k__t_0_1), 0, 0, 1, 1},
  {&__pyx_n_s__t_1_0, __pyx_k__t_1_0, sizeof(__pyx_k__t_1_0), 0, 0, 1, 1},
  {&__pyx_n_s__top_level_alloc_mem, __pyx_k__top_level_alloc_mem, sizeof(__pyx_k__top_level_alloc_mem), 0, 0, 1, 1},
  {&__pyx_n_s__top_level_init, __pyx_k__top_level_init, sizeof(__pyx_k__top_level_init), 0, 0, 1, 1},
  {&__pyx_n_s__top_level_print, __pyx_k__top_level_print, sizeof(__pyx_k__top_level_print), 0, 0, 1, 1},
  {&__pyx_n_s__w, __pyx_k__w, sizeof(__pyx_k__w), 0, 0, 1, 1},
  {&__pyx_n_s__win_size, __pyx_k__win_size, sizeof(__pyx_k__win_size), 0, 0, 1, 1},
  {&__pyx_n_s__write, __pyx_k__write, sizeof(__pyx_k__write), 0, 0, 1, 1},
  {&__pyx_n_s__xrange, __pyx_k__xrange, sizeof(__pyx_k__xrange), 0, 0, 1, 1},
  {&__pyx_n_s__xreadlines, __pyx_k__xreadlines, sizeof(__pyx_k__xreadlines), 0, 0, 1, 1},
  {0, 0, 0, 0, 0, 0, 0}
};
static int __Pyx_InitCachedBuiltins(void) {
  __pyx_builtin_range = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_range) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 103; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_open = __Pyx_GetName(__pyx_b, __pyx_n_s__open); if (!__pyx_builtin_open) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 145; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_chr = __Pyx_GetName(__pyx_b, __pyx_n_s__chr); if (!__pyx_builtin_chr) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 183; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_exit = __Pyx_GetName(__pyx_b, __pyx_n_s__exit); if (!__pyx_builtin_exit) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_sum = __Pyx_GetName(__pyx_b, __pyx_n_s__sum); if (!__pyx_builtin_sum) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 442; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  __pyx_builtin_xrange = __Pyx_GetName(__pyx_b, __pyx_n_s__range); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #else
  __pyx_builtin_xrange = __Pyx_GetName(__pyx_b, __pyx_n_s__xrange); if (!__pyx_builtin_xrange) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 552; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  __pyx_builtin_reversed = __Pyx_GetName(__pyx_b, __pyx_n_s__reversed); if (!__pyx_builtin_reversed) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1170; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_ValueError = __Pyx_GetName(__pyx_b, __pyx_n_s__ValueError); if (!__pyx_builtin_ValueError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_builtin_RuntimeError = __Pyx_GetName(__pyx_b, __pyx_n_s__RuntimeError); if (!__pyx_builtin_RuntimeError) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  return 0;
  __pyx_L1_error:;
  return -1;
}

static int __Pyx_InitCachedConstants(void) {
  __Pyx_RefNannyDeclarations
  __Pyx_RefNannySetupContext("__Pyx_InitCachedConstants", 0);

  /* "LDModel.pyx":190
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr1[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr2[snp_idx])) == int(self._allele_0):
 *                 self._chr2[snp_idx] = 0
 */
  __pyx_k_tuple_10 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_10)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 190; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_10);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_10, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_10));

  /* "LDModel.pyx":198
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr2[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr3[snp_idx])) == int(self._allele_0):
 *                 self._chr3[snp_idx] = 0
 */
  __pyx_k_tuple_11 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_11)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 198; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_11);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_11, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_11));

  /* "LDModel.pyx":206
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr3[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 *             if int(chr(chr4[snp_idx])) == int(self._allele_0):
 *                 self._chr4[snp_idx] = 0
 */
  __pyx_k_tuple_12 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_12)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 206; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_12);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_12, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_12));

  /* "LDModel.pyx":214
 *                 else:
 *                     print "unidentified allele: " + str(int(chr(chr4[snp_idx])))
 *                     exit(-1)             # <<<<<<<<<<<<<<
 * 
 * 
 */
  __pyx_k_tuple_13 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_13)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 214; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_13);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_13, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_13));

  /* "LDModel.pyx":229
 *         if not os.path.exists(map_file_name):
 *             print "the file: " + map_file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         print "reading from map file: " + map_file_name
 */
  __pyx_k_tuple_16 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_16)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 229; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_16);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_16, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_16));

  /* "LDModel.pyx":256
 *                 for line in lines:
 *                     #print "line: " + line
 *                     line = line.split(" ")             # <<<<<<<<<<<<<<
 *                     #print "pos: " + line[0]
 *                     self._position[snp_idx] = int(line[3])
 */
  __pyx_k_tuple_19 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_19)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 256; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_19);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_18));
  PyTuple_SET_ITEM(__pyx_k_tuple_19, 0, ((PyObject *)__pyx_kp_s_18));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_18));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_19));

  /* "LDModel.pyx":233
 *         print "reading from map file: " + map_file_name
 * 
 *         with open(map_file_name) as map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  __pyx_k_tuple_20 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_20)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 233; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_20);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_20, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_20));

  /* "LDModel.pyx":270
 *         if not os.path.exists(genetic_map_file_name):
 *             print "the file: " + genetic_map_file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         print "reading from genetic map file: " + genetic_map_file_name
 */
  __pyx_k_tuple_21 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_21)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 270; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_21);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_21, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_21));

  /* "LDModel.pyx":297
 *                 for line in lines:
 *                     #print "line: " + line
 *                     line = line.split(" ")             # <<<<<<<<<<<<<<
 *                     #print "pos: " + line[0]
 *                     # TODO: this is a bug - need to read only positions that are in _position
 */
  __pyx_k_tuple_23 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_23)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 297; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_23);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_18));
  PyTuple_SET_ITEM(__pyx_k_tuple_23, 0, ((PyObject *)__pyx_kp_s_18));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_18));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_23));

  /* "LDModel.pyx":274
 *         print "reading from genetic map file: " + genetic_map_file_name
 * 
 *         with open(genetic_map_file_name) as genetic_map_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  __pyx_k_tuple_24 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_24)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 274; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_24);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_24, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_24));

  /* "LDModel.pyx":311
 *         if not os.path.exists(file_name):
 *             print "the file: " + file_name + " does not exist!"
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         count = 0
 */
  __pyx_k_tuple_25 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_25)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 311; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_25);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_25, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_25));

  /* "LDModel.pyx":314
 * 
 *         count = 0
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 *             for line in haplos_file.xreadlines(  ):
 *                 count += 1
 */
  __pyx_k_tuple_26 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_26)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 314; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_26);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_26, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_26));

  /* "LDModel.pyx":320
 *         if count == 0 or count % 2 == 1:
 *             print "bad number of haplotypes. quitting..."
 *             exit(-1)             # <<<<<<<<<<<<<<
 * 
 *         self._nr_haplos = count
 */
  __pyx_k_tuple_28 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_28)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 320; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_28);
  __Pyx_INCREF(__pyx_int_neg_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_28, 0, __pyx_int_neg_1);
  __Pyx_GIVEREF(__pyx_int_neg_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_28));

  /* "LDModel.pyx":327
 *         self._haplos = <char **> malloc(self._nr_haplos * sizeof(char *))
 * 
 *         with open(file_name) as haplos_file:             # <<<<<<<<<<<<<<
 * 
 *             first_read = True
 */
  __pyx_k_tuple_30 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_30)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 327; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_30);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_30, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_30, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_30, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_30));

  /* "LDModel.pyx":376
 *             model_file.readline()
 *             line = model_file.readline()
 *             node = line.split("\t")             # <<<<<<<<<<<<<<
 *             self._allele_0 = int(node[4])
 *             while True:
 */
  __pyx_k_tuple_33 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_33)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 376; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_33);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_32));
  PyTuple_SET_ITEM(__pyx_k_tuple_33, 0, ((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_33));

  /* "LDModel.pyx":381
 *                 line = model_file.readline()
 *                 if len(line) > 0:
 *                     node = line.split("\t")             # <<<<<<<<<<<<<<
 *                     if len(node) > 4:
 *                         curr_allele = node[4]
 */
  __pyx_k_tuple_34 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_34)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 381; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_34);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_32));
  PyTuple_SET_ITEM(__pyx_k_tuple_34, 0, ((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_34));

  /* "LDModel.pyx":372
 * 
 *         # identify allele coding
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 *             model_file.readline()
 *             model_file.readline()
 */
  __pyx_k_tuple_35 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_35)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 372; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_35);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_35, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_35, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_35, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_35));

  /* "LDModel.pyx":416
 *                 for line in lines:
 *                     if line != blank_line: # split next line
 *                         node = line.split("\t")             # <<<<<<<<<<<<<<
 *                         nodes.append(node[:6])
 *                     else: # an entire level has been read
 */
  __pyx_k_tuple_36 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_36)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 416; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_36);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_32));
  PyTuple_SET_ITEM(__pyx_k_tuple_36, 0, ((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_32));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_36));

  /* "LDModel.pyx":391
 *         #print "allele_1: " + str(self._allele_1) + "\n"
 * 
 *         with open(file_name) as model_file:             # <<<<<<<<<<<<<<
 * 
 *             blank_line = '\n'
 */
  __pyx_k_tuple_37 = PyTuple_New(3); if (unlikely(!__pyx_k_tuple_37)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 391; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_37);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_37, 0, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_37, 1, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_INCREF(Py_None);
  PyTuple_SET_ITEM(__pyx_k_tuple_37, 2, Py_None);
  __Pyx_GIVEREF(Py_None);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_37));

  /* "LDModel.pyx":524
 *                 self._ibs_file.write(str(int(self._ibs[win_idx])) + " ")
 *         if self._debug:
 *             self._ibs_file.write("\n")             # <<<<<<<<<<<<<<
 * 
 *     def get_haplo_num(self):
 */
  __pyx_k_tuple_39 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_39)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 524; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_39);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_1));
  PyTuple_SET_ITEM(__pyx_k_tuple_39, 0, ((PyObject *)__pyx_kp_s_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_1));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_39));

  /* "LDModel.pyx":603
 * 
 *     def print_transitions(self):
 *         self._trans_file.write("snp ancestry node next_node transition\n")             # <<<<<<<<<<<<<<
 *         for snp_idx in range(self._snp_num):
 *             for admx_idx in range(self.K):
 */
  __pyx_k_tuple_43 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_43)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 603; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_43);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_42));
  PyTuple_SET_ITEM(__pyx_k_tuple_43, 0, ((PyObject *)__pyx_kp_s_42));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_42));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_43));

  /* "LDModel.pyx":619
 *         #print "layer state nums: " + str(self._layer_state_nums[anc][0])
 *         #print "pi: " + str(p)
 *         cdef int next_node = np.array(p).cumsum().searchsorted(np.random.sample(1))[0]             # <<<<<<<<<<<<<<
 *         #print "next node: " + str(next_node)
 *         for layer in range(self._snp_num):
 */
  __pyx_k_tuple_45 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_45)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 619; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_45);
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_45, 0, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_45));

  /* "LDModel.pyx":631
 *                 t = [self._trans[anc][layer][next_node][i] for i in xrange(self._states[anc][layer][next_node].out_trans_num)]
 *                 #print "transition probs: " + str(t)
 *                 next_node = self._trans_idx[anc][layer][next_node][np.array(t).cumsum().searchsorted(np.random.sample(1))]             # <<<<<<<<<<<<<<
 *                 #print "next node: " + str(next_node)
 *         return hap
 */
  __pyx_k_tuple_47 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_47)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 631; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_47);
  __Pyx_INCREF(__pyx_int_1);
  PyTuple_SET_ITEM(__pyx_k_tuple_47, 0, __pyx_int_1);
  __Pyx_GIVEREF(__pyx_int_1);
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_47));

  /* "LDModel.pyx":1304
 *         cdef int ibd
 * 
 *         self._probs_file.write("ind1 ind2 win admx1 admx2 admx3 admx4 ibd forward backward gamma emission alpha1 alpha2 alpha3 alpha4 s1 s2 s3 s4\n")             # <<<<<<<<<<<<<<
 *         for win_idx in range(self.get_num_windows()):
 *             #print "initializing window %d" % win_idx
 */
  __pyx_k_tuple_57 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_57)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1304; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_57);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_56));
  PyTuple_SET_ITEM(__pyx_k_tuple_57, 0, ((PyObject *)__pyx_kp_s_56));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_56));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_57));

  /* "LDModel.pyx":1451
 * 
 *         if self._debug:
 *             self._inner_probs_file.write("ind1 ind2 snp admx1 admx2 admx3 admx4 node1 node2 node3 node4 ibd forward emission\n")             # <<<<<<<<<<<<<<
 * 
 *         for win_idx in range(self.get_num_windows()):
 */
  __pyx_k_tuple_60 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_60)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1451; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_60);
  __Pyx_INCREF(((PyObject *)__pyx_kp_s_59));
  PyTuple_SET_ITEM(__pyx_k_tuple_60, 0, ((PyObject *)__pyx_kp_s_59));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_s_59));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_60));

  /* "numpy.pxd":215
 *             if ((flags & pybuf.PyBUF_C_CONTIGUOUS == pybuf.PyBUF_C_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_C_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not C contiguous")             # <<<<<<<<<<<<<<
 * 
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 */
  __pyx_k_tuple_66 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_66)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 215; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_66);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_65));
  PyTuple_SET_ITEM(__pyx_k_tuple_66, 0, ((PyObject *)__pyx_kp_u_65));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_65));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_66));

  /* "numpy.pxd":219
 *             if ((flags & pybuf.PyBUF_F_CONTIGUOUS == pybuf.PyBUF_F_CONTIGUOUS)
 *                 and not PyArray_CHKFLAGS(self, NPY_F_CONTIGUOUS)):
 *                 raise ValueError(u"ndarray is not Fortran contiguous")             # <<<<<<<<<<<<<<
 * 
 *             info.buf = PyArray_DATA(self)
 */
  __pyx_k_tuple_68 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_68)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 219; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_68);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_67));
  PyTuple_SET_ITEM(__pyx_k_tuple_68, 0, ((PyObject *)__pyx_kp_u_67));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_67));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_68));

  /* "numpy.pxd":257
 *                 if ((descr.byteorder == c'>' and little_endian) or
 *                     (descr.byteorder == c'<' and not little_endian)):
 *                     raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *                 if   t == NPY_BYTE:        f = "b"
 *                 elif t == NPY_UBYTE:       f = "B"
 */
  __pyx_k_tuple_70 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_70)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 257; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_70);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_69));
  PyTuple_SET_ITEM(__pyx_k_tuple_70, 0, ((PyObject *)__pyx_kp_u_69));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_69));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_70));

  /* "numpy.pxd":799
 * 
 *         if (end - f) - (new_offset - offset[0]) < 15:
 *             raise RuntimeError(u"Format string allocated too short, see comment in numpy.pxd")             # <<<<<<<<<<<<<<
 * 
 *         if ((child.byteorder == c'>' and little_endian) or
 */
  __pyx_k_tuple_73 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_73)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 799; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_73);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_72));
  PyTuple_SET_ITEM(__pyx_k_tuple_73, 0, ((PyObject *)__pyx_kp_u_72));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_72));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_73));

  /* "numpy.pxd":803
 *         if ((child.byteorder == c'>' and little_endian) or
 *             (child.byteorder == c'<' and not little_endian)):
 *             raise ValueError(u"Non-native byte order not supported")             # <<<<<<<<<<<<<<
 *             # One could encode it in the format string and have Cython
 *             # complain instead, BUT: < and > in format strings also imply
 */
  __pyx_k_tuple_74 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_74)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 803; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_74);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_69));
  PyTuple_SET_ITEM(__pyx_k_tuple_74, 0, ((PyObject *)__pyx_kp_u_69));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_69));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_74));

  /* "numpy.pxd":823
 *             t = child.type_num
 *             if end - f < 5:
 *                 raise RuntimeError(u"Format string allocated too short.")             # <<<<<<<<<<<<<<
 * 
 *             # Until ticket #99 is fixed, use integers to avoid warnings
 */
  __pyx_k_tuple_76 = PyTuple_New(1); if (unlikely(!__pyx_k_tuple_76)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 823; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_k_tuple_76);
  __Pyx_INCREF(((PyObject *)__pyx_kp_u_75));
  PyTuple_SET_ITEM(__pyx_k_tuple_76, 0, ((PyObject *)__pyx_kp_u_75));
  __Pyx_GIVEREF(((PyObject *)__pyx_kp_u_75));
  __Pyx_GIVEREF(((PyObject *)__pyx_k_tuple_76));
  __Pyx_RefNannyFinishContext();
  return 0;
  __pyx_L1_error:;
  __Pyx_RefNannyFinishContext();
  return -1;
}

static int __Pyx_InitGlobals(void) {
  if (__Pyx_InitStrings(__pyx_string_tab) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_0 = PyInt_FromLong(0); if (unlikely(!__pyx_int_0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_1 = PyInt_FromLong(1); if (unlikely(!__pyx_int_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_2 = PyInt_FromLong(2); if (unlikely(!__pyx_int_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_3 = PyInt_FromLong(3); if (unlikely(!__pyx_int_3)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_4 = PyInt_FromLong(4); if (unlikely(!__pyx_int_4)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_neg_1 = PyInt_FromLong(-1); if (unlikely(!__pyx_int_neg_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  __pyx_int_15 = PyInt_FromLong(15); if (unlikely(!__pyx_int_15)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  return 0;
  __pyx_L1_error:;
  return -1;
}

#if PY_MAJOR_VERSION < 3
PyMODINIT_FUNC initLDModel(void); /*proto*/
PyMODINIT_FUNC initLDModel(void)
#else
PyMODINIT_FUNC PyInit_LDModel(void); /*proto*/
PyMODINIT_FUNC PyInit_LDModel(void)
#endif
{
  PyObject *__pyx_t_1 = NULL;
  PyObject *__pyx_t_2 = NULL;
  __Pyx_RefNannyDeclarations
  #if CYTHON_REFNANNY
  __Pyx_RefNanny = __Pyx_RefNannyImportAPI("refnanny");
  if (!__Pyx_RefNanny) {
      PyErr_Clear();
      __Pyx_RefNanny = __Pyx_RefNannyImportAPI("Cython.Runtime.refnanny");
      if (!__Pyx_RefNanny)
          Py_FatalError("failed to import 'refnanny' module");
  }
  #endif
  __Pyx_RefNannySetupContext("PyMODINIT_FUNC PyInit_LDModel(void)", 0);
  if ( __Pyx_check_binary_version() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_tuple = PyTuple_New(0); if (unlikely(!__pyx_empty_tuple)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_empty_bytes = PyBytes_FromStringAndSize("", 0); if (unlikely(!__pyx_empty_bytes)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #ifdef __Pyx_CyFunction_USED
  if (__Pyx_CyFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_FusedFunction_USED
  if (__pyx_FusedFunction_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  #ifdef __Pyx_Generator_USED
  if (__pyx_Generator_init() < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #endif
  /*--- Library function declarations ---*/
  /*--- Threads initialization code ---*/
  #if defined(__PYX_FORCE_INIT_THREADS) && __PYX_FORCE_INIT_THREADS
  #ifdef WITH_THREAD /* Python build with threading support? */
  PyEval_InitThreads();
  #endif
  #endif
  /*--- Module creation code ---*/
  #if PY_MAJOR_VERSION < 3
  __pyx_m = Py_InitModule4(__Pyx_NAMESTR("LDModel"), __pyx_methods, 0, 0, PYTHON_API_VERSION); Py_XINCREF(__pyx_m);
  #else
  __pyx_m = PyModule_Create(&__pyx_moduledef);
  #endif
  if (unlikely(!__pyx_m)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if PY_MAJOR_VERSION >= 3
  {
    PyObject *modules = PyImport_GetModuleDict(); if (unlikely(!modules)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    if (!PyDict_GetItemString(modules, "LDModel")) {
      if (unlikely(PyDict_SetItemString(modules, "LDModel", __pyx_m) < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
    }
  }
  #endif
  __pyx_b = PyImport_AddModule(__Pyx_NAMESTR(__Pyx_BUILTIN_MODULE_NAME)); if (unlikely(!__pyx_b)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  #if CYTHON_COMPILING_IN_PYPY
  Py_INCREF(__pyx_b);
  #endif
  if (__Pyx_SetAttrString(__pyx_m, "__builtins__", __pyx_b) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  /*--- Initialize various global constants etc. ---*/
  if (unlikely(__Pyx_InitGlobals() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__pyx_module_is_main_LDModel) {
    if (__Pyx_SetAttrString(__pyx_m, "__name__", __pyx_n_s____main__) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;};
  }
  /*--- Builtin init code ---*/
  if (unlikely(__Pyx_InitCachedBuiltins() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Constants init code ---*/
  if (unlikely(__Pyx_InitCachedConstants() < 0)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Global init code ---*/
  /*--- Variable export code ---*/
  /*--- Function export code ---*/
  /*--- Type init code ---*/
  __pyx_vtabptr_7LDModel_LDModel = &__pyx_vtable_7LDModel_LDModel;
  __pyx_vtable_7LDModel_LDModel.set_ibd_trans_rate = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, PyObject *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_set_ibd_trans_rate;
  __pyx_vtable_7LDModel_LDModel.set_alphas = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_set_alphas;
  __pyx_vtable_7LDModel_LDModel.set_chrs = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, char *, char *, char *, char *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_set_chrs;
  __pyx_vtable_7LDModel_LDModel.generate_random_hap = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_generate_random_hap;
  __pyx_vtable_7LDModel_LDModel.calc_ibd_prior = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_ibd_prior;
  __pyx_vtable_7LDModel_LDModel.calc_anc_trans = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_anc_trans;
  __pyx_vtable_7LDModel_LDModel.emission_prob_ibd_admx_mem_alloc = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_emission_prob_ibd_admx_mem_alloc;
  __pyx_vtable_7LDModel_LDModel.emission_prob_ibd_admx_mem_free = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_emission_prob_ibd_admx_mem_free;
  __pyx_vtable_7LDModel_LDModel.calc_emission_probs_ibd_admx = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_emission_probs_ibd_admx;
  __pyx_vtable_7LDModel_LDModel.forward_probs_mem_alloc = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_forward_probs_mem_alloc;
  __pyx_vtable_7LDModel_LDModel.forward_probs_mem_free = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_forward_probs_mem_free;
  __pyx_vtable_7LDModel_LDModel.forward_probs_init = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int))__pyx_f_7LDModel_7LDModel_forward_probs_init;
  __pyx_vtable_7LDModel_LDModel.calc_forward_probs_ibd_admx = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_forward_probs_ibd_admx;
  __pyx_vtable_7LDModel_LDModel.backward_probs_mem_alloc = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_backward_probs_mem_alloc;
  __pyx_vtable_7LDModel_LDModel.backward_probs_init = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int))__pyx_f_7LDModel_7LDModel_backward_probs_init;
  __pyx_vtable_7LDModel_LDModel.calc_backward_probs_ibd_admx = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_backward_probs_ibd_admx;
  __pyx_vtable_7LDModel_LDModel.top_level_alloc_mem = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_top_level_alloc_mem;
  __pyx_vtable_7LDModel_LDModel.top_level_init = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_top_level_init;
  __pyx_vtable_7LDModel_LDModel.top_level_print = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_top_level_print;
  __pyx_vtable_7LDModel_LDModel.calc_top_level_forward_probs = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_top_level_forward_probs;
  __pyx_vtable_7LDModel_LDModel.calc_top_level_backward_probs = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_top_level_backward_probs;
  __pyx_vtable_7LDModel_LDModel.print_inner_probs = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, PyObject *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_print_inner_probs;
  __pyx_vtable_7LDModel_LDModel.calc_top_level_ems_probs_inner = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_top_level_ems_probs_inner;
  __pyx_vtable_7LDModel_LDModel.calc_top_level_ems_probs = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int, int, int, int, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_calc_top_level_ems_probs;
  __pyx_vtable_7LDModel_LDModel.posterior_top_level_decoding = (PyObject *(*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_posterior_top_level_decoding;
  __pyx_vtable_7LDModel_LDModel.start_snp = (int (*)(struct __pyx_obj_7LDModel_LDModel *, int))__pyx_f_7LDModel_7LDModel_start_snp;
  __pyx_vtable_7LDModel_LDModel.end_snp = (int (*)(struct __pyx_obj_7LDModel_LDModel *, int))__pyx_f_7LDModel_7LDModel_end_snp;
  __pyx_vtable_7LDModel_LDModel.get_num_windows = (int (*)(struct __pyx_obj_7LDModel_LDModel *, int __pyx_skip_dispatch))__pyx_f_7LDModel_7LDModel_get_num_windows;
  if (PyType_Ready(&__pyx_type_7LDModel_LDModel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetVtable(__pyx_type_7LDModel_LDModel.tp_dict, __pyx_vtabptr_7LDModel_LDModel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  if (__Pyx_SetAttrString(__pyx_m, "LDModel", (PyObject *)&__pyx_type_7LDModel_LDModel) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 72; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_7LDModel_LDModel = &__pyx_type_7LDModel_LDModel;
  /*--- Type import code ---*/
  __pyx_ptype_7cpython_4type_type = __Pyx_ImportType(__Pyx_BUILTIN_MODULE_NAME, "type", 
  #if CYTHON_COMPILING_IN_PYPY
  sizeof(PyTypeObject),
  #else
  sizeof(PyHeapTypeObject),
  #endif
  0); if (unlikely(!__pyx_ptype_7cpython_4type_type)) {__pyx_filename = __pyx_f[2]; __pyx_lineno = 9; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_dtype = __Pyx_ImportType("numpy", "dtype", sizeof(PyArray_Descr), 0); if (unlikely(!__pyx_ptype_5numpy_dtype)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 155; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_flatiter = __Pyx_ImportType("numpy", "flatiter", sizeof(PyArrayIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_flatiter)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 165; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_broadcast = __Pyx_ImportType("numpy", "broadcast", sizeof(PyArrayMultiIterObject), 0); if (unlikely(!__pyx_ptype_5numpy_broadcast)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 169; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ndarray = __Pyx_ImportType("numpy", "ndarray", sizeof(PyArrayObject), 0); if (unlikely(!__pyx_ptype_5numpy_ndarray)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 178; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __pyx_ptype_5numpy_ufunc = __Pyx_ImportType("numpy", "ufunc", sizeof(PyUFuncObject), 0); if (unlikely(!__pyx_ptype_5numpy_ufunc)) {__pyx_filename = __pyx_f[1]; __pyx_lineno = 861; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  /*--- Variable import code ---*/
  /*--- Function import code ---*/
  /*--- Execution code ---*/

  /* "LDModel.pyx":4
 * 
 * from __future__ import division
 * import random             # <<<<<<<<<<<<<<
 * import numpy as np
 * cimport numpy as np
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__random), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__random, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 4; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":5
 * from __future__ import division
 * import random
 * import numpy as np             # <<<<<<<<<<<<<<
 * cimport numpy as np
 * import os
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__numpy), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__np, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 5; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":7
 * import numpy as np
 * cimport numpy as np
 * import os             # <<<<<<<<<<<<<<
 * import math
 * from libc.stdlib cimport malloc, free
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__os), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__os, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 7; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":8
 * cimport numpy as np
 * import os
 * import math             # <<<<<<<<<<<<<<
 * from libc.stdlib cimport malloc, free
 * from itertools import islice
 */
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s__math), 0, -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__math, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 8; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":10
 * import math
 * from libc.stdlib cimport malloc, free
 * from itertools import islice             # <<<<<<<<<<<<<<
 * from libc.math cimport exp, log
 * from libc.float cimport DBL_MIN, DBL_MAX
 */
  __pyx_t_1 = PyList_New(1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__islice));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__islice));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__islice));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s__itertools), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__islice);
  if (__pyx_t_1 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__islice);
    if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__islice, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 10; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":14
 * from libc.float cimport DBL_MIN, DBL_MAX
 * from libcpp cimport bool
 * from IBD.cIBD import cPairIBD             # <<<<<<<<<<<<<<
 * from bx.intervals import Interval, IntervalTree
 * 
 */
  __pyx_t_2 = PyList_New(1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__cPairIBD));
  PyList_SET_ITEM(__pyx_t_2, 0, ((PyObject *)__pyx_n_s__cPairIBD));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__cPairIBD));
  __pyx_t_1 = __Pyx_Import(((PyObject *)__pyx_n_s_77), ((PyObject *)__pyx_t_2), -1); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;
  __pyx_t_2 = PyObject_GetAttr(__pyx_t_1, __pyx_n_s__cPairIBD);
  if (__pyx_t_2 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__cPairIBD);
    if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_2);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__cPairIBD, __pyx_t_2) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 14; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;

  /* "LDModel.pyx":15
 * from libcpp cimport bool
 * from IBD.cIBD import cPairIBD
 * from bx.intervals import Interval, IntervalTree             # <<<<<<<<<<<<<<
 * 
 * cdef double eps = 1e-4
 */
  __pyx_t_1 = PyList_New(2); if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_1);
  __Pyx_INCREF(((PyObject *)__pyx_n_s__Interval));
  PyList_SET_ITEM(__pyx_t_1, 0, ((PyObject *)__pyx_n_s__Interval));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__Interval));
  __Pyx_INCREF(((PyObject *)__pyx_n_s__IntervalTree));
  PyList_SET_ITEM(__pyx_t_1, 1, ((PyObject *)__pyx_n_s__IntervalTree));
  __Pyx_GIVEREF(((PyObject *)__pyx_n_s__IntervalTree));
  __pyx_t_2 = __Pyx_Import(((PyObject *)__pyx_n_s_78), ((PyObject *)__pyx_t_1), -1); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(__pyx_t_2);
  __Pyx_DECREF(((PyObject *)__pyx_t_1)); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__Interval);
  if (__pyx_t_1 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__Interval);
    if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__Interval, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __pyx_t_1 = PyObject_GetAttr(__pyx_t_2, __pyx_n_s__IntervalTree);
  if (__pyx_t_1 == NULL) {
    if (PyErr_ExceptionMatches(PyExc_AttributeError)) __Pyx_RaiseImportError(__pyx_n_s__IntervalTree);
    if (unlikely(!__pyx_t_1)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  }
  __Pyx_GOTREF(__pyx_t_1);
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s__IntervalTree, __pyx_t_1) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 15; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(__pyx_t_1); __pyx_t_1 = 0;
  __Pyx_DECREF(__pyx_t_2); __pyx_t_2 = 0;

  /* "LDModel.pyx":17
 * from bx.intervals import Interval, IntervalTree
 * 
 * cdef double eps = 1e-4             # <<<<<<<<<<<<<<
 * 
 * cdef extern from "string.h":
 */
  __pyx_v_7LDModel_eps = 1e-4;

  /* "LDModel.pyx":1
 * #cython: profile=True             # <<<<<<<<<<<<<<
 * 
 * from __future__ import division
 */
  __pyx_t_2 = PyDict_New(); if (unlikely(!__pyx_t_2)) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_GOTREF(((PyObject *)__pyx_t_2));
  if (PyObject_SetAttr(__pyx_m, __pyx_n_s____test__, ((PyObject *)__pyx_t_2)) < 0) {__pyx_filename = __pyx_f[0]; __pyx_lineno = 1; __pyx_clineno = __LINE__; goto __pyx_L1_error;}
  __Pyx_DECREF(((PyObject *)__pyx_t_2)); __pyx_t_2 = 0;

  /* "numpy.pxd":975
 *      arr.base = baseptr
 * 
 * cdef inline object get_array_base(ndarray arr):             # <<<<<<<<<<<<<<
 *     if arr.base is NULL:
 *         return None
 */
  goto __pyx_L0;
  __pyx_L1_error:;
  __Pyx_XDECREF(__pyx_t_1);
  __Pyx_XDECREF(__pyx_t_2);
  if (__pyx_m) {
    __Pyx_AddTraceback("init LDModel", __pyx_clineno, __pyx_lineno, __pyx_filename);
    Py_DECREF(__pyx_m); __pyx_m = 0;
  } else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_ImportError, "init LDModel");
  }
  __pyx_L0:;
  __Pyx_RefNannyFinishContext();
  #if PY_MAJOR_VERSION < 3
  return;
  #else
  return __pyx_m;
  #endif
}

/* Runtime support code */
#if CYTHON_REFNANNY
static __Pyx_RefNannyAPIStruct *__Pyx_RefNannyImportAPI(const char *modname) {
    PyObject *m = NULL, *p = NULL;
    void *r = NULL;
    m = PyImport_ImportModule((char *)modname);
    if (!m) goto end;
    p = PyObject_GetAttrString(m, (char *)"RefNannyAPI");
    if (!p) goto end;
    r = PyLong_AsVoidPtr(p);
end:
    Py_XDECREF(p);
    Py_XDECREF(m);
    return (__Pyx_RefNannyAPIStruct *)r;
}
#endif /* CYTHON_REFNANNY */

static PyObject *__Pyx_GetName(PyObject *dict, PyObject *name) {
    PyObject *result;
    result = PyObject_GetAttr(dict, name);
    if (!result) {
        if (dict != __pyx_b) {
            PyErr_Clear();
            result = PyObject_GetAttr(__pyx_b, name);
        }
        if (!result) {
            PyErr_SetObject(PyExc_NameError, name);
        }
    }
    return result;
}

#if CYTHON_PROFILE
static int __Pyx_TraceSetupAndCall(PyCodeObject** code,
                                   PyFrameObject** frame,
                                   const char *funcname,
                                   const char *srcfile,
                                   int firstlineno) {
    if (*frame == NULL || !CYTHON_PROFILE_REUSE_FRAME) {
        if (*code == NULL) {
            *code = __Pyx_createFrameCodeObject(funcname, srcfile, firstlineno);
            if (*code == NULL) return 0;
        }
        *frame = PyFrame_New(
            PyThreadState_GET(),            /*PyThreadState *tstate*/
            *code,                          /*PyCodeObject *code*/
            PyModule_GetDict(__pyx_m),      /*PyObject *globals*/
            0                               /*PyObject *locals*/
        );
        if (*frame == NULL) return 0;
    }
    else {
        (*frame)->f_tstate = PyThreadState_GET();
    }
    return PyThreadState_GET()->c_profilefunc(PyThreadState_GET()->c_profileobj, *frame, PyTrace_CALL, NULL) == 0;
}
static PyCodeObject *__Pyx_createFrameCodeObject(const char *funcname, const char *srcfile, int firstlineno) {
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    PyCodeObject *py_code = 0;
    #if PY_MAJOR_VERSION < 3
    py_funcname = PyString_FromString(funcname);
    py_srcfile = PyString_FromString(srcfile);
    #else
    py_funcname = PyUnicode_FromString(funcname);
    py_srcfile = PyUnicode_FromString(srcfile);
    #endif
    if (!py_funcname | !py_srcfile) goto bad;
    py_code = PyCode_New(
        0,                /*int argcount,*/
        #if PY_MAJOR_VERSION >= 3
        0,                /*int kwonlyargcount,*/
        #endif
        0,                /*int nlocals,*/
        0,                /*int stacksize,*/
        0,                /*int flags,*/
        __pyx_empty_bytes,  /*PyObject *code,*/
        __pyx_empty_tuple,  /*PyObject *consts,*/
        __pyx_empty_tuple,  /*PyObject *names,*/
        __pyx_empty_tuple,  /*PyObject *varnames,*/
        __pyx_empty_tuple,  /*PyObject *freevars,*/
        __pyx_empty_tuple,  /*PyObject *cellvars,*/
        py_srcfile,       /*PyObject *filename,*/
        py_funcname,      /*PyObject *name,*/
        firstlineno,      /*int firstlineno,*/
        __pyx_empty_bytes   /*PyObject *lnotab*/
    );
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return py_code;
}
#endif /* CYTHON_PROFILE */

static void __Pyx_RaiseArgtupleInvalid(
    const char* func_name,
    int exact,
    Py_ssize_t num_min,
    Py_ssize_t num_max,
    Py_ssize_t num_found)
{
    Py_ssize_t num_expected;
    const char *more_or_less;
    if (num_found < num_min) {
        num_expected = num_min;
        more_or_less = "at least";
    } else {
        num_expected = num_max;
        more_or_less = "at most";
    }
    if (exact) {
        more_or_less = "exactly";
    }
    PyErr_Format(PyExc_TypeError,
                 "%s() takes %s %" CYTHON_FORMAT_SSIZE_T "d positional argument%s (%" CYTHON_FORMAT_SSIZE_T "d given)",
                 func_name, more_or_less, num_expected,
                 (num_expected == 1) ? "" : "s", num_found);
}

static void __Pyx_RaiseDoubleKeywordsError(
    const char* func_name,
    PyObject* kw_name)
{
    PyErr_Format(PyExc_TypeError,
        #if PY_MAJOR_VERSION >= 3
        "%s() got multiple values for keyword argument '%U'", func_name, kw_name);
        #else
        "%s() got multiple values for keyword argument '%s'", func_name,
        PyString_AsString(kw_name));
        #endif
}

static int __Pyx_ParseOptionalKeywords(
    PyObject *kwds,
    PyObject **argnames[],
    PyObject *kwds2,
    PyObject *values[],
    Py_ssize_t num_pos_args,
    const char* function_name)
{
    PyObject *key = 0, *value = 0;
    Py_ssize_t pos = 0;
    PyObject*** name;
    PyObject*** first_kw_arg = argnames + num_pos_args;
    while (PyDict_Next(kwds, &pos, &key, &value)) {
        name = first_kw_arg;
        while (*name && (**name != key)) name++;
        if (*name) {
            values[name-argnames] = value;
            continue;
        }
        name = first_kw_arg;
        #if PY_MAJOR_VERSION < 3
        if (likely(PyString_CheckExact(key)) || likely(PyString_Check(key))) {
            while (*name) {
                if ((CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**name) == PyString_GET_SIZE(key))
                        && _PyString_Eq(**name, key)) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    if ((**argname == key) || (
                            (CYTHON_COMPILING_IN_PYPY || PyString_GET_SIZE(**argname) == PyString_GET_SIZE(key))
                             && _PyString_Eq(**argname, key))) {
                        goto arg_passed_twice;
                    }
                    argname++;
                }
            }
        } else
        #endif
        if (likely(PyUnicode_Check(key))) {
            while (*name) {
                int cmp = (**name == key) ? 0 :
                #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                    (PyUnicode_GET_SIZE(**name) != PyUnicode_GET_SIZE(key)) ? 1 :
                #endif
                    PyUnicode_Compare(**name, key);
                if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                if (cmp == 0) {
                    values[name-argnames] = value;
                    break;
                }
                name++;
            }
            if (*name) continue;
            else {
                PyObject*** argname = argnames;
                while (argname != first_kw_arg) {
                    int cmp = (**argname == key) ? 0 :
                    #if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION >= 3
                        (PyUnicode_GET_SIZE(**argname) != PyUnicode_GET_SIZE(key)) ? 1 :
                    #endif
                        PyUnicode_Compare(**argname, key);
                    if (cmp < 0 && unlikely(PyErr_Occurred())) goto bad;
                    if (cmp == 0) goto arg_passed_twice;
                    argname++;
                }
            }
        } else
            goto invalid_keyword_type;
        if (kwds2) {
            if (unlikely(PyDict_SetItem(kwds2, key, value))) goto bad;
        } else {
            goto invalid_keyword;
        }
    }
    return 0;
arg_passed_twice:
    __Pyx_RaiseDoubleKeywordsError(function_name, key);
    goto bad;
invalid_keyword_type:
    PyErr_Format(PyExc_TypeError,
        "%s() keywords must be strings", function_name);
    goto bad;
invalid_keyword:
    PyErr_Format(PyExc_TypeError,
    #if PY_MAJOR_VERSION < 3
        "%s() got an unexpected keyword argument '%s'",
        function_name, PyString_AsString(key));
    #else
        "%s() got an unexpected keyword argument '%U'",
        function_name, key);
    #endif
bad:
    return -1;
}

static int __Pyx_GetException(PyObject **type, PyObject **value, PyObject **tb) {
    PyObject *local_type, *local_value, *local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    local_type = tstate->curexc_type;
    local_value = tstate->curexc_value;
    local_tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(&local_type, &local_value, &local_tb);
#endif
    PyErr_NormalizeException(&local_type, &local_value, &local_tb);
#if CYTHON_COMPILING_IN_CPYTHON
    if (unlikely(tstate->curexc_type))
#else
    if (unlikely(PyErr_Occurred()))
#endif
        goto bad;
    #if PY_MAJOR_VERSION >= 3
    if (unlikely(PyException_SetTraceback(local_value, local_tb) < 0))
        goto bad;
    #endif
    Py_INCREF(local_type);
    Py_INCREF(local_value);
    Py_INCREF(local_tb);
    *type = local_type;
    *value = local_value;
    *tb = local_tb;
#if CYTHON_COMPILING_IN_CPYTHON
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = local_type;
    tstate->exc_value = local_value;
    tstate->exc_traceback = local_tb;
    /* Make sure tstate is in a consistent state when we XDECREF
       these objects (DECREF may run arbitrary code). */
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(local_type, local_value, local_tb);
#endif
    return 0;
bad:
    *type = 0;
    *value = 0;
    *tb = 0;
    Py_XDECREF(local_type);
    Py_XDECREF(local_value);
    Py_XDECREF(local_tb);
    return -1;
}

static CYTHON_INLINE void __Pyx_ErrRestore(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->curexc_type;
    tmp_value = tstate->curexc_value;
    tmp_tb = tstate->curexc_traceback;
    tstate->curexc_type = type;
    tstate->curexc_value = value;
    tstate->curexc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_Restore(type, value, tb);
#endif
}
static CYTHON_INLINE void __Pyx_ErrFetch(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->curexc_type;
    *value = tstate->curexc_value;
    *tb = tstate->curexc_traceback;
    tstate->curexc_type = 0;
    tstate->curexc_value = 0;
    tstate->curexc_traceback = 0;
#else
    PyErr_Fetch(type, value, tb);
#endif
}

static double __Pyx__PyObject_AsDouble(PyObject* obj) {
    PyObject* float_value;
#if CYTHON_COMPILING_IN_PYPY
    float_value = PyNumber_Float(obj);
#else
    if (Py_TYPE(obj)->tp_as_number && Py_TYPE(obj)->tp_as_number->nb_float) {
        return PyFloat_AsDouble(obj);
    } else if (PyUnicode_CheckExact(obj) || PyBytes_CheckExact(obj)) {
#if PY_MAJOR_VERSION >= 3
        float_value = PyFloat_FromString(obj);
#else
        float_value = PyFloat_FromString(obj, 0);
#endif
    } else {
        PyObject* args = PyTuple_New(1);
        if (unlikely(!args)) goto bad;
        PyTuple_SET_ITEM(args, 0, obj);
        float_value = PyObject_Call((PyObject*)&PyFloat_Type, args, 0);
        PyTuple_SET_ITEM(args, 0, 0);
        Py_DECREF(args);
    }
#endif
    if (likely(float_value)) {
        double value = PyFloat_AS_DOUBLE(float_value);
        Py_DECREF(float_value);
        return value;
    }
bad:
    return (double)-1;
}

static CYTHON_INLINE int __Pyx_mod_int(int a, int b) {
    int r = a % b;
    r += ((r != 0) & ((r ^ b) < 0)) * b;
    return r;
}

#if PY_MAJOR_VERSION < 3
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb,
                        CYTHON_UNUSED PyObject *cause) {
    Py_XINCREF(type);
    if (!value || value == Py_None)
        value = NULL;
    else
        Py_INCREF(value);
    if (!tb || tb == Py_None)
        tb = NULL;
    else {
        Py_INCREF(tb);
        if (!PyTraceBack_Check(tb)) {
            PyErr_SetString(PyExc_TypeError,
                "raise: arg 3 must be a traceback or None");
            goto raise_error;
        }
    }
    #if PY_VERSION_HEX < 0x02050000
    if (PyClass_Check(type)) {
    #else
    if (PyType_Check(type)) {
    #endif
#if CYTHON_COMPILING_IN_PYPY
        if (!value) {
            Py_INCREF(Py_None);
            value = Py_None;
        }
#endif
        PyErr_NormalizeException(&type, &value, &tb);
    } else {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto raise_error;
        }
        value = type;
        #if PY_VERSION_HEX < 0x02050000
            if (PyInstance_Check(type)) {
                type = (PyObject*) ((PyInstanceObject*)type)->in_class;
                Py_INCREF(type);
            }
            else {
                type = 0;
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception must be an old-style class or instance");
                goto raise_error;
            }
        #else
            type = (PyObject*) Py_TYPE(type);
            Py_INCREF(type);
            if (!PyType_IsSubtype((PyTypeObject *)type, (PyTypeObject *)PyExc_BaseException)) {
                PyErr_SetString(PyExc_TypeError,
                    "raise: exception class must be a subclass of BaseException");
                goto raise_error;
            }
        #endif
    }
    __Pyx_ErrRestore(type, value, tb);
    return;
raise_error:
    Py_XDECREF(value);
    Py_XDECREF(type);
    Py_XDECREF(tb);
    return;
}
#else /* Python 3+ */
static void __Pyx_Raise(PyObject *type, PyObject *value, PyObject *tb, PyObject *cause) {
    PyObject* owned_instance = NULL;
    if (tb == Py_None) {
        tb = 0;
    } else if (tb && !PyTraceBack_Check(tb)) {
        PyErr_SetString(PyExc_TypeError,
            "raise: arg 3 must be a traceback or None");
        goto bad;
    }
    if (value == Py_None)
        value = 0;
    if (PyExceptionInstance_Check(type)) {
        if (value) {
            PyErr_SetString(PyExc_TypeError,
                "instance exception may not have a separate value");
            goto bad;
        }
        value = type;
        type = (PyObject*) Py_TYPE(value);
    } else if (PyExceptionClass_Check(type)) {
        PyObject *args;
        if (!value)
            args = PyTuple_New(0);
        else if (PyTuple_Check(value)) {
            Py_INCREF(value);
            args = value;
        }
        else
            args = PyTuple_Pack(1, value);
        if (!args)
            goto bad;
        owned_instance = PyEval_CallObject(type, args);
        Py_DECREF(args);
        if (!owned_instance)
            goto bad;
        value = owned_instance;
        if (!PyExceptionInstance_Check(value)) {
            PyErr_Format(PyExc_TypeError,
                         "calling %R should have returned an instance of "
                         "BaseException, not %R",
                         type, Py_TYPE(value));
            goto bad;
        }
    } else {
        PyErr_SetString(PyExc_TypeError,
            "raise: exception class must be a subclass of BaseException");
        goto bad;
    }
    if (cause && cause != Py_None) {
        PyObject *fixed_cause;
        if (PyExceptionClass_Check(cause)) {
            fixed_cause = PyObject_CallObject(cause, NULL);
            if (fixed_cause == NULL)
                goto bad;
        }
        else if (PyExceptionInstance_Check(cause)) {
            fixed_cause = cause;
            Py_INCREF(fixed_cause);
        }
        else {
            PyErr_SetString(PyExc_TypeError,
                            "exception causes must derive from "
                            "BaseException");
            goto bad;
        }
        PyException_SetCause(value, fixed_cause);
    }
    PyErr_SetObject(type, value);
    if (tb) {
        PyThreadState *tstate = PyThreadState_GET();
        PyObject* tmp_tb = tstate->curexc_traceback;
        if (tb != tmp_tb) {
            Py_INCREF(tb);
            tstate->curexc_traceback = tb;
            Py_XDECREF(tmp_tb);
        }
    }
bad:
    Py_XDECREF(owned_instance);
    return;
}
#endif

static CYTHON_INLINE void __Pyx_RaiseTooManyValuesError(Py_ssize_t expected) {
    PyErr_Format(PyExc_ValueError,
                 "too many values to unpack (expected %" CYTHON_FORMAT_SSIZE_T "d)", expected);
}

static CYTHON_INLINE void __Pyx_RaiseNeedMoreValuesError(Py_ssize_t index) {
    PyErr_Format(PyExc_ValueError,
                 "need more than %" CYTHON_FORMAT_SSIZE_T "d value%s to unpack",
                 index, (index == 1) ? "" : "s");
}

static CYTHON_INLINE void __Pyx_RaiseNoneNotIterableError(void) {
    PyErr_SetString(PyExc_TypeError, "'NoneType' object is not iterable");
}

static CYTHON_INLINE int __Pyx_IterFinish(void) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    PyObject* exc_type = tstate->curexc_type;
    if (unlikely(exc_type)) {
        if (likely(exc_type == PyExc_StopIteration) || PyErr_GivenExceptionMatches(exc_type, PyExc_StopIteration)) {
            PyObject *exc_value, *exc_tb;
            exc_value = tstate->curexc_value;
            exc_tb = tstate->curexc_traceback;
            tstate->curexc_type = 0;
            tstate->curexc_value = 0;
            tstate->curexc_traceback = 0;
            Py_DECREF(exc_type);
            Py_XDECREF(exc_value);
            Py_XDECREF(exc_tb);
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#else
    if (unlikely(PyErr_Occurred())) {
        if (likely(PyErr_ExceptionMatches(PyExc_StopIteration))) {
            PyErr_Clear();
            return 0;
        } else {
            return -1;
        }
    }
    return 0;
#endif
}

static int __Pyx_IternextUnpackEndCheck(PyObject *retval, Py_ssize_t expected) {
    if (unlikely(retval)) {
        Py_DECREF(retval);
        __Pyx_RaiseTooManyValuesError(expected);
        return -1;
    } else {
        return __Pyx_IterFinish();
    }
    return 0;
}

static CYTHON_INLINE int __Pyx_TypeTest(PyObject *obj, PyTypeObject *type) {
    if (unlikely(!type)) {
        PyErr_Format(PyExc_SystemError, "Missing type object");
        return 0;
    }
    if (likely(PyObject_TypeCheck(obj, type)))
        return 1;
    PyErr_Format(PyExc_TypeError, "Cannot convert %.200s to %.200s",
                 Py_TYPE(obj)->tp_name, type->tp_name);
    return 0;
}

static CYTHON_INLINE void __Pyx_ExceptionSave(PyObject **type, PyObject **value, PyObject **tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyThreadState *tstate = PyThreadState_GET();
    *type = tstate->exc_type;
    *value = tstate->exc_value;
    *tb = tstate->exc_traceback;
    Py_XINCREF(*type);
    Py_XINCREF(*value);
    Py_XINCREF(*tb);
#else
    PyErr_GetExcInfo(type, value, tb);
#endif
}
static void __Pyx_ExceptionReset(PyObject *type, PyObject *value, PyObject *tb) {
#if CYTHON_COMPILING_IN_CPYTHON
    PyObject *tmp_type, *tmp_value, *tmp_tb;
    PyThreadState *tstate = PyThreadState_GET();
    tmp_type = tstate->exc_type;
    tmp_value = tstate->exc_value;
    tmp_tb = tstate->exc_traceback;
    tstate->exc_type = type;
    tstate->exc_value = value;
    tstate->exc_traceback = tb;
    Py_XDECREF(tmp_type);
    Py_XDECREF(tmp_value);
    Py_XDECREF(tmp_tb);
#else
    PyErr_SetExcInfo(type, value, tb);
#endif
}

static PyObject *__Pyx_Import(PyObject *name, PyObject *from_list, long level) {
    PyObject *py_import = 0;
    PyObject *empty_list = 0;
    PyObject *module = 0;
    PyObject *global_dict = 0;
    PyObject *empty_dict = 0;
    PyObject *list;
    py_import = __Pyx_GetAttrString(__pyx_b, "__import__");
    if (!py_import)
        goto bad;
    if (from_list)
        list = from_list;
    else {
        empty_list = PyList_New(0);
        if (!empty_list)
            goto bad;
        list = empty_list;
    }
    global_dict = PyModule_GetDict(__pyx_m);
    if (!global_dict)
        goto bad;
    empty_dict = PyDict_New();
    if (!empty_dict)
        goto bad;
    #if PY_VERSION_HEX >= 0x02050000
    {
        #if PY_MAJOR_VERSION >= 3
        if (level == -1) {
            if (strchr(__Pyx_MODULE_NAME, '.')) {
                /* try package relative import first */
                PyObject *py_level = PyInt_FromLong(1);
                if (!py_level)
                    goto bad;
                module = PyObject_CallFunctionObjArgs(py_import,
                    name, global_dict, empty_dict, list, py_level, NULL);
                Py_DECREF(py_level);
                if (!module) {
                    if (!PyErr_ExceptionMatches(PyExc_ImportError))
                        goto bad;
                    PyErr_Clear();
                }
            }
            level = 0; /* try absolute import on failure */
        }
        #endif
        if (!module) {
            PyObject *py_level = PyInt_FromLong(level);
            if (!py_level)
                goto bad;
            module = PyObject_CallFunctionObjArgs(py_import,
                name, global_dict, empty_dict, list, py_level, NULL);
            Py_DECREF(py_level);
        }
    }
    #else
    if (level>0) {
        PyErr_SetString(PyExc_RuntimeError, "Relative import is not supported for Python <=2.4.");
        goto bad;
    }
    module = PyObject_CallFunctionObjArgs(py_import,
        name, global_dict, empty_dict, list, NULL);
    #endif
bad:
    Py_XDECREF(empty_list);
    Py_XDECREF(py_import);
    Py_XDECREF(empty_dict);
    return module;
}

static CYTHON_INLINE void __Pyx_RaiseImportError(PyObject *name) {
#if PY_MAJOR_VERSION < 3
    PyErr_Format(PyExc_ImportError, "cannot import name %.230s",
                 PyString_AsString(name));
#else
    PyErr_Format(PyExc_ImportError, "cannot import name %S", name);
#endif
}

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static PyObject *__Pyx_GetStdout(void) {
    PyObject *f = PySys_GetObject((char *)"stdout");
    if (!f) {
        PyErr_SetString(PyExc_RuntimeError, "lost sys.stdout");
    }
    return f;
}
static int __Pyx_Print(PyObject* f, PyObject *arg_tuple, int newline) {
    int i;
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    for (i=0; i < PyTuple_GET_SIZE(arg_tuple); i++) {
        PyObject* v;
        if (PyFile_SoftSpace(f, 1)) {
            if (PyFile_WriteString(" ", f) < 0)
                goto error;
        }
        v = PyTuple_GET_ITEM(arg_tuple, i);
        if (PyFile_WriteObject(v, f, Py_PRINT_RAW) < 0)
            goto error;
        if (PyString_Check(v)) {
            char *s = PyString_AsString(v);
            Py_ssize_t len = PyString_Size(v);
            if (len > 0 &&
                isspace(Py_CHARMASK(s[len-1])) &&
                s[len-1] != ' ')
                    PyFile_SoftSpace(f, 0);
        }
    }
    if (newline) {
        if (PyFile_WriteString("\n", f) < 0)
            goto error;
        PyFile_SoftSpace(f, 0);
    }
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
}
#else /* Python 3 has a print function */
static int __Pyx_Print(PyObject* stream, PyObject *arg_tuple, int newline) {
    PyObject* kwargs = 0;
    PyObject* result = 0;
    PyObject* end_string;
    if (unlikely(!__pyx_print)) {
        __pyx_print = __Pyx_GetAttrString(__pyx_b, "print");
        if (!__pyx_print)
            return -1;
    }
    if (stream) {
        kwargs = PyDict_New();
        if (unlikely(!kwargs))
            return -1;
        if (unlikely(PyDict_SetItemString(kwargs, "file", stream) < 0))
            goto bad;
        if (!newline) {
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                goto bad;
            if (PyDict_SetItemString(kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                goto bad;
            }
            Py_DECREF(end_string);
        }
    } else if (!newline) {
        if (unlikely(!__pyx_print_kwargs)) {
            __pyx_print_kwargs = PyDict_New();
            if (unlikely(!__pyx_print_kwargs))
                return -1;
            end_string = PyUnicode_FromStringAndSize(" ", 1);
            if (unlikely(!end_string))
                return -1;
            if (PyDict_SetItemString(__pyx_print_kwargs, "end", end_string) < 0) {
                Py_DECREF(end_string);
                return -1;
            }
            Py_DECREF(end_string);
        }
        kwargs = __pyx_print_kwargs;
    }
    result = PyObject_Call(__pyx_print, arg_tuple, kwargs);
    if (unlikely(kwargs) && (kwargs != __pyx_print_kwargs))
        Py_DECREF(kwargs);
    if (!result)
        return -1;
    Py_DECREF(result);
    return 0;
bad:
    if (kwargs != __pyx_print_kwargs)
        Py_XDECREF(kwargs);
    return -1;
}
#endif

#if !CYTHON_COMPILING_IN_PYPY && PY_MAJOR_VERSION < 3
static int __Pyx_PrintOne(PyObject* f, PyObject *o) {
    if (!f) {
        if (!(f = __Pyx_GetStdout()))
            return -1;
    }
    Py_INCREF(f);
    if (PyFile_SoftSpace(f, 0)) {
        if (PyFile_WriteString(" ", f) < 0)
            goto error;
    }
    if (PyFile_WriteObject(o, f, Py_PRINT_RAW) < 0)
        goto error;
    if (PyFile_WriteString("\n", f) < 0)
        goto error;
    Py_DECREF(f);
    return 0;
error:
    Py_DECREF(f);
    return -1;
    /* the line below is just to avoid C compiler
     * warnings about unused functions */
    return __Pyx_Print(f, NULL, 0);
}
#else /* Python 3 has a print function */
static int __Pyx_PrintOne(PyObject* stream, PyObject *o) {
    int res;
    PyObject* arg_tuple = PyTuple_Pack(1, o);
    if (unlikely(!arg_tuple))
        return -1;
    res = __Pyx_Print(stream, arg_tuple, 1);
    Py_DECREF(arg_tuple);
    return res;
}
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return ::std::complex< float >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      return x + y*(__pyx_t_float_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_float_complex __pyx_t_float_complex_from_parts(float x, float y) {
      __pyx_t_float_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eqf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_sumf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_difff(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_prodf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_quotf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
        __pyx_t_float_complex z;
        float denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_negf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zerof(__pyx_t_float_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_conjf(__pyx_t_float_complex a) {
        __pyx_t_float_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE float __Pyx_c_absf(__pyx_t_float_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrtf(z.real*z.real + z.imag*z.imag);
          #else
            return hypotf(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_float_complex __Pyx_c_powf(__pyx_t_float_complex a, __pyx_t_float_complex b) {
            __pyx_t_float_complex z;
            float r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    float denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(a, a);
                    case 3:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, a);
                    case 4:
                        z = __Pyx_c_prodf(a, a);
                        return __Pyx_c_prodf(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_absf(a);
                theta = atan2f(a.imag, a.real);
            }
            lnr = logf(r);
            z_r = expf(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cosf(z_theta);
            z.imag = z_r * sinf(z_theta);
            return z;
        }
    #endif
#endif

#if CYTHON_CCOMPLEX
  #ifdef __cplusplus
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return ::std::complex< double >(x, y);
    }
  #else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      return x + y*(__pyx_t_double_complex)_Complex_I;
    }
  #endif
#else
    static CYTHON_INLINE __pyx_t_double_complex __pyx_t_double_complex_from_parts(double x, double y) {
      __pyx_t_double_complex z;
      z.real = x;
      z.imag = y;
      return z;
    }
#endif

#if CYTHON_CCOMPLEX
#else
    static CYTHON_INLINE int __Pyx_c_eq(__pyx_t_double_complex a, __pyx_t_double_complex b) {
       return (a.real == b.real) && (a.imag == b.imag);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_sum(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real + b.real;
        z.imag = a.imag + b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_diff(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real - b.real;
        z.imag = a.imag - b.imag;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_prod(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        z.real = a.real * b.real - a.imag * b.imag;
        z.imag = a.real * b.imag + a.imag * b.real;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_quot(__pyx_t_double_complex a, __pyx_t_double_complex b) {
        __pyx_t_double_complex z;
        double denom = b.real * b.real + b.imag * b.imag;
        z.real = (a.real * b.real + a.imag * b.imag) / denom;
        z.imag = (a.imag * b.real - a.real * b.imag) / denom;
        return z;
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_neg(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real = -a.real;
        z.imag = -a.imag;
        return z;
    }
    static CYTHON_INLINE int __Pyx_c_is_zero(__pyx_t_double_complex a) {
       return (a.real == 0) && (a.imag == 0);
    }
    static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_conj(__pyx_t_double_complex a) {
        __pyx_t_double_complex z;
        z.real =  a.real;
        z.imag = -a.imag;
        return z;
    }
    #if 1
        static CYTHON_INLINE double __Pyx_c_abs(__pyx_t_double_complex z) {
          #if !defined(HAVE_HYPOT) || defined(_MSC_VER)
            return sqrt(z.real*z.real + z.imag*z.imag);
          #else
            return hypot(z.real, z.imag);
          #endif
        }
        static CYTHON_INLINE __pyx_t_double_complex __Pyx_c_pow(__pyx_t_double_complex a, __pyx_t_double_complex b) {
            __pyx_t_double_complex z;
            double r, lnr, theta, z_r, z_theta;
            if (b.imag == 0 && b.real == (int)b.real) {
                if (b.real < 0) {
                    double denom = a.real * a.real + a.imag * a.imag;
                    a.real = a.real / denom;
                    a.imag = -a.imag / denom;
                    b.real = -b.real;
                }
                switch ((int)b.real) {
                    case 0:
                        z.real = 1;
                        z.imag = 0;
                        return z;
                    case 1:
                        return a;
                    case 2:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(a, a);
                    case 3:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, a);
                    case 4:
                        z = __Pyx_c_prod(a, a);
                        return __Pyx_c_prod(z, z);
                }
            }
            if (a.imag == 0) {
                if (a.real == 0) {
                    return a;
                }
                r = a.real;
                theta = 0;
            } else {
                r = __Pyx_c_abs(a);
                theta = atan2(a.imag, a.real);
            }
            lnr = log(r);
            z_r = exp(lnr * b.real - theta * b.imag);
            z_theta = theta * b.real + lnr * b.imag;
            z.real = z_r * cos(z_theta);
            z.imag = z_r * sin(z_theta);
            return z;
        }
    #endif
#endif

static CYTHON_INLINE unsigned char __Pyx_PyInt_AsUnsignedChar(PyObject* x) {
    const unsigned char neg_one = (unsigned char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned char" :
                    "value too large to convert to unsigned char");
            }
            return (unsigned char)-1;
        }
        return (unsigned char)val;
    }
    return (unsigned char)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned short __Pyx_PyInt_AsUnsignedShort(PyObject* x) {
    const unsigned short neg_one = (unsigned short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned short" :
                    "value too large to convert to unsigned short");
            }
            return (unsigned short)-1;
        }
        return (unsigned short)val;
    }
    return (unsigned short)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE unsigned int __Pyx_PyInt_AsUnsignedInt(PyObject* x) {
    const unsigned int neg_one = (unsigned int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(unsigned int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(unsigned int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to unsigned int" :
                    "value too large to convert to unsigned int");
            }
            return (unsigned int)-1;
        }
        return (unsigned int)val;
    }
    return (unsigned int)__Pyx_PyInt_AsUnsignedLong(x);
}

static CYTHON_INLINE char __Pyx_PyInt_AsChar(PyObject* x) {
    const char neg_one = (char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to char" :
                    "value too large to convert to char");
            }
            return (char)-1;
        }
        return (char)val;
    }
    return (char)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE short __Pyx_PyInt_AsShort(PyObject* x) {
    const short neg_one = (short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to short" :
                    "value too large to convert to short");
            }
            return (short)-1;
        }
        return (short)val;
    }
    return (short)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsInt(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE signed char __Pyx_PyInt_AsSignedChar(PyObject* x) {
    const signed char neg_one = (signed char)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed char) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed char)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed char" :
                    "value too large to convert to signed char");
            }
            return (signed char)-1;
        }
        return (signed char)val;
    }
    return (signed char)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed short __Pyx_PyInt_AsSignedShort(PyObject* x) {
    const signed short neg_one = (signed short)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed short) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed short)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed short" :
                    "value too large to convert to signed short");
            }
            return (signed short)-1;
        }
        return (signed short)val;
    }
    return (signed short)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE signed int __Pyx_PyInt_AsSignedInt(PyObject* x) {
    const signed int neg_one = (signed int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(signed int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(signed int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to signed int" :
                    "value too large to convert to signed int");
            }
            return (signed int)-1;
        }
        return (signed int)val;
    }
    return (signed int)__Pyx_PyInt_AsSignedLong(x);
}

static CYTHON_INLINE int __Pyx_PyInt_AsLongDouble(PyObject* x) {
    const int neg_one = (int)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
    if (sizeof(int) < sizeof(long)) {
        long val = __Pyx_PyInt_AsLong(x);
        if (unlikely(val != (long)(int)val)) {
            if (!unlikely(val == -1 && PyErr_Occurred())) {
                PyErr_SetString(PyExc_OverflowError,
                    (is_unsigned && unlikely(val < 0)) ?
                    "can't convert negative value to int" :
                    "value too large to convert to int");
            }
            return (int)-1;
        }
        return (int)val;
    }
    return (int)__Pyx_PyInt_AsLong(x);
}

static CYTHON_INLINE unsigned long __Pyx_PyInt_AsUnsignedLong(PyObject* x) {
    const unsigned long neg_one = (unsigned long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned long");
            return (unsigned long)-1;
        }
        return (unsigned long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned long");
                return (unsigned long)-1;
            }
            return (unsigned long)PyLong_AsUnsignedLong(x);
        } else {
            return (unsigned long)PyLong_AsLong(x);
        }
    } else {
        unsigned long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned long)-1;
        val = __Pyx_PyInt_AsUnsignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE unsigned PY_LONG_LONG __Pyx_PyInt_AsUnsignedLongLong(PyObject* x) {
    const unsigned PY_LONG_LONG neg_one = (unsigned PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to unsigned PY_LONG_LONG");
            return (unsigned PY_LONG_LONG)-1;
        }
        return (unsigned PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to unsigned PY_LONG_LONG");
                return (unsigned PY_LONG_LONG)-1;
            }
            return (unsigned PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (unsigned PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        unsigned PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (unsigned PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsUnsignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE long __Pyx_PyInt_AsLong(PyObject* x) {
    const long neg_one = (long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to long");
            return (long)-1;
        }
        return (long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to long");
                return (long)-1;
            }
            return (long)PyLong_AsUnsignedLong(x);
        } else {
            return (long)PyLong_AsLong(x);
        }
    } else {
        long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (long)-1;
        val = __Pyx_PyInt_AsLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE PY_LONG_LONG __Pyx_PyInt_AsLongLong(PyObject* x) {
    const PY_LONG_LONG neg_one = (PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to PY_LONG_LONG");
            return (PY_LONG_LONG)-1;
        }
        return (PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to PY_LONG_LONG");
                return (PY_LONG_LONG)-1;
            }
            return (PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed long __Pyx_PyInt_AsSignedLong(PyObject* x) {
    const signed long neg_one = (signed long)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed long");
            return (signed long)-1;
        }
        return (signed long)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed long");
                return (signed long)-1;
            }
            return (signed long)PyLong_AsUnsignedLong(x);
        } else {
            return (signed long)PyLong_AsLong(x);
        }
    } else {
        signed long val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed long)-1;
        val = __Pyx_PyInt_AsSignedLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static CYTHON_INLINE signed PY_LONG_LONG __Pyx_PyInt_AsSignedLongLong(PyObject* x) {
    const signed PY_LONG_LONG neg_one = (signed PY_LONG_LONG)-1, const_zero = 0;
    const int is_unsigned = neg_one > const_zero;
#if PY_VERSION_HEX < 0x03000000
    if (likely(PyInt_Check(x))) {
        long val = PyInt_AS_LONG(x);
        if (is_unsigned && unlikely(val < 0)) {
            PyErr_SetString(PyExc_OverflowError,
                            "can't convert negative value to signed PY_LONG_LONG");
            return (signed PY_LONG_LONG)-1;
        }
        return (signed PY_LONG_LONG)val;
    } else
#endif
    if (likely(PyLong_Check(x))) {
        if (is_unsigned) {
            if (unlikely(Py_SIZE(x) < 0)) {
                PyErr_SetString(PyExc_OverflowError,
                                "can't convert negative value to signed PY_LONG_LONG");
                return (signed PY_LONG_LONG)-1;
            }
            return (signed PY_LONG_LONG)PyLong_AsUnsignedLongLong(x);
        } else {
            return (signed PY_LONG_LONG)PyLong_AsLongLong(x);
        }
    } else {
        signed PY_LONG_LONG val;
        PyObject *tmp = __Pyx_PyNumber_Int(x);
        if (!tmp) return (signed PY_LONG_LONG)-1;
        val = __Pyx_PyInt_AsSignedLongLong(tmp);
        Py_DECREF(tmp);
        return val;
    }
}

static void __Pyx_WriteUnraisable(const char *name, CYTHON_UNUSED int clineno,
                                  CYTHON_UNUSED int lineno, CYTHON_UNUSED const char *filename) {
    PyObject *old_exc, *old_val, *old_tb;
    PyObject *ctx;
    __Pyx_ErrFetch(&old_exc, &old_val, &old_tb);
    #if PY_MAJOR_VERSION < 3
    ctx = PyString_FromString(name);
    #else
    ctx = PyUnicode_FromString(name);
    #endif
    __Pyx_ErrRestore(old_exc, old_val, old_tb);
    if (!ctx) {
        PyErr_WriteUnraisable(Py_None);
    } else {
        PyErr_WriteUnraisable(ctx);
        Py_DECREF(ctx);
    }
}

static int __Pyx_check_binary_version(void) {
    char ctversion[4], rtversion[4];
    PyOS_snprintf(ctversion, 4, "%d.%d", PY_MAJOR_VERSION, PY_MINOR_VERSION);
    PyOS_snprintf(rtversion, 4, "%s", Py_GetVersion());
    if (ctversion[0] != rtversion[0] || ctversion[2] != rtversion[2]) {
        char message[200];
        PyOS_snprintf(message, sizeof(message),
                      "compiletime version %s of module '%.100s' "
                      "does not match runtime version %s",
                      ctversion, __Pyx_MODULE_NAME, rtversion);
        #if PY_VERSION_HEX < 0x02050000
        return PyErr_Warn(NULL, message);
        #else
        return PyErr_WarnEx(NULL, message, 1);
        #endif
    }
    return 0;
}

static int __Pyx_SetVtable(PyObject *dict, void *vtable) {
#if PY_VERSION_HEX >= 0x02070000 && !(PY_MAJOR_VERSION==3&&PY_MINOR_VERSION==0)
    PyObject *ob = PyCapsule_New(vtable, 0, 0);
#else
    PyObject *ob = PyCObject_FromVoidPtr(vtable, 0);
#endif
    if (!ob)
        goto bad;
    if (PyDict_SetItemString(dict, "__pyx_vtable__", ob) < 0)
        goto bad;
    Py_DECREF(ob);
    return 0;
bad:
    Py_XDECREF(ob);
    return -1;
}

#ifndef __PYX_HAVE_RT_ImportModule
#define __PYX_HAVE_RT_ImportModule
static PyObject *__Pyx_ImportModule(const char *name) {
    PyObject *py_name = 0;
    PyObject *py_module = 0;
    py_name = __Pyx_PyIdentifier_FromString(name);
    if (!py_name)
        goto bad;
    py_module = PyImport_Import(py_name);
    Py_DECREF(py_name);
    return py_module;
bad:
    Py_XDECREF(py_name);
    return 0;
}
#endif

#ifndef __PYX_HAVE_RT_ImportType
#define __PYX_HAVE_RT_ImportType
static PyTypeObject *__Pyx_ImportType(const char *module_name, const char *class_name,
    size_t size, int strict)
{
    PyObject *py_module = 0;
    PyObject *result = 0;
    PyObject *py_name = 0;
    char warning[200];
    py_module = __Pyx_ImportModule(module_name);
    if (!py_module)
        goto bad;
    py_name = __Pyx_PyIdentifier_FromString(class_name);
    if (!py_name)
        goto bad;
    result = PyObject_GetAttr(py_module, py_name);
    Py_DECREF(py_name);
    py_name = 0;
    Py_DECREF(py_module);
    py_module = 0;
    if (!result)
        goto bad;
    if (!PyType_Check(result)) {
        PyErr_Format(PyExc_TypeError,
            "%s.%s is not a type object",
            module_name, class_name);
        goto bad;
    }
    if (!strict && (size_t)((PyTypeObject *)result)->tp_basicsize > size) {
        PyOS_snprintf(warning, sizeof(warning),
            "%s.%s size changed, may indicate binary incompatibility",
            module_name, class_name);
        #if PY_VERSION_HEX < 0x02050000
        if (PyErr_Warn(NULL, warning) < 0) goto bad;
        #else
        if (PyErr_WarnEx(NULL, warning, 0) < 0) goto bad;
        #endif
    }
    else if ((size_t)((PyTypeObject *)result)->tp_basicsize != size) {
        PyErr_Format(PyExc_ValueError,
            "%s.%s has the wrong size, try recompiling",
            module_name, class_name);
        goto bad;
    }
    return (PyTypeObject *)result;
bad:
    Py_XDECREF(py_module);
    Py_XDECREF(result);
    return NULL;
}
#endif

static int __pyx_bisect_code_objects(__Pyx_CodeObjectCacheEntry* entries, int count, int code_line) {
    int start = 0, mid = 0, end = count - 1;
    if (end >= 0 && code_line > entries[end].code_line) {
        return count;
    }
    while (start < end) {
        mid = (start + end) / 2;
        if (code_line < entries[mid].code_line) {
            end = mid;
        } else if (code_line > entries[mid].code_line) {
             start = mid + 1;
        } else {
            return mid;
        }
    }
    if (code_line <= entries[mid].code_line) {
        return mid;
    } else {
        return mid + 1;
    }
}
static PyCodeObject *__pyx_find_code_object(int code_line) {
    PyCodeObject* code_object;
    int pos;
    if (unlikely(!code_line) || unlikely(!__pyx_code_cache.entries)) {
        return NULL;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if (unlikely(pos >= __pyx_code_cache.count) || unlikely(__pyx_code_cache.entries[pos].code_line != code_line)) {
        return NULL;
    }
    code_object = __pyx_code_cache.entries[pos].code_object;
    Py_INCREF(code_object);
    return code_object;
}
static void __pyx_insert_code_object(int code_line, PyCodeObject* code_object) {
    int pos, i;
    __Pyx_CodeObjectCacheEntry* entries = __pyx_code_cache.entries;
    if (unlikely(!code_line)) {
        return;
    }
    if (unlikely(!entries)) {
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Malloc(64*sizeof(__Pyx_CodeObjectCacheEntry));
        if (likely(entries)) {
            __pyx_code_cache.entries = entries;
            __pyx_code_cache.max_count = 64;
            __pyx_code_cache.count = 1;
            entries[0].code_line = code_line;
            entries[0].code_object = code_object;
            Py_INCREF(code_object);
        }
        return;
    }
    pos = __pyx_bisect_code_objects(__pyx_code_cache.entries, __pyx_code_cache.count, code_line);
    if ((pos < __pyx_code_cache.count) && unlikely(__pyx_code_cache.entries[pos].code_line == code_line)) {
        PyCodeObject* tmp = entries[pos].code_object;
        entries[pos].code_object = code_object;
        Py_DECREF(tmp);
        return;
    }
    if (__pyx_code_cache.count == __pyx_code_cache.max_count) {
        int new_max = __pyx_code_cache.max_count + 64;
        entries = (__Pyx_CodeObjectCacheEntry*)PyMem_Realloc(
            __pyx_code_cache.entries, new_max*sizeof(__Pyx_CodeObjectCacheEntry));
        if (unlikely(!entries)) {
            return;
        }
        __pyx_code_cache.entries = entries;
        __pyx_code_cache.max_count = new_max;
    }
    for (i=__pyx_code_cache.count; i>pos; i--) {
        entries[i] = entries[i-1];
    }
    entries[pos].code_line = code_line;
    entries[pos].code_object = code_object;
    __pyx_code_cache.count++;
    Py_INCREF(code_object);
}

#include "compile.h"
#include "frameobject.h"
#include "traceback.h"
static PyCodeObject* __Pyx_CreateCodeObjectForTraceback(
            const char *funcname, int c_line,
            int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_srcfile = 0;
    PyObject *py_funcname = 0;
    #if PY_MAJOR_VERSION < 3
    py_srcfile = PyString_FromString(filename);
    #else
    py_srcfile = PyUnicode_FromString(filename);
    #endif
    if (!py_srcfile) goto bad;
    if (c_line) {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #else
        py_funcname = PyUnicode_FromFormat( "%s (%s:%d)", funcname, __pyx_cfilenm, c_line);
        #endif
    }
    else {
        #if PY_MAJOR_VERSION < 3
        py_funcname = PyString_FromString(funcname);
        #else
        py_funcname = PyUnicode_FromString(funcname);
        #endif
    }
    if (!py_funcname) goto bad;
    py_code = __Pyx_PyCode_New(
        0,            /*int argcount,*/
        0,            /*int kwonlyargcount,*/
        0,            /*int nlocals,*/
        0,            /*int stacksize,*/
        0,            /*int flags,*/
        __pyx_empty_bytes, /*PyObject *code,*/
        __pyx_empty_tuple, /*PyObject *consts,*/
        __pyx_empty_tuple, /*PyObject *names,*/
        __pyx_empty_tuple, /*PyObject *varnames,*/
        __pyx_empty_tuple, /*PyObject *freevars,*/
        __pyx_empty_tuple, /*PyObject *cellvars,*/
        py_srcfile,   /*PyObject *filename,*/
        py_funcname,  /*PyObject *name,*/
        py_line,      /*int firstlineno,*/
        __pyx_empty_bytes  /*PyObject *lnotab*/
    );
    Py_DECREF(py_srcfile);
    Py_DECREF(py_funcname);
    return py_code;
bad:
    Py_XDECREF(py_srcfile);
    Py_XDECREF(py_funcname);
    return NULL;
}
static void __Pyx_AddTraceback(const char *funcname, int c_line,
                               int py_line, const char *filename) {
    PyCodeObject *py_code = 0;
    PyObject *py_globals = 0;
    PyFrameObject *py_frame = 0;
    py_code = __pyx_find_code_object(c_line ? c_line : py_line);
    if (!py_code) {
        py_code = __Pyx_CreateCodeObjectForTraceback(
            funcname, c_line, py_line, filename);
        if (!py_code) goto bad;
        __pyx_insert_code_object(c_line ? c_line : py_line, py_code);
    }
    py_globals = PyModule_GetDict(__pyx_m);
    if (!py_globals) goto bad;
    py_frame = PyFrame_New(
        PyThreadState_GET(), /*PyThreadState *tstate,*/
        py_code,             /*PyCodeObject *code,*/
        py_globals,          /*PyObject *globals,*/
        0                    /*PyObject *locals*/
    );
    if (!py_frame) goto bad;
    py_frame->f_lineno = py_line;
    PyTraceBack_Here(py_frame);
bad:
    Py_XDECREF(py_code);
    Py_XDECREF(py_frame);
}

static int __Pyx_InitStrings(__Pyx_StringTabEntry *t) {
    while (t->p) {
        #if PY_MAJOR_VERSION < 3
        if (t->is_unicode) {
            *t->p = PyUnicode_DecodeUTF8(t->s, t->n - 1, NULL);
        } else if (t->intern) {
            *t->p = PyString_InternFromString(t->s);
        } else {
            *t->p = PyString_FromStringAndSize(t->s, t->n - 1);
        }
        #else  /* Python 3+ has unicode identifiers */
        if (t->is_unicode | t->is_str) {
            if (t->intern) {
                *t->p = PyUnicode_InternFromString(t->s);
            } else if (t->encoding) {
                *t->p = PyUnicode_Decode(t->s, t->n - 1, t->encoding, NULL);
            } else {
                *t->p = PyUnicode_FromStringAndSize(t->s, t->n - 1);
            }
        } else {
            *t->p = PyBytes_FromStringAndSize(t->s, t->n - 1);
        }
        #endif
        if (!*t->p)
            return -1;
        ++t;
    }
    return 0;
}


/* Type Conversion Functions */

static CYTHON_INLINE int __Pyx_PyObject_IsTrue(PyObject* x) {
   int is_true = x == Py_True;
   if (is_true | (x == Py_False) | (x == Py_None)) return is_true;
   else return PyObject_IsTrue(x);
}

static CYTHON_INLINE PyObject* __Pyx_PyNumber_Int(PyObject* x) {
  PyNumberMethods *m;
  const char *name = NULL;
  PyObject *res = NULL;
#if PY_VERSION_HEX < 0x03000000
  if (PyInt_Check(x) || PyLong_Check(x))
#else
  if (PyLong_Check(x))
#endif
    return Py_INCREF(x), x;
  m = Py_TYPE(x)->tp_as_number;
#if PY_VERSION_HEX < 0x03000000
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Int(x);
  }
  else if (m && m->nb_long) {
    name = "long";
    res = PyNumber_Long(x);
  }
#else
  if (m && m->nb_int) {
    name = "int";
    res = PyNumber_Long(x);
  }
#endif
  if (res) {
#if PY_VERSION_HEX < 0x03000000
    if (!PyInt_Check(res) && !PyLong_Check(res)) {
#else
    if (!PyLong_Check(res)) {
#endif
      PyErr_Format(PyExc_TypeError,
                   "__%s__ returned non-%s (type %.200s)",
                   name, name, Py_TYPE(res)->tp_name);
      Py_DECREF(res);
      return NULL;
    }
  }
  else if (!PyErr_Occurred()) {
    PyErr_SetString(PyExc_TypeError,
                    "an integer is required");
  }
  return res;
}

static CYTHON_INLINE Py_ssize_t __Pyx_PyIndex_AsSsize_t(PyObject* b) {
  Py_ssize_t ival;
  PyObject* x = PyNumber_Index(b);
  if (!x) return -1;
  ival = PyInt_AsSsize_t(x);
  Py_DECREF(x);
  return ival;
}

static CYTHON_INLINE PyObject * __Pyx_PyInt_FromSize_t(size_t ival) {
#if PY_VERSION_HEX < 0x02050000
   if (ival <= LONG_MAX)
       return PyInt_FromLong((long)ival);
   else {
       unsigned char *bytes = (unsigned char *) &ival;
       int one = 1; int little = (int)*(unsigned char*)&one;
       return _PyLong_FromByteArray(bytes, sizeof(size_t), little, 0);
   }
#else
   return PyInt_FromSize_t(ival);
#endif
}

static CYTHON_INLINE size_t __Pyx_PyInt_AsSize_t(PyObject* x) {
   unsigned PY_LONG_LONG val = __Pyx_PyInt_AsUnsignedLongLong(x);
   if (unlikely(val == (unsigned PY_LONG_LONG)-1 && PyErr_Occurred())) {
       return (size_t)-1;
   } else if (unlikely(val != (unsigned PY_LONG_LONG)(size_t)val)) {
       PyErr_SetString(PyExc_OverflowError,
                       "value too large to convert to size_t");
       return (size_t)-1;
   }
   return (size_t)val;
}


#endif /* Py_PYTHON_H */
